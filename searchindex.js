Search.setIndex({"docnames": ["README", "api-overview", "architecture", "autoapi/index", "autoapi/mnoptical/dataplane/index", "autoapi/mnoptical/edfa_params/index", "autoapi/mnoptical/examples/config_lroadmring/index", "autoapi/mnoptical/examples/dbgtest/index", "autoapi/mnoptical/examples/index", "autoapi/mnoptical/examples/lroadmring/index", "autoapi/mnoptical/examples/roadm_with_amps/index", "autoapi/mnoptical/examples/simplelink/index", "autoapi/mnoptical/examples/singlelink/index", "autoapi/mnoptical/examples/singleroadm/index", "autoapi/mnoptical/examples/sixnodestopo/index", "autoapi/mnoptical/examples/testattenuator/index", "autoapi/mnoptical/examples/unilinear1/index", "autoapi/mnoptical/examples/unilinear2/index", "autoapi/mnoptical/examples/uniring/index", "autoapi/mnoptical/examples/uniroadmchain/index", "autoapi/mnoptical/index", "autoapi/mnoptical/link/index", "autoapi/mnoptical/network/index", "autoapi/mnoptical/node/index", "autoapi/mnoptical/ofcdemo/Control_Test_Lum/index", "autoapi/mnoptical/ofcdemo/Control_Test_Mininet_REST/index", "autoapi/mnoptical/ofcdemo/Demo_Control/index", "autoapi/mnoptical/ofcdemo/Demo_Control_2/index", "autoapi/mnoptical/ofcdemo/Simulation_API/index", "autoapi/mnoptical/ofcdemo/apsp/index", "autoapi/mnoptical/ofcdemo/demo/index", "autoapi/mnoptical/ofcdemo/demo_2021/index", "autoapi/mnoptical/ofcdemo/demo_hwtopo/index", "autoapi/mnoptical/ofcdemo/demolib/index", "autoapi/mnoptical/ofcdemo/demolib_2021/index", "autoapi/mnoptical/ofcdemo/fakecontroller/index", "autoapi/mnoptical/ofcdemo/hwtopo/index", "autoapi/mnoptical/ofcdemo/index", "autoapi/mnoptical/ofcdemo/lroadm/index", "autoapi/mnoptical/ofcdemo/lumentum_NETCONF_API/index", "autoapi/mnoptical/ofcdemo/netconfserver/index", "autoapi/mnoptical/ofcdemo/simpledemo/index", "autoapi/mnoptical/rest/index", "autoapi/mnoptical/terminal_params/index", "autoapi/mnoptical/topo/cian_small_linear/index", "autoapi/mnoptical/topo/cost239/index", "autoapi/mnoptical/topo/deutsche_telekom/index", "autoapi/mnoptical/topo/helper_funcs/index", "autoapi/mnoptical/topo/index", "autoapi/mnoptical/topo/linear/index", "autoapi/mnoptical/topo/linear_multiloc/index", "autoapi/mnoptical/topo/linear_params/index", "autoapi/mnoptical/topo/ofc_demo/index", "autoapi/mnoptical/topo/ring_topology/index", "autoapi/mnoptical/units/index", "autoapi/mnoptical/visualization/index", "autoapi/mnoptical/visualize_topo/index", "index", "tutorial", "visualization", "walkthrough"], "filenames": ["README.md", "api-overview.md", "architecture.md", "autoapi/index.rst", "autoapi/mnoptical/dataplane/index.rst", "autoapi/mnoptical/edfa_params/index.rst", "autoapi/mnoptical/examples/config_lroadmring/index.rst", "autoapi/mnoptical/examples/dbgtest/index.rst", "autoapi/mnoptical/examples/index.rst", "autoapi/mnoptical/examples/lroadmring/index.rst", "autoapi/mnoptical/examples/roadm_with_amps/index.rst", "autoapi/mnoptical/examples/simplelink/index.rst", "autoapi/mnoptical/examples/singlelink/index.rst", "autoapi/mnoptical/examples/singleroadm/index.rst", "autoapi/mnoptical/examples/sixnodestopo/index.rst", "autoapi/mnoptical/examples/testattenuator/index.rst", "autoapi/mnoptical/examples/unilinear1/index.rst", "autoapi/mnoptical/examples/unilinear2/index.rst", "autoapi/mnoptical/examples/uniring/index.rst", "autoapi/mnoptical/examples/uniroadmchain/index.rst", "autoapi/mnoptical/index.rst", "autoapi/mnoptical/link/index.rst", "autoapi/mnoptical/network/index.rst", "autoapi/mnoptical/node/index.rst", "autoapi/mnoptical/ofcdemo/Control_Test_Lum/index.rst", "autoapi/mnoptical/ofcdemo/Control_Test_Mininet_REST/index.rst", "autoapi/mnoptical/ofcdemo/Demo_Control/index.rst", "autoapi/mnoptical/ofcdemo/Demo_Control_2/index.rst", "autoapi/mnoptical/ofcdemo/Simulation_API/index.rst", "autoapi/mnoptical/ofcdemo/apsp/index.rst", "autoapi/mnoptical/ofcdemo/demo/index.rst", "autoapi/mnoptical/ofcdemo/demo_2021/index.rst", "autoapi/mnoptical/ofcdemo/demo_hwtopo/index.rst", "autoapi/mnoptical/ofcdemo/demolib/index.rst", "autoapi/mnoptical/ofcdemo/demolib_2021/index.rst", "autoapi/mnoptical/ofcdemo/fakecontroller/index.rst", "autoapi/mnoptical/ofcdemo/hwtopo/index.rst", "autoapi/mnoptical/ofcdemo/index.rst", "autoapi/mnoptical/ofcdemo/lroadm/index.rst", "autoapi/mnoptical/ofcdemo/lumentum_NETCONF_API/index.rst", "autoapi/mnoptical/ofcdemo/netconfserver/index.rst", "autoapi/mnoptical/ofcdemo/simpledemo/index.rst", "autoapi/mnoptical/rest/index.rst", "autoapi/mnoptical/terminal_params/index.rst", "autoapi/mnoptical/topo/cian_small_linear/index.rst", "autoapi/mnoptical/topo/cost239/index.rst", "autoapi/mnoptical/topo/deutsche_telekom/index.rst", "autoapi/mnoptical/topo/helper_funcs/index.rst", "autoapi/mnoptical/topo/index.rst", "autoapi/mnoptical/topo/linear/index.rst", "autoapi/mnoptical/topo/linear_multiloc/index.rst", "autoapi/mnoptical/topo/linear_params/index.rst", "autoapi/mnoptical/topo/ofc_demo/index.rst", "autoapi/mnoptical/topo/ring_topology/index.rst", "autoapi/mnoptical/units/index.rst", "autoapi/mnoptical/visualization/index.rst", "autoapi/mnoptical/visualize_topo/index.rst", "index.rst", "tutorial.md", "visualization.md", "walkthrough.md"], "titles": ["Welcome to Mininet-Optical", "API Overview", "Architecture Overview", "API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.dataplane</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.edfa_params</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.examples.config_lroadmring</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.examples.dbgtest</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.examples</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.examples.lroadmring</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.examples.roadm_with_amps</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.examples.simplelink</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.examples.singlelink</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.examples.singleroadm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.examples.sixnodestopo</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.examples.test-attenuator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.examples.unilinear1</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.examples.unilinear2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.examples.uniring</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.examples.uniroadmchain</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.link</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.network</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.node</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.ofcdemo.Control_Test_Lum</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.ofcdemo.Control_Test_Mininet_REST</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.ofcdemo.Demo_Control</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.ofcdemo.Demo_Control_2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.ofcdemo.Simulation_API</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.ofcdemo.apsp</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.ofcdemo.demo</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.ofcdemo.demo_2021</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.ofcdemo.demo_hwtopo</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.ofcdemo.demolib</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.ofcdemo.demolib_2021</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.ofcdemo.fakecontroller</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.ofcdemo.hwtopo</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.ofcdemo</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.ofcdemo.lroadm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.ofcdemo.lumentum_NETCONF_API</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.ofcdemo.netconfserver</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.ofcdemo.simpledemo</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.rest</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.terminal_params</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.topo.cian_small_linear</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.topo.cost239</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.topo.deutsche_telekom</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.topo.helper_funcs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.topo</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.topo.linear</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.topo.linear_multiloc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.topo.linear_params</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.topo.ofc_demo</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.topo.ring_topology</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.units</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.visualization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.visualize_topo</span></code>", "Mininet-Optical Documentation", "Tutorial", "Visualization", "Installation and Walkthrough"], "terms": {"i": [0, 1, 2, 4, 6, 9, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 33, 34, 35, 36, 38, 39, 42, 58, 59, 60], "prototyp": [0, 35], "implement": [0, 2, 23, 36, 40, 58], "an": [0, 1, 2, 4, 10, 12, 15, 16, 22, 23, 25, 26, 27, 29, 33, 34, 35, 39, 42, 47, 49, 58, 59, 60], "emul": [0, 1, 2, 4, 11, 23, 41, 57, 59, 60], "packet": [0, 1, 2, 11, 18, 25, 29, 42, 58, 60], "softwar": [0, 1, 2, 58], "defin": [0, 1, 2, 23, 43], "network": [0, 1, 2, 3, 4, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 23, 25, 26, 27, 29, 33, 34, 40, 42, 44, 45, 49, 50, 51, 52, 56, 58, 59, 60], "It": [0, 1, 4, 58, 59], "includ": [0, 21, 23, 58, 60], "simul": [0, 1, 2, 4, 16, 23, 40, 57], "transmiss": [0, 2, 21, 23, 56, 58], "physic": [0, 2, 4, 23, 41, 58], "base": [0, 1, 2, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 28, 33, 34, 35, 36, 38, 39, 40, 42, 60], "gn": [0, 21], "model": [0, 2, 4, 9, 21, 23, 33, 36, 58], "dataplan": [0, 3, 20, 23, 36, 38, 41, 58, 59, 60], "extend": [0, 1, 2, 33], "element": [0, 1, 2, 21, 40, 58], "link": [0, 1, 3, 4, 9, 11, 12, 13, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 29, 33, 34, 36, 42, 46, 49, 60], "simpl": [0, 1, 4, 6, 9, 10, 11, 12, 13, 14, 19, 25, 29, 32, 35, 38, 40, 42, 57, 58], "sdn": [0, 2, 25, 29, 35, 42, 57, 58, 59], "control": [0, 2, 4, 6, 21, 23, 25, 26, 27, 28, 29, 32, 35, 39, 41, 42, 57, 58, 59, 60], "plane": [0, 4, 41, 42, 60], "The": [0, 1, 2, 4, 18, 21, 25, 29, 35, 56, 58, 59, 60], "mai": [0, 1, 4, 16, 35, 58, 60], "us": [0, 1, 2, 4, 6, 9, 11, 12, 16, 19, 21, 23, 25, 26, 27, 28, 29, 35, 41, 56, 58, 59, 60], "independ": [0, 23], "part": [0, 36, 57], "thi": [0, 1, 2, 3, 4, 6, 10, 11, 12, 16, 17, 18, 19, 22, 23, 26, 27, 33, 35, 38, 41, 42, 56, 58, 59, 60], "enabl": [0, 2, 6, 21, 25, 29, 58], "end": [0, 58], "roadm": [0, 1, 2, 4, 6, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 33, 34, 35, 36, 38, 39, 40, 41, 42, 46, 47, 49, 56, 58, 59, 60], "transceiv": [0, 1, 4, 6, 10, 12, 14, 16, 17, 18, 21, 22, 23, 35, 36, 59, 60], "fiber": [0, 2, 4, 12, 26, 27, 33, 34, 47, 49, 58, 60], "span": [0, 1, 4, 9, 12, 13, 21, 22, 23, 26, 27, 33, 34, 45, 46, 47, 49, 58, 60], "edfa": [0, 2, 22, 23, 39, 40, 58, 60], "openflow": [0, 2, 6, 25, 29, 35, 58], "switch": [0, 1, 2, 4, 6, 9, 12, 23, 24, 26, 27, 28, 35, 42, 58, 60], "ethernet": [0, 1, 2, 4, 6, 9, 12, 18, 58, 60], "manag": [0, 2], "both": [0, 4, 58], "document": [0, 3, 60], "avail": [0, 59, 60], "org": [0, 1], "packag": 0, "exampl": [0, 1, 3, 20, 58, 59, 60], "sampl": 0, "script": [0, 1, 6, 9, 10, 11, 12, 13, 18, 23, 35, 57, 58, 59], "test": [0, 1, 4, 7, 9, 10, 11, 12, 13, 16, 17, 18, 19, 25, 26, 27, 32, 33, 34, 35, 40, 58, 60], "mode": [0, 18, 23, 40, 56, 57, 59, 60], "doc": [0, 1], "sphinx": [0, 3], "onos_rest_api": 0, "ono": [0, 35, 58], "cli": [0, 1, 2, 4, 16, 17, 18, 33, 34, 59, 60], "tool": [0, 2, 57], "rest": [0, 3, 4, 6, 11, 12, 20, 35, 57, 58, 59, 60], "proxi": [0, 35], "ofc20": 0, "demo": [0, 3, 4, 20, 25, 29, 31, 33, 34, 36, 37, 41, 42, 58], "opticalemul": 0, "southbound": 0, "driver": 0, "dist": 0, "present": [0, 1], "creat": [0, 1, 2, 3, 4, 10, 11, 15, 16, 17, 18, 22, 23, 39, 47, 49, 56, 58, 59, 60], "make": [0, 2, 35, 60], "py": [0, 1, 4, 6, 7, 9, 11, 12, 13, 14, 16, 17, 18, 19, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 59, 60], "edfa_param": [0, 3, 20], "wavelength": [0, 21, 23], "depend": [0, 13, 14, 23, 26, 27, 58, 60], "gain": [0, 4, 21, 23, 33, 42], "function": [0, 1, 23, 58, 59, 60], "contain": [0, 2, 3, 23, 29], "node": [0, 1, 3, 4, 6, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 25, 26, 27, 28, 29, 33, 35, 39, 41, 42, 44, 46, 47, 49, 50, 51, 52, 58, 59, 60], "agent": [0, 4, 40], "extern": [0, 2, 58], "unit": [0, 3, 20, 23], "measur": 0, "terminal_param": [0, 3, 20], "paramet": [0, 1, 21, 23, 39, 44, 45, 49, 50, 51, 52, 54, 56, 58, 59], "termin": [0, 1, 2, 4, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 23, 25, 28, 29, 33, 34, 35, 36, 42, 46, 58, 60], "visualize_topo": [0, 3, 20], "visual": [0, 3, 20, 56, 57], "support": [0, 4, 7, 22, 23, 42, 57, 58, 59, 60], "can": [0, 1, 2, 4, 11, 13, 14, 19, 21, 23, 58, 59, 60], "also": [0, 1, 2, 4, 10, 12, 36, 58, 59, 60], "ofcdemo": [0, 3, 6, 16, 17, 18, 20, 58], "relat": 0, "our": [0, 1, 4, 25, 29, 33, 34, 40, 58], "ofc": [0, 25, 29, 30, 31, 33, 34, 36], "": [0, 1, 2, 4, 18, 23, 25, 29, 33, 35, 40, 42, 58, 60], "topo": [0, 1, 3, 4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26, 27, 33, 34, 36], "topologi": [0, 9, 10, 11, 12, 13, 14, 16, 17, 30, 31, 33, 34, 36, 41, 46, 56, 57, 58, 59, 60], "makefil": 0, "ha": [0, 1, 2, 57, 58, 59, 60], "clean": [0, 1, 4, 23, 39], "instal": [0, 1, 4, 23, 24, 26, 28, 35, 42, 56, 57, 58], "devel": 0, "target": 0, "requir": [0, 1, 23, 45, 49, 56, 58, 59, 60], "txt": 0, "been": [0, 1, 57, 59, 60], "develop": [0, 2, 25, 29, 57], "from": [0, 1, 4, 10, 18, 21, 23, 24, 25, 26, 27, 29, 32, 33, 42, 56, 57, 58, 59, 60], "depart": [0, 57], "energi": [0, 57], "under": [0, 21, 57], "grant": [0, 57], "de": [0, 57], "sc0015867": [0, 57], "nation": [0, 57], "scienc": [0, 57], "foundat": [0, 57], "cian": [0, 57], "erc": [0, 57], "cosmo": [0, 4, 36, 57], "pawr": [0, 57], "platform": [0, 57], "cosm": [0, 57], "ic": [0, 57], "project": [0, 21, 57, 58], "cn": [0, 57], "1827923": [0, 57], "oac": [0, 57], "2029295": [0, 57], "2112562": [0, 57], "And": [0, 57], "ireland": [0, 57], "through": [0, 4, 33, 57, 58], "connect": [0, 1, 2, 4, 6, 11, 12, 13, 14, 16, 17, 18, 21, 23, 33, 34, 35, 39, 40, 42, 57, 58, 60], "centr": [0, 57], "13": [0, 57, 58], "rc": [0, 57], "2077_p2": [0, 57], "18": [0, 23, 25, 26, 29, 57, 58], "ri": [0, 57], "5721": [0, 57], "14": [0, 57, 58], "ia": [0, 57], "527": [0, 57], "section": [1, 60], "provid": [1, 4, 58], "we": [1, 4, 11, 16, 17, 18, 21, 23, 25, 29, 58, 59, 60], "discuss": 1, "gener": [1, 2, 3, 4, 58], "linear": [1, 3, 10, 16, 17, 20, 23, 33, 34, 41, 48, 58], "its": [1, 2, 58, 59], "logic": 1, "regular": [1, 60], "If": [1, 4, 23, 58, 59, 60], "you": [1, 58, 59, 60], "ar": [1, 2, 4, 9, 12, 13, 16, 17, 18, 22, 23, 25, 26, 27, 29, 33, 34, 58, 59, 60], "unfamiliar": 1, "wish": [1, 58], "read": [1, 58], "introduct": 1, "On": [1, 60], "complet": [1, 58, 60], "follow": [1, 4, 11, 58, 59, 60], "set": [1, 4, 23, 24, 32, 33, 35, 42, 57, 58], "command": [1, 4, 11, 16, 17, 18, 33, 58, 59], "have": [1, 16, 25, 29, 58, 60], "readi": 1, "configur": [1, 2, 4, 6, 11, 12, 13, 14, 16, 17, 18, 19, 23, 25, 26, 27, 28, 29, 33, 34, 35, 36, 40, 42, 58, 60], "take": [1, 58], "look": [1, 23, 39, 42, 58, 60], "like": [1, 9, 36, 38, 40, 58, 60], "h1": [1, 10, 11, 12, 13, 14, 19, 33, 34, 58, 60], "t1": [1, 10, 11, 12, 13, 19, 33, 34, 58, 60], "boost": [1, 4, 10, 11, 12, 13, 15, 23, 39, 40, 46, 47, 49, 58, 60], "25km": [1, 11, 12, 13, 58, 60], "t2": [1, 10, 11, 12, 13, 19, 33, 34, 58, 60], "h2": [1, 10, 11, 12, 13, 14, 19, 33, 34, 58, 60], "let": 1, "simplelink": [1, 3, 8, 20, 58], "see": [1, 23, 58, 59, 60], "how": [1, 10, 13, 14, 25, 29, 57, 58, 60], "done": [1, 58], "sinc": [1, 2, 25, 29, 58, 60], "object": [1, 4, 10, 15, 21, 22, 23, 24, 25, 28, 35, 42, 44, 45, 47, 49, 50, 51, 52, 56, 58, 60], "orient": 1, "program": [1, 6, 25, 29, 35], "approach": [1, 2, 58], "need": [1, 11, 16, 17, 21, 23, 56, 58, 59, 60], "class": [1, 56, 60], "name": [1, 4, 9, 22, 23, 25, 29, 32, 33, 34, 35, 36, 38, 39, 58, 59, 60], "simplelinktopo": [1, 11], "statement": [1, 56], "import": [1, 56, 59], "rememb": [1, 58], "templat": [1, 33, 34], "instanti": [1, 22], "which": [1, 2, 4, 56, 58, 59, 60], "pass": [1, 4, 10, 23, 40, 58], "constructor": [1, 4, 10, 58], "build": [1, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 33, 34, 36, 44, 45, 46, 49, 50, 51, 52, 53, 58], "desir": 1, "def": [1, 23], "self": [1, 4, 23, 35], "In": [1, 21, 58, 59, 60], "first": [1, 40, 58], "host": [1, 2, 4, 9, 12, 18, 33, 34, 36, 58, 60], "addhost": 1, "purpos": [1, 33, 59], "thereaft": 1, "interfac": [1, 2, 4, 23, 58], "between": [1, 11, 12, 13, 16, 21, 23, 33, 42, 46, 58, 60], "further": [1, 2], "place": 1, "transmit": [1, 4, 10, 23, 58], "receiv": [1, 4, 23, 58, 60], "signal": [1, 2, 4, 16, 17, 19, 21, 23, 24, 26, 27, 28, 33, 40, 58, 59, 60], "therefor": [1, 59], "param": [1, 4, 9, 10, 15, 21, 22, 23, 33, 34, 35, 36, 40, 47, 49, 56], "tx1": 1, "0": [1, 4, 6, 9, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 29, 33, 34, 35, 36, 39, 45, 47, 49, 50, 51, 52, 54, 56, 60], "dbm": [1, 4, 9, 16, 17, 18, 19, 36, 44, 45, 49, 50, 51, 52, 54, 58, 59], "c": [1, 54, 58], "addswitch": [1, 4, 16, 17], "cl": [1, 4, 16, 17], "note": [1, 9, 13, 23, 26, 27, 39, 59, 60], "just": [1, 4, 25, 29, 36, 58], "data": [1, 21, 23, 28, 40], "valu": [1, 23, 35, 54, 56, 58], "later": [1, 60], "actual": [1, 16, 19, 58], "case": [1, 2, 19, 22, 59], "consist": [1, 4, 12, 33, 34, 60], "list": [1, 4, 6, 23, 25, 26, 27, 29, 33, 34, 35, 42, 54, 60], "singl": [1, 2, 10, 11, 12, 13, 14, 18, 21, 26, 27, 33, 34, 36, 40, 58, 60], "default": [1, 4, 9, 13, 21, 23, 36, 58, 59], "power": [1, 4, 9, 16, 17, 18, 19, 21, 23, 25, 26, 27, 28, 29, 33, 35, 36, 40, 44, 45, 49, 50, 51, 52, 56, 58, 59], "0dbm": 1, "band": [1, 23], "though": [1, 17], "option": [1, 4, 22, 23, 26, 36, 58, 59, 60], "current": [1, 4, 22, 42, 58, 59], "ignor": [1, 58], "reus": 1, "same": [1, 2, 4, 23, 25, 29, 58, 59], "ok": [1, 58], "separ": [1, 56, 60], "them": [1, 4, 16, 33, 34, 58], "At": [1, 60], "point": [1, 18, 23, 58, 59, 60], "all": [1, 4, 21, 23, 25, 28, 29, 33, 34, 35, 58, 59, 60], "do": [1, 23, 58], "now": [1, 4, 12, 58, 60], "togeth": 1, "form": 1, "work": [1, 2, 25, 29, 60], "wdm": [1, 4, 9, 36, 58], "conclud": [1, 58], "specif": [1, 58, 59], "method": [1, 10, 16, 17, 21, 33, 34, 58], "addlink": [1, 4, 16, 17, 33, 34, 58], "port2": [1, 4, 9, 16, 17, 26, 27, 35, 36, 42], "1": [1, 3, 4, 6, 9, 10, 11, 12, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 33, 34, 35, 36, 38, 39, 47, 50, 51, 54, 56, 60], "opticallink": [1, 4, 33, 34, 42], "port1": [1, 4, 9, 16, 17, 26, 27, 35, 36, 42], "2": [1, 4, 11, 12, 16, 17, 18, 23, 26, 33, 34, 39, 44, 46, 60], "target_gain": [1, 23, 39], "17": [1, 23, 58], "db": [1, 4, 15, 23, 43, 54, 58, 60], "25": [1, 4, 26, 27, 58], "km": [1, 4, 21, 26, 27, 33, 34, 47, 49, 54], "isn": 1, "t": [1, 18, 23, 25, 29, 58, 60], "enough": [1, 58], "itself": 1, "handl": [1, 4, 42, 45, 49, 58], "__main__": 1, "__name__": 1, "cleanup": [1, 39], "setloglevel": 1, "info": [1, 42], "up": [1, 21, 24, 30, 31, 32, 39, 40, 42, 57, 58], "ani": [1, 16, 25, 29, 35, 58, 59, 60], "stale": 1, "state": [1, 21, 23, 33, 59], "tell": [1, 42, 58], "log": [1, 42, 58], "system": [1, 2, 11, 21, 23, 58], "show": [1, 10, 58], "inform": [1, 4, 42, 58, 59, 60], "messag": [1, 59], "progress": [1, 58], "next": [1, 23, 58], "net": [1, 4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 29, 30, 31, 33, 34, 35, 36, 40, 41, 42, 45, 47, 49, 55, 56, 58, 60], "re": [1, 58], "go": [1, 33, 58], "server": [1, 40, 42, 56], "restserv": [1, 42], "well": [1, 12, 58, 60], "For": [1, 4, 16, 17, 23, 58, 59, 60], "print": [1, 4, 33, 40, 58], "out": [1, 2, 4, 15, 18, 23, 33, 58, 59, 60], "docstr": 1, "header": 1, "__doc__": 1, "either": [1, 13, 14, 58], "run": [1, 2, 9, 10, 11, 12, 13, 18, 23, 29, 40, 57, 58], "invok": [1, 35], "otherwis": 1, "argv": 1, "els": 1, "after": [1, 23, 56, 58, 59, 60], "exit": [1, 58, 60], "halt": 1, "shut": [1, 40], "down": [1, 40], "stop": [1, 40, 42, 58], "learn": [1, 58, 60], "about": [1, 58], "design": [1, 2, 16, 23, 58, 60], "process": [1, 2, 23], "onc": [1, 60], "execut": [1, 58, 60], "abl": [1, 58, 60], "commun": [1, 58], "tutori": [1, 57], "line": [1, 4, 10, 18, 33, 34, 40, 46, 59], "curl": [1, 11, 12, 58, 60], "util": [1, 60], "transfer": 1, "url": [1, 58], "syntax": 1, "address": [1, 11, 18, 33, 34], "local": [1, 4, 18, 33, 34, 35], "machin": [1, 2, 58], "identifi": [1, 23, 58], "built": [1, 56, 60], "localhost": [1, 11, 12, 35, 60], "8080": [1, 11, 12, 35, 60], "t3": [1, 13, 33, 34, 58], "r1": [1, 10, 13, 24, 32, 33, 34, 45, 47, 49, 58], "essecti": 1, "channel": [1, 4, 6, 10, 11, 12, 16, 17, 18, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 39, 40, 56, 58, 60], "oper": [1, 16, 17, 18, 23, 39, 44, 45, 49, 50, 51, 52, 58], "port": [1, 4, 6, 16, 18, 22, 23, 25, 26, 27, 29, 35, 36, 38, 40, 42, 55, 56, 58, 59, 60], "per": [1, 23, 26, 29, 43, 58], "rout": [1, 4, 16, 17, 23, 25, 26, 27, 29, 58], "ethport": [1, 4, 11, 12, 16, 17, 35, 60], "wdmport": [1, 4, 11, 12, 35, 60], "where": [1, 58], "x": [1, 58, 60], "sign": 1, "step": 1, "turn": [1, 2, 4, 25, 28, 58], "turn_on": [1, 4, 11, 12, 23, 35, 42, 60], "Not": 1, "reset": [1, 2, 4, 21, 23, 33, 35, 42, 60], "ensur": 1, "previou": [1, 23], "rule": [1, 4, 6, 23, 24, 26, 27, 28, 35, 42, 58, 60], "remov": [1, 4, 21, 23, 26, 27, 42], "add": [1, 2, 4, 9, 10, 15, 16, 17, 18, 22, 23, 33, 34, 36, 40, 47, 49], "monitor": [1, 4, 12, 15, 19, 23, 25, 26, 27, 28, 29, 33, 42, 58, 59, 60], "aid": 1, "howev": [1, 60], "thei": [1, 58], "analysi": [1, 21], "debug": [1, 4, 7, 23, 40, 59], "allow": [1, 2], "hope": 1, "pleas": [1, 58], "check": [1, 22, 23, 26, 27, 33, 58, 60], "modul": [1, 2, 57], "mininet": [2, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 40, 42, 58, 59], "optic": [2, 4, 11, 12, 13, 14, 16, 17, 18, 21, 23, 25, 29, 33, 34, 40, 42, 58, 59], "seek": 2, "expand": 2, "capabl": [2, 40], "cabl": [2, 16], "reconfigur": [2, 23], "drop": [2, 4, 18, 23, 25, 29, 33, 34, 36, 58, 60], "multiplex": [2, 21, 23, 36], "erbium": 2, "dope": 2, "amplifi": [2, 4, 10, 12, 15, 22, 23, 33, 34, 42, 46, 47, 49, 56, 58, 59, 60], "realist": [2, 58], "virtual": [2, 58], "real": [2, 16, 35, 59], "kernel": 2, "applic": 2, "code": [2, 21, 60], "vm": [2, 58], "cloud": 2, "nativ": [2, 60], "veri": [2, 11, 58, 60], "easi": [2, 35], "interact": 2, "api": [2, 4, 11, 12, 35, 38, 39, 57, 59, 60], "custom": [2, 23], "share": 2, "other": [2, 4, 6, 42, 57, 58, 60], "deploi": 2, "hardwar": [2, 4, 36, 38, 58, 59], "teach": 2, "research": 2, "conveni": [2, 4, 16, 17, 33, 34, 58], "experi": 2, "p4": 2, "figur": [2, 23, 58, 59], "equival": 2, "illustr": 2, "goal": [2, 25, 29], "testb": [2, 4, 36, 59], "u": 2, "digit": 2, "twin": 2, "carri": 2, "environ": 2, "faster": 2, "time": [2, 26, 27, 58, 59], "fail": 2, "safe": 2, "origin": [2, 23, 33], "condit": 2, "repeat": 2, "error": [2, 23, 58], "abstract": [2, 4], "layer": [2, 23], "over": [2, 4], "linux": [2, 58, 60], "o": 2, "python": [2, 35, 57, 58, 59, 60], "librari": 2, "variou": 2, "devic": [2, 4, 58, 60], "propag": [2, 21, 23, 33], "user": [2, 58], "modifi": [2, 39, 58, 59], "insid": 2, "via": [2, 6, 35, 58], "algorithm": [2, 21, 25, 29, 58], "lightweight": 2, "cgroup": 2, "namespac": 2, "featur": [2, 16], "open": [2, 11, 25, 29, 56, 58, 60], "vswitch": [2, 25, 29], "veth": [2, 4], "pair": [2, 4, 13, 16, 17, 25, 29, 58], "northbound": 2, "overal": 2, "below": [2, 25, 29, 59], "page": [3, 57], "auto": 3, "mnoptic": [3, 57], "config_lroadmr": [3, 8, 20], "dbgtest": [3, 8, 20], "lroadmr": [3, 8, 20], "roadm_with_amp": [3, 8, 20], "singlelink": [3, 8, 20, 60], "singleroadm": [3, 8, 14, 20], "sixnodestopo": [3, 8, 20, 59], "unilinear1": [3, 8, 17, 20], "unilinear2": [3, 8, 20], "unir": [3, 8, 20], "uniroadmchain": [3, 8, 20], "control_test_lum": [3, 20, 37], "control_test_mininet_rest": [3, 20, 37], "demo_control": [3, 20, 37], "demo_control_2": [3, 20, 37], "simulation_api": [3, 20, 37], "apsp": [3, 20, 25, 37, 58], "demo_2021": [3, 20, 37], "demo_hwtopo": [3, 20, 37], "demolib": [3, 16, 17, 18, 20, 34, 37, 58], "demolib_2021": [3, 20, 37], "fakecontrol": [3, 20, 37, 58], "hwtopo": [3, 20, 37], "lroadm": [3, 9, 20, 32, 36, 37], "lumentum_netconf_api": [3, 6, 20, 37], "netconfserv": [3, 20, 37], "simpledemo": [3, 20, 37, 58], "cian_small_linear": [3, 20, 48], "cost239": [3, 20, 48], "deutsche_telekom": [3, 20, 48], "helper_func": [3, 20, 48], "linear_multiloc": [3, 20, 48], "linear_param": [3, 20, 48], "ofc_demo": [3, 20, 48], "ring_topologi": [3, 20, 48], "autoapi": 3, "repurpos": 4, "ov": [4, 35], "tclink": 4, "delai": 4, "simplic": 4, "assum": 4, "full": [4, 6, 16, 17, 18, 58, 59], "duplex": 4, "transpond": 4, "thes": 4, "am": [4, 42], "tx": [4, 23, 58], "rx": [4, 23, 58], "A": [4, 16, 17, 21, 23, 33, 34, 36, 38, 58], "downlink": [4, 16, 17, 18, 33, 34, 58], "colorless": 4, "directionless": 4, "simpleroadm": 4, "degre": [4, 16, 17, 18, 38], "two": [4, 11, 12, 16, 19, 21, 33, 46, 58, 60], "bidirect": [4, 9, 18, 33, 34, 49], "m": [4, 9, 21, 24, 26, 27, 47, 49], "001": [4, 24, 26, 27, 47, 49, 54], "opticalnet": 4, "__iter__": 4, "return": [4, 6, 9, 21, 22, 23, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 42, 44, 45, 47, 49, 50, 51, 52, 54, 56, 58], "iter": [4, 33], "addmonitor": 4, "addlinkcompon": 4, "arg": [4, 9, 16, 17, 21, 33, 34, 36, 38, 40, 42], "kwarg": [4, 9, 16, 17, 21, 33, 34, 36, 38, 39, 40, 42], "restsetripplehandl": 4, "queri": [4, 42], "setgain": [4, 33, 42], "call": [4, 23, 35, 42, 56, 58, 60], "set_rippl": [4, 42], "amp_nam": 4, "rippl": [4, 42], "restsetgainhandl": 4, "setgaincmd": 4, "ampnam": [4, 33, 34], "hack": 4, "phymonitor": 4, "stand": 4, "wait": 4, "fals": [4, 13, 15, 16, 17, 21, 23, 26, 27, 33, 34, 35, 36, 40, 47, 49, 50, 51], "exec": 4, "true": [4, 21, 23, 26, 42, 47, 58], "intf": [4, 58], "intflist": 4, "intfnam": 4, "pexec": 4, "restmonitor": [4, 59], "osnr": [4, 23, 28, 33, 35, 58, 59, 60], "__str__": [4, 38], "str": 4, "physpan": 4, "length": [4, 21, 25, 26, 27, 29, 33, 34, 45, 47, 49], "amp": [4, 23, 26, 27, 33, 34, 46, 47, 49], "none": [4, 10, 13, 15, 21, 22, 23, 26, 27, 35, 36, 38, 39, 40, 47, 49, 51, 55, 58, 60], "usabl": [4, 58], "amplif": [4, 23], "switchbas": 4, "dpid": 4, "listenport": [4, 35], "innamespac": 4, "isswitch": 4, "batch": 4, "phyparam": 4, "ovsswitch": 4, "modelclass": 4, "dpidbas": 4, "4096": 4, "cmd": [4, 35], "defaultdpid": 4, "static": [4, 9, 21, 22, 23, 25, 29, 33, 34, 36, 39, 44, 45, 46, 49, 50, 51, 53], "restportsdict": 4, "construct": [4, 33, 34], "dict": [4, 23, 25, 26, 27, 29, 39, 40, 42], "restresethandl": 4, "handler": [4, 42], "overrid": 4, "bank": 4, "some": [4, 12, 16, 24, 26, 27, 33, 34, 39, 40, 58, 60], "blockcooki": 4, "195952365": 4, "maketransceiv": 4, "txid": 4, "helper": [4, 45, 49, 58], "start": [4, 23, 30, 31, 33, 40, 42, 57, 58, 60], "_control": 4, "without": [4, 6, 16, 19, 58], "clear": [4, 42], "configtx": 4, "txnum": 4, "index": [4, 23, 56, 57, 58], "number": [4, 18, 23, 44, 49, 50, 51, 52, 58], "restturnonhandl": 4, "restconnecthandl": 4, "wdminport": 4, "receivercallback": 4, "inport": [4, 6, 28, 40], "signalinfodict": 4, "callback": [4, 23], "phy": 4, "when": [4, 58], "block": [4, 23, 39, 58], "unblock": 4, "vlan": 4, "field": 4, "lambda": 4, "ruletupl": 4, "outport": [4, 6, 28, 40], "hashabl": 4, "tupl": [4, 21, 23], "phyreset": 4, "phyinstal": 4, "phyremov": 4, "restruleshandl": 4, "request": [4, 26, 35, 42], "restcleanmehandl": 4, "dpreset": 4, "initi": [4, 26], "dpflow": 4, "action": [4, 35], "flow": [4, 42], "dpinstal": 4, "dpremov": 4, "simplifi": [4, 58], "direct": [4, 13, 15, 16, 22, 23, 58], "bidirection": [4, 24, 32], "ad": [4, 12, 21, 22, 23, 58, 60], "while": [4, 58], "east": 4, "transit": 4, "west": 4, "3": [4, 16, 17, 18, 19, 25, 26, 29, 33, 34, 41, 49, 50, 51, 58, 60], "southeast": 4, "4": [4, 6, 9, 17, 23, 24, 26, 27, 33, 34, 36, 50, 58, 60], "southwest": 4, "updat": [4, 21, 23, 26, 27, 40, 59, 60], "localchannel": 4, "passchannel": 4, "tabl": 4, "opticalintf": 4, "tcintf": 4, "isinput": 4, "input": [4, 22, 23, 40, 56, 58, 59], "isoutput": 4, "output": [4, 22, 23, 40, 56, 58, 59], "opticalin": 4, "unidirect": [4, 9, 16, 17, 18, 19, 36, 58], "opticalout": 4, "src": [4, 6, 9, 16, 17, 18, 25, 26, 27, 29, 33, 34, 36], "dst": [4, 6, 9, 16, 17, 18, 25, 26, 27, 33, 34, 36], "boost1": 4, "boost2": 4, "natur": 4, "By": [4, 59], "revers": 4, "each": [4, 6, 14, 16, 17, 23, 25, 29, 33, 34, 58, 59], "term": 4, "amplfier": 4, "phylink1": 4, "phylink2": 4, "_parsearg": 4, "pars": [4, 39, 40], "_parsespan": 4, "n": [4, 6, 9, 18, 25, 29, 33, 34, 52], "canon": [4, 29], "wdmn": 4, "unidirectionalopticallink": 4, "unilink": 4, "amplifierpair": 4, "phyamplifi": 4, "phyamp1": 4, "phyamp2": 4, "combsourc": 4, "comb": [4, 36], "sourc": [4, 21, 22, 23, 26, 27, 36, 40, 60], "compon": [4, 23, 56, 58, 60], "mux": [4, 36], "half": [4, 38], "onli": [4, 22, 23, 42, 58], "opaqu": 4, "background": 4, "traffic": [4, 26, 27, 59], "4100": 4, "lineout": [4, 16, 17, 40], "4201": [4, 40], "addtermin": [4, 16, 17], "linetermin": [4, 23, 58], "cleanoptlink": 4, "disableipv6": 4, "disabl": 4, "ipv6": 4, "avoid": [4, 16, 17, 23, 58], "annoi": 4, "router": [4, 18, 25, 29, 33, 34, 42, 58], "solicit": 4, "dumpnet": 4, "dump": [4, 6, 58, 60], "formatsign": 4, "signalpow": 4, "dumplinkpow": 4, "twotransceivertopo": 4, "wai": [4, 16, 58], "amp1": [4, 12, 13, 58, 60], "50": [4, 33, 34, 39, 50], "amp2": [4, 12, 13, 58, 60], "twotransceivertest": 4, "ripple_funct": 5, "fibre_spectral_attenu": 5, "config_lroadrm": 6, "lumentumr": [6, 9], "allocchannel": 6, "map": [6, 32], "ch": [6, 23, 33, 40], "mesh": [6, 16, 17, 18, 33, 34, 58], "genconnect": 6, "loss": [6, 23, 39], "netconf": [6, 32, 35, 36, 38, 40], "string": [6, 10, 15, 16, 17, 21, 23, 33, 39, 40, 47, 49], "chmap": 6, "dedic": 6, "collis": 6, "configroadm": 6, "configtermin": 6, "configswitch": 6, "inbound": 6, "outbound": 6, "config": [6, 9, 10, 11, 12, 13, 16, 17, 18, 40, 42, 58, 59, 60], "dumpchmap": 6, "ring": [9, 14, 18, 33, 34, 58, 59], "usernam": [9, 36, 38, 39, 40], "admin": [9, 38], "password": [9, 36, 38, 39, 40], "sslkeyfil": [9, 40], "testcert": 9, "fakeserv": [9, 40], "kei": [9, 21, 25, 29, 40], "lumentumbas": 9, "lumentum": [9, 26, 36, 38, 39, 40], "hn": 9, "sn": 9, "tn": 9, "rn": 9, "ethbas": 9, "hostport": 9, "200": [9, 26, 27], "txbase": 9, "100": [9, 26, 27, 33, 60], "rxbase": 9, "listenportbas": [9, 33, 34, 35], "6653": [9, 33, 34, 35], "wdmlink": [9, 16, 17, 33, 34, 36], "nodenam": [9, 33], "addnetworknod": 9, "addnodelink": 9, "intern": [9, 23], "unidrect": 9, "txcount": [9, 18, 33, 34, 36], "16": [9, 23, 26, 58], "64": 10, "67": 10, "preamp": [10, 15, 23, 39, 40, 47, 49], "72": 10, "74": 10, "s1": [10, 12, 13, 33, 34, 58, 60], "s2": [10, 12, 13, 33, 34, 58, 60], "add_amp": [10, 15, 47, 49], "node_nam": [10, 15, 47, 49], "type": [10, 15, 22, 47, 49, 58, 59], "gain_db": [10, 15, 23, 47, 49], "int": [10, 15, 23, 39, 47, 49], "float": [10, 15, 23, 26, 27, 47, 49, 54], "singleroadmtopo": [10, 13], "close": 11, "simplest": [11, 60], "fulli": [11, 60], "To": [11, 12, 59, 60], "anoth": [11, 58, 59, 60], "window": [11, 58, 59, 60], "bash": 11, "prompt": [11, 33, 58], "replac": 11, "ip": [11, 18, 32, 33, 34, 35, 58], "mn": [11, 12, 60], "slightli": [12, 39, 60], "more": [12, 16, 33, 58, 60], "complic": [12, 16, 18, 60], "complex": [12, 16, 60], "segment": [12, 26, 27, 47, 49, 60], "compens": [12, 26, 27, 33, 34, 47, 49, 60], "rather": [12, 19, 35, 58, 59, 60], "than": [12, 16, 17, 19, 35, 58, 60], "directli": [12, 60], "singlelinktopo": [12, 60], "three": [13, 14, 33, 34], "y": [13, 14, 58], "talk": [13, 14, 58], "h3": [13, 14, 33, 34, 58], "s3": [13, 33, 34, 58], "r2": [13, 33, 34, 45, 47, 49], "50km": [13, 33, 34, 45, 49, 58], "plotnet": [13, 14, 15, 58], "outfil": [13, 14, 15], "png": [13, 14, 15, 33, 58], "layout": [13, 15], "circo": [13, 15], "colormap": [13, 15], "linksperpair": 13, "5": [13, 23, 24, 26, 32, 33, 44, 58], "plot": [13, 14, 15, 33, 57, 58], "graph": [13, 14, 15, 25, 26, 27, 59], "max": [13, 26], "limit": 13, "sixroadmtopo": 14, "six": [14, 33, 59], "6": [14, 23, 26, 33, 34, 52, 58], "img": 15, "monitor_mod": [15, 23, 55], "multiroadmtopo": 15, "operational_pow": [15, 23], "get_monitor_pow": 15, "confignet": [15, 19], "split": [16, 17], "uplink": [16, 17, 18, 33, 34, 58], "what": [16, 58], "want": [16, 23, 58, 59, 60], "interconnect": 16, "order": [16, 58, 60], "loop": [16, 23, 58], "bug": [16, 58], "doe": [16, 22, 23, 58, 59], "nice": 16, "minim": [16, 58], "expens": 16, "altern": [16, 36, 58], "simpler": [16, 17, 41], "vertic": 16, "bi": 16, "opticaltopo": [16, 17, 33, 34], "node1": [16, 17, 26, 27, 42, 58], "node2": [16, 17, 26, 27, 42, 58], "ethlink": [16, 17, 33, 34], "clarifi": [16, 17, 33, 34], "alia": [16, 17, 33, 34], "addroadm": [16, 17], "unilineartopo": 16, "opposit": [16, 58], "linein": [16, 17, 40], "addport": [16, 17, 36, 38], "dropport": [16, 17, 36, 38], "nodecount": [16, 17, 18, 36], "specifi": [16, 17, 18, 23, 26, 27, 33, 34, 42, 57, 58, 59], "count": [16, 17, 29], "root": [16, 17, 58], "star": [16, 17], "strategi": [16, 17], "assign": [16, 17, 26, 27, 58], "conflict": [16, 17, 23], "everyth": [16, 17, 58], "eastbound": [16, 17], "westbound": [16, 17], "opticalcli": [16, 17, 18, 33, 60], "do_config": [16, 17, 18], "_line": [16, 17, 18, 33], "somewhat": [17, 18, 38], "becaus": [17, 18, 58], "middl": [17, 58, 60], "endpoint": [17, 29, 58], "still": [17, 60], "degr": 17, "unilineartopo2": 17, "eastin": 17, "eastout": 17, "westin": 17, "westout": 17, "j": [17, 56], "uniringtopo": 18, "parametr": 18, "r": 18, "fwd": 18, "configopticalnet": 18, "configpacketnet": 18, "linuxrout": [18, 58], "attach": 18, "subnet": [18, 33, 34, 58], "basic": [18, 58, 60], "32": [18, 58], "e": [18, 21, 23, 58, 59], "chain": 19, "intermedi": 19, "mainli": 19, "someth": [19, 58], "although": [19, 58], "re1": 19, "ren": 19, "rwn": 19, "rw1": 19, "roadmcount": 19, "spantupl": 21, "src_node": [21, 22, 23], "dst_node": [21, 22, 23], "src_out_port": [21, 22], "dst_in_port": [21, 22], "boost_amp": [21, 22], "srs_effect": 21, "debugg": [21, 23, 47, 50, 51], "refer": [21, 23, 57, 58], "futur": 21, "must": 21, "describ": [21, 22, 23, 58, 59], "__repr__": [21, 23, 35], "represent": [21, 23], "remove_optical_sign": [21, 23], "optical_sign": [21, 23], "include_optical_signal_in": [21, 23], "ase_nois": [21, 23], "nli_nois": [21, 23], "tup_kei": 21, "opticalsign": [21, 23], "level": [21, 23, 28, 58, 59], "ase": [21, 23, 58, 59], "nois": [21, 23], "nli": [21, 23, 58, 59], "compos": 21, "include_optical_signal_out": [21, 23], "optical_signals_out": 21, "is_last_port": [21, 23], "safe_switch": [21, 23], "across": 21, "boolean": [21, 23, 49], "fibre_typ": 21, "smf": 21, "20": [21, 23, 26, 39, 58], "id": [21, 23, 28, 58], "anonym": 21, "attenu": [21, 23, 39], "beta2": 21, "ref_wavelength": 21, "55e": 21, "06": [21, 54], "dispers": 21, "enter": 21, "p": [21, 33, 34, 54], "nm": [21, 54], "translat": 21, "gnpy": 21, "numpi": 21, "arrai": [21, 23], "1550nm": 21, "in_port": [21, 23], "set_input_port": [21, 23], "set_output_port": [21, 23], "srs_effect_model": 21, "comput": [21, 23], "taken": 21, "zirngibl": 21, "analyt": 21, "raman": 21, "effect": [21, 23], "massiv": 21, "divis": 21, "1998": 21, "equat": [21, 23], "7": [21, 58], "8": [21, 26, 58], "output_nonlinear_nois": 21, "structur": [21, 23], "gn_model": 21, "nonlinear": 21, "interfer": 21, "carrier": [21, 23], "eq": [21, 23], "120": 21, "arxiv": 21, "1209": 21, "0394": 21, "carrier_nli": 21, "amount": 21, "w": [21, 54], "psi_factor": 21, "interfering_carri": 21, "asymptotic_length": 21, "calcul": [21, 23, 29], "123": 21, "add_lt": 22, "lt": [22, 23], "autom": 22, "add_roadm": 22, "add_amplifi": 22, "amplifier_typ": [22, 23], "add_link": 22, "uni": 22, "destin": [22, 25, 26, 27, 29], "boost_amplif": 22, "find_link_and_out_port_from_nod": 22, "consid": [22, 23], "multipl": [22, 23, 58], "find_link_and_in_port_from_nod": 22, "find_link_from_nod": 22, "find_out_port_from_link": 22, "input_port_bas": 23, "output_port_bas": 23, "output_port": [23, 39], "input_port": [23, 39], "uid": 23, "out_port": 23, "remove_signal_from_out_port": 23, "port_out": 23, "reset_compon": 23, "dynam": 23, "human": 23, "readabl": 23, "monitor_queri": 23, "get_optical_sign": 23, "get": [23, 25, 29, 35, 40, 58, 60], "reset_transceiv": 23, "disassoci": 23, "add_transceiv": 23, "t_name": 23, "spectrum": [23, 59], "existing_transceiv": 23, "new": [23, 40], "set_modulation_format": 23, "modulation_format": 23, "format": [23, 29, 33, 58], "16_qam": 23, "tx_config": 23, "operational_power_dbm": 23, "assoc_tx_to_channel": 23, "associ": 23, "previous": 23, "creation": [23, 46], "assoc_channel": 23, "disassoc_tx_to_channel": 23, "transmitt": 23, "assoc_rx_to_channel": 23, "channel_id": 23, "disassoc_rx_to_channel": 23, "turn_off": 23, "ports_out": 23, "gosnr": [23, 25, 28, 29, 43, 58, 59, 60], "baud_rat": 23, "Will": 23, "verifi": [23, 58], "receiver_callback": 23, "signaldictinfo": 23, "tr_id": 23, "operation_pow": 23, "channel_spacing_nm": 23, "1e": [23, 54], "09": [23, 39, 54], "channel_spacing_h": 23, "50000000000": 23, "bandwidth": 23, "99792458": 23, "1000000000": 23, "16qam": 23, "bits_per_symbol": 23, "symbol_r": 23, "32000000000": 23, "rx_threshold_db": 23, "assoc_optical_sign": 23, "bit": [23, 26, 43], "symbol": [23, 43], "rate": [23, 43], "threshold": [23, 25, 28, 29, 43], "label": [23, 58], "spectrum_band_init_nm": 23, "1567": 23, "132556194459": 23, "spectrum_band_init_h": 23, "191300000000000": 23, "repr": [23, 35], "assoc_loc_in": 23, "loc": 23, "locat": [23, 58], "perform": 23, "mw": [23, 54], "launch": [23, 28, 58, 59, 60], "assoc_loc_out": 23, "preserv": 23, "switchrul": 23, "insertion_loss_db": 23, "reference_power_dbm": 23, "common": [23, 58], "That": 23, "wsss": 23, "exist": [23, 58], "remove_switch_rul": 23, "rule_in_port": 23, "rule_signal_index": 23, "rule_out_port": 23, "switch_tabl": 23, "check_switch_rul": 23, "signal_indic": 23, "equal": 23, "frequenc": [23, 39, 59], "so": [23, 25, 29, 58], "delet": [23, 24, 26, 27, 28], "alloc": [23, 29], "indic": [23, 58], "install_switch_rul": 23, "access": [23, 56, 57], "incom": 23, "update_switch_rul": 23, "signal_index": [23, 56], "new_port_out": 23, "unecessari": 23, "checkup": 23, "can_switch": 23, "delete_switch_rul": 23, "Then": [23, 58, 59], "power_diverg": 23, "differ": [23, 45, 49, 58, 59, 60], "get_in_port": 23, "possibl": [23, 58, 60], "trigger": 23, "whether": [23, 58], "feasibl": 23, "can_switch_from_lt": 23, "come": 23, "prepar": 23, "relai": 23, "unless": 23, "task": 23, "prepropag": 23, "port_out_to_port_in_sign": 23, "hash": 23, "compute_carrier_attenu": 23, "total": [23, 58], "within": 23, "process_att": 23, "one": [23, 33, 58], "given": [23, 28, 33, 34, 58, 59, 60], "continu": [23, 25, 29], "set_boost_gain": 23, "fast_switch": 23, "set_preamp_gain": 23, "set_reference_pow": 23, "ref_power_dbm": 23, "ch_index": 23, "act": 23, "upon": [23, 56], "similar": [23, 58], "voa": [23, 28], "noise_figur": 23, "91": 23, "noise_figure_funct": 23, "wdg_id": [23, 47, 51], "reset_gain": 23, "power_excursions_flags_off": 23, "load_wavelength_dependent_gain": 23, "file": [23, 27, 56, 57], "top": [23, 60], "set_ripple_funct": 23, "wavelength_dependent_gain": 23, "get_wavelength_dependent_gain": 23, "retriev": [23, 59], "wdg": 23, "get_noise_figur": 23, "constant": 23, "establish": [23, 58], "nf": 23, "90": [23, 26, 27], "output_amplified_pow": 23, "nli_compens": 23, "appli": 23, "date": 23, "stage_amplified_spontaneous_emission_nois": 23, "gumast": 23, "antoni": 23, "dwdm": 23, "engin": 23, "solut": 23, "cisco": 23, "press": 23, "2003": 23, "compute_power_excurs": 23, "balanc": 23, "respect": [23, 58], "mean": [23, 58], "excurs": 23, "set_gain": 23, "mock_amp_gain_adjust": 23, "new_gain": 23, "could": [23, 58], "fixm": 23, "modify_mod": 23, "chang": [23, 59, 60], "get_list_osnr": 23, "opm": 23, "get_dict_osnr": 23, "dictionari": [23, 59], "get_list_gosnr": 23, "get_dict_gosnr": 23, "get_ber": 23, "ber_method": 23, "biterrorr": 23, "f": [23, 58], "forghieri": 23, "doi": 23, "10": [23, 26, 33, 34, 36, 51, 60], "1109": 23, "jlt": 23, "1012": 23, "2189198": 23, "get_dict_pow": 23, "get_pow": 23, "get_dict_ase_nois": 23, "ASE": 23, "get_ase_nois": 23, "get_dict_nli_nois": 23, "get_nli_nois": 23, "get_osnr": 23, "get_gosnr": 23, "signaltrac": 23, "routin": 23, "trace": [23, 33], "pathentri": 23, "get_port": 23, "in_out": 23, "signal_path": 23, "path": [23, 24, 25, 26, 27, 29, 33, 35, 39, 58], "miss": 23, "channel_path": 23, "match": [23, 58], "path_stat": 23, "along": [23, 24, 26, 27], "nodeaudit": 23, "wip": 23, "audit": 23, "check_roadm_propag": 23, "report": [23, 40, 58], "check_link_propag": 23, "num_wav": [24, 26, 27], "40": [24, 26, 60], "num_nod": [24, 26, 27], "thruport": 24, "add_drop": 24, "lumentum_netconf_ag": 24, "alllumnam": 24, "l1": [24, 36], "l2": [24, 36, 58], "l3": [24, 36], "l4": [24, 36], "l5": [24, 36], "l6": [24, 36], "nodelink_to_lumentumlink": 24, "lumentumname_to_ip": 24, "lumentum_control_netconf": 24, "installpath": [24, 25, 29], "lightpathid": 24, "lightpath": [24, 25, 26, 27, 29, 32, 58], "uninstallpath": [24, 25], "cleanallroadm": 24, "channel_monitor": 24, "control_test": [24, 32], "r4": [24, 32], "shortest": [25, 29], "demonstr": [25, 29, 41, 59], "elabor": [25, 29], "rebalanc": [25, 29], "experiment": [25, 29], "extrem": [25, 29, 35, 58], "everi": [25, 29, 33, 58, 59], "uniqu": [25, 29], "don": [25, 29, 58], "even": [25, 29, 58], "dijkstra": [25, 29], "bf": [25, 29], "fine": [25, 29], "mininet_control_rest": 25, "getosnr": 25, "fetchosnr": [25, 35], "monitorkeyandlightpath": 25, "monitorkei": [25, 29], "sort": [25, 29], "getmonitorkei": 25, "src_id": 25, "dst_id": 25, "spanid": 25, "monitorosnrbykei": 25, "monitorosnr": [25, 29], "gosnrthreshold": [25, 29], "buildgraph": 25, "adjac": [25, 26, 27, 29], "neighbor": [25, 26, 27, 29], "configuretermin": [25, 29], "ethn": [25, 29], "wdmm": [25, 29], "turnontermin": 25, "configurepacketswitch": [25, 29], "single_link_test": [26, 27], "version": [26, 27, 39, 40, 60], "explicit": [26, 27], "controller_lum": [26, 27], "controller_mininet": [26, 27], "init_control": 26, "mininet_en": [26, 27], "link_cap": [26, 27], "down_link_cap": [26, 27], "cpri_cap": [26, 27], "netlink": [26, 27], "netlink_info": [26, 27], "traffic_info": [26, 27], "lightpath_info": [26, 27], "src_dst_to_lightpath": [26, 27], "path_ch_to_lightpath": [26, 27], "traffic_id": [26, 27], "lightpath_id": [26, 27], "name_roadm": [26, 27], "up_traf_time_list": [26, 27], "up_traf_id_set": [26, 27], "up_lightpath_time_list": [26, 27], "up_lightpath_id_set": [26, 27], "all_channel": [26, 27], "ru_roadm": [26, 27], "du_roadm": [26, 27], "roadm_traf": [26, 27], "name_termin": [26, 27], "roadm_to_termin": [26, 27], "terminal_to_roadm": [26, 27], "roadm_to_id": [26, 27], "terminal_to_id": [26, 27], "roadmphynetwork": [26, 27], "mininet_installpath": [26, 27], "intal": [26, 27], "mininet_uninstallpath": [26, 27], "mininet_setuplightpath": [26, 27], "mininet_teardownlightpath": [26, 27], "mininet_monitorlightpath": [26, 27], "lumentum_installpath": [26, 27], "lumentum_uninstallpath": [26, 27], "lumentum_setuplightpath": [26, 27], "lumentum_teardownlightpath": [26, 27], "lumentum_monitorlightpath": [26, 27], "linkspec": [26, 27, 42], "getlink": [26, 27], "netgraph": [26, 27], "findrout": [26, 27], "k": [26, 27], "waveavail": [26, 27], "waveselect": [26, 27], "install_lightpath": [26, 27], "up_tim": [26, 27], "down_tim": [26, 27], "inf": [26, 27], "databas": [26, 27], "check_lightpath_for_traf": [26, 27], "provis": [26, 27], "lighpath": [26, 27], "cpri": [26, 27], "traf": [26, 27], "update_lightpath_down_tim": [26, 27], "teardown": [26, 27], "traf_to_lightpah_assign": [26, 27], "traf_id": [26, 27], "install_traf": [26, 27], "cur_tim": [26, 27], "rrh": [26, 27], "bbu": [26, 27], "uninstall_lightpath": [26, 27], "traf_to_lightpath_releas": [26, 27], "trafficpattern": 26, "pattern": [26, 33], "24": [26, 33, 34, 58], "hour": 26, "normal": 26, "resid": 26, "area": 26, "entertain": 26, "offic": 26, "22": [26, 58, 60], "transport": 26, "37": 26, "29": [26, 58], "39": 26, "23": [26, 58], "11": [26, 39, 58], "28": [26, 58], "33": [26, 58], "gbp": 26, "9600": 26, "tower": 26, "maximum": 26, "wireless": 26, "byte": 26, "min": 26, "12": [26, 54], "6800": 26, "g": [26, 58, 59], "183": 26, "second": [26, 59], "traffictest": 26, "testmininet": [26, 27], "mininet_monitordiffer": 27, "mininet_optical_simu_api": 28, "roadm_installswitchrul": 28, "ruleid": 28, "channelid": 28, "roadm_deleteswitchrul": 28, "roadm_voapowerlevel": 28, "terminal_configchannelpow": 28, "congifur": 28, "terminal_configchannel": 28, "terminal_turnonchannel": 28, "terminal_turnoffchannel": 28, "off": 28, "terminal_reset_threshold": 28, "roadm_monitor_all_pow": 28, "roadm_monitor_all_osnr": 28, "roadm_monitor_all_gosnr": 28, "roadm_monitor_channel_data": 28, "adjacencydict": 29, "allocatechannel": 29, "entriestorerout": 29, "badlink": 29, "entri": [29, 33, 40], "rerout": 29, "failur": 29, "channelport": 29, "installrout": 29, "countsign": 29, "channelpair": 29, "averag": 29, "lroadmtest": 32, "netconfportbas": [32, 36, 38, 40], "1830": [32, 36, 38, 40], "fixipmap": 32, "nametoip": 32, "fix": [32, 45, 49], "cross": [33, 34], "pop": [33, 34, 58], "do_sign": 33, "formatsigst": 33, "printsign": 33, "printnodesign": 33, "do_linksign": 33, "linksign": 33, "_fmtsigstat": 33, "_fmtpathentri": 33, "do_sigtrac": 33, "sigtrac": 33, "_printpathst": 33, "do_sigpath": 33, "sigpath": 33, "do_monitor": 33, "printosnr": 33, "do_osnr": 33, "minlength": 33, "do_span": 33, "do_plot": 33, "save": [33, 58], "do_propag": 33, "obsolet": 33, "manual": 33, "do_amppow": 33, "do_arp": 33, "send": [33, 58], "gratuit": 33, "arp": [33, 58], "do_checkroadm": 33, "checkroadm": 33, "do_checklink": 33, "checklink": 33, "do_reset": 33, "do_setgain": 33, "usag": [33, 34, 59], "spanspec": [33, 34], "ampspec": [33, 34], "ampparam": [33, 34], "linearroadmtopo": [33, 34, 58], "r3": [33, 34, 59], "eth0": [33, 34, 58, 60], "eth1": [33, 34, 58, 60], "eth2": [33, 34, 58, 60], "wdm3": [33, 34, 58], "wdm4": [33, 34, 58], "wdm1": [33, 34, 58], "wdm2": [33, 34, 58, 60], "intfnum": [33, 34], "d": [33, 34, 58], "buildpop": [33, 34], "spanlength": [33, 34], "spancount": [33, 34], "prefix": [33, 34], "ampn": [33, 34], "configurelinearnet": [33, 34, 58], "packetonli": [33, 34], "linearroadmtest": [33, 34], "demotopo": [33, 34, 58], "pop2": [33, 34], "pop4": [33, 34], "pop1": [33, 34], "pop6": 33, "pop3": [33, 34], "pop5": 33, "etc": [33, 34], "addpoplink": [33, 34], "four": [33, 34], "intend": [35, 36], "exercis": [35, 58], "gnmi": 35, "ofswitchproxi": 35, "127": [35, 56, 60], "ofctl": 35, "dpctl": 35, "verbos": 35, "remot": [35, 58], "restproxi": 35, "baseurl": 35, "http": [35, 56, 60], "nodeproxi": 35, "fetch": 35, "switchproxi": 35, "terminalproxi": 35, "roadmproxi": 35, "fetchnod": 35, "fetchlink": 35, "fetchrul": 35, "fetchport": 35, "2021": 36, "lumentumlinear": 36, "mimic": 36, "netconfport": [36, 38], "mirror": 36, "hostnam": 36, "adjust": [36, 42, 60], "configcomb": 36, "chbase": 36, "compat": 38, "correspond": [38, 58], "author": 39, "jiakai": 39, "yu": 39, "jiakaiyu": 39, "email": 39, "arizona": 39, "edu": 39, "2019": 39, "03": 39, "last": [39, 60], "2020": 39, "08": 39, "bl": 39, "2022": 39, "xmltodict": 39, "xml": 39, "superus": 39, "sup": 39, "9user": 39, "ip_addr": 39, "wssconnect": 39, "connection_id": 39, "start_freq": 39, "end_freq": 39, "wssconnectionstatu": 39, "input_pow": 39, "output_pow": 39, "ne": 39, "chassi": 39, "card": 39, "classmethod": 39, "from_connection_detail": 39, "connection_detail": 39, "lookup": 39, "tree": [39, 58, 60], "result": [39, 58, 60], "lookupstr": 39, "edfa_statu": 39, "statu": 39, "als_dis": 39, "edfa_config": 39, "ctrl_mode": 39, "gain_mod": 39, "target_pow": 39, "tilt": 39, "al": 39, "wss_add_connect": 39, "wss_delete_connect": 39, "module_id": 39, "wss_get_connect": 39, "freqrangeghz": 39, "rang": 39, "startghz": 39, "endghz": 39, "gen_dwdm_connect": 39, "channel_spac": 39, "channel_width": 39, "ghz": 39, "lumentum_netconf": 39, "_configwss": 39, "node_ip": 39, "conn_id": 39, "parseconnect": 39, "wss_info": 39, "_wssmonitor": 39, "todo": 40, "improv": 40, "5101": 40, "edfansmap": 40, "connnsmap": 40, "nsmap": 40, "sslkeyfiledefault": 40, "xmlstring": 40, "atre": 40, "lxml": 40, "confign": 40, "parseconn": 40, "conn": 40, "dn": 40, "netconfag": 40, "nc_append_cap": 40, "cap": 40, "rpc_get": 40, "session": 40, "rpc": 40, "filter_or_non": 40, "rpc_get_config": 40, "source_elm": 40, "rpc_edit_config": 40, "updateconnect": 40, "rpc_disable_": 40, "rpc_remove_all_connect": 40, "rpc_delete_connect": 40, "delete_connection_dn": 40, "add_config": 40, "add_edfa": 40, "findinputpow": 40, "findoutputpow": 40, "add_connect": 40, "collect": 40, "runtestserv": 40, "interroadmlink": 42, "terminallink": 42, "routerlink": 42, "lookupnod": 42, "nodehandl": 42, "handlernam": 42, "monitorhandl": 42, "disconnect": 42, "cleanm": 42, "quiethandl": 42, "client_address": 42, "wsgiref": 42, "simple_serv": 42, "wsgirequesthandl": 42, "quiet": 42, "log_request": 42, "accept": 42, "send_respons": 42, "sensit": 43, "decibl": 43, "rx_threshold": 43, "bp": 43, "sr": 43, "ciansmalllinear": 44, "op": [44, 45, 46, 49, 50, 51, 52], "non": [44, 49, 50, 51], "integ": [44, 49, 50, 51, 52], "build_span": [45, 47, 49], "total_len": 45, "those": [45, 49], "build_link": [45, 47, 49], "cost239topologi": 45, "deutschetelekom": 46, "nomenclatur": 46, "convent": 46, "lt_": 46, "roadm_": 46, "l_": 46, "s_": 46, "boost_": 46, "inlin": 46, "span_no": [47, 50, 51], "span_length": 47, "port_no": 47, "last_ok": 47, "lineartopologi": [49, 50, 51], "power_dbm": [50, 51], "span_length_km": [50, 51], "hop_no": [50, 51], "signal_no": [50, 51], "ringtopologi": 53, "db_to_ab": 54, "db_valu": 54, "convert": 54, "absolut": 54, "abs_to_db": 54, "absolute_valu": 54, "abs_to_dbm": 54, "299792458": 54, "cm": 54, "01": 54, "um": 54, "1000": 54, "thz": [54, 59], "1000000000000": 54, "pi": 54, "h": [54, 59], "plot_power_vs_wavelength": 55, "monitor_nam": 55, "dash": 56, "react": 56, "flask": 56, "pip": [56, 60], "cytoscap": 56, "visualize_topologi": 56, "8050": 56, "browser": 56, "extract_pow": 56, "extract": 56, "thread": 56, "welcom": [57, 60], "overview": [57, 58], "directori": [57, 60], "subcompon": 57, "walkthrough": [57, 59], "congratul": 57, "architectur": 57, "metric": 57, "search": 57, "pure": 58, "explain": 58, "your": [58, 59, 60], "find": [58, 60], "due": 58, "fast": 58, "startup": 58, "eas": 58, "pycharm": 58, "doesn": [58, 60], "privileg": 58, "three_ring_topologi": 58, "stuck": 58, "monitoring_gosnr_vs_pow": 58, "ringtest": 58, "bear": 58, "mind": 58, "neither": 58, "answer": 58, "posit": 58, "indistinct": 58, "begin": 58, "appropri": 58, "lt1": 58, "lt6": 58, "ex": 58, "try": [58, 60], "sequenc": 58, "lt2": 58, "rearrang": 58, "catch": 58, "THE": 58, "destroi": 58, "00": 58, "31": 58, "502684964557986": 58, "176061337796398": 58, "26": 58, "314628272797336": 58, "015839898466922": 58, "13611249709385": 58, "304363233906848": 58, "60659223643803": 58, "00556583390794": 58, "21": 58, "543462282662198": 58, "06605464395392": 58, "635968107119602": 58, "244661874079043": 58, "19": 58, "931195226498627": 58, "596307147424525": 58, "28540409149395": 58, "99527882336643": 58, "758083090421028": 58, "50016560987458": 58, "25671038540936": 58, "026181282510155": 58, "50268137427075": 58, "30": 58, "176059668755695": 58, "31462718556177": 58, "27": 58, "01583909226315": 58, "13611183872073": 58, "304362690284655": 58, "606591773502963": 58, "00556543080363": 58, "543461920246425": 58, "06605431926585": 58, "635967813044893": 58, "244661605342294": 58, "931194976475382": 58, "596306915956195": 58, "285403876016776": 58, "995278621813668": 58, "75808289958113": 58, "500165430038248": 58, "25671021537687": 58, "026181121267854": 58, "35": 58, "502675684055035": 58, "176057023505756": 58, "314625462410078": 58, "01583781451658": 58, "13611079526985": 58, "304361828701694": 58, "60659103980043": 58, "00556479192643": 58, "543461345856198": 58, "06605380467": 58, "635967346967934": 58, "244661179423296": 58, "931194580215273": 58, "596306549103637": 58, "285403534508482": 58, "99527830237409": 58, "758082597120293": 58, "500165145016886": 58, "256709945893554": 58, "026180865716036": 58, "reli": 58, "typic": 58, "sudo": [58, 59, 60], "addit": 58, "should": [58, 59, 60], "pythonpath": [58, 59], "python3": [58, 59, 60], "c0": 58, "cd": [58, 60], "sh": [58, 59, 60], "succeed": 58, "abil": 58, "essenti": 58, "success": [58, 60], "recept": 58, "ch1": [58, 60], "191": [58, 60], "35thz": [58, 60], "34": 58, "70": 58, "58": 58, "pingal": [58, 60], "cannot": 58, "ping": [58, 60], "reachabl": [58, 60], "66": 58, "9": 58, "underli": 58, "usual": 58, "With": 58, "select": [58, 59], "suit": 58, "flexibl": 58, "probabl": 58, "properli": 58, "know": 58, "1m": 58, "lo": [58, 60], "wdm5": 58, "wdm6": 58, "eth3": 58, "eth4": 58, "dismiss": 58, "incomprehens": 58, "garbag": 58, "long": [58, 59], "100m": 58, "0db": 58, "0km": 58, "5db": 58, "15": 58, "disambigu": 58, "pygraphviz": 58, "apt": [58, 60], "revis": 58, "side": 58, "easiest": 58, "understand": [58, 59], "glanc": 58, "lastli": 58, "question": 58, "think": 58, "why": 58, "suffici": 58, "fact": 58, "among": 58, "ovsbridg": [58, 60], "lead": 58, "undesir": 58, "behavior": 58, "forev": 58, "render": 58, "unus": 58, "slow": 58, "problem": 58, "exacerb": 58, "flood": 58, "broadcast": 58, "dhcp": 58, "frequent": 58, "seen": 58, "who": 58, "often": 58, "incorrectli": 58, "140362746465920": 58, "ch2": 58, "40thz": 58, "140362746465728": 58, "140362746797456": 58, "140362746797360": 58, "140362746797312": 58, "140362746794720": 58, "reason": 58, "seem": 58, "moment": 58, "my": 58, "05": 58, "99": 58, "freq": 58, "191350000000000": 58, "04688966097812": 58, "985167480783709": 58, "63": 58, "095734448019336": 58, "02484912117567492": 58, "00759355581639": 58, "11343356995615": 58, "11227284182009": 58, "9999493444109917": 58, "00038782396576497437": 58, "653865120449501e": 58, "07": 58, "hopefulli": 58, "determin": 58, "thank": 58, "forward": [58, 60], "feedback": 58, "pai": 58, "attent": 58, "tricki": 58, "maddeningli": 58, "mani": 58, "exact": [58, 59], "thing": 58, "draw": 58, "write": 58, "help": [58, 59], "particular": 58, "possibli": 58, "linksbetween": 58, "intf1": 58, "intf2": 58, "easili": 58, "shell": 58, "enclos": 58, "quot": 58, "mi": 58, "interpret": 58, "special": 58, "charact": 58, "variabl": 58, "doubl": 58, "dereferenc": 58, "mistak": 58, "care": 58, "fortun": 58, "few": 58, "neg": 58, "consequ": 58, "laser": 58, "potenti": 58, "disastr": 58, "damag": 58, "least": 58, "ideal": 58, "failsaf": 58, "mechan": 58, "guarante": 58, "caus": 58, "fire": 58, "almost": 58, "certainli": 58, "here": [58, 60], "excess": 58, "enthusiast": 58, "lot": 58, "functool": 58, "partial": 58, "stp": 58, "discov": 58, "eventu": 58, "bridg": 58, "presenc": 58, "As": [58, 59], "replic": 58, "compar": 58, "framework": 58, "3x3": 58, "grid": 58, "Of": 58, "manhattan": 58, "protocol": 58, "abov": [58, 60], "unlik": 58, "advanc": 58, "plan": 58, "text": 58, "descript": 58, "dot": 58, "anyth": [58, 60], "b": [58, 60], "choos": [58, 59], "decid": 58, "advantag": 58, "disadvantag": 58, "behav": 59, "sever": [59, 60], "cover": 59, "obtain": 59, "aim": 59, "repres": [59, 60], "give": [59, 60], "6node": 59, "mininet_opt": 59, "befor": [59, 60], "wrote": 59, "empti": 59, "appear": 59, "mention": 59, "displai": [59, 60], "111": 59, "shown": [59, 60], "222": 59, "apostroph": 59, "against": 59, "finish": 60, "acquaint": 60, "successfulli": 60, "proceed": 60, "procedur": 60, "ubuntu": 60, "debian": 60, "distribut": 60, "git": 60, "clone": 60, "repositori": 60, "github": 60, "com": 60, "latest": 60, "greatest": 60, "recommend": 60, "tag": 60, "releas": 60, "explicitli": 60, "checkout": 60, "nv": 60, "ovsbr": 60, "issu": 60, "encount": 60, "dure": 60, "suggest": 60, "consult": 60, "2x25km": 60, "pid": 60, "3422": 60, "3424": 60, "3429": 60, "3432": 60, "3438": 60, "3442": 60, "0x7efe3c561e20": 60, "0x7efe3c577370": 60, "succe": 60, "found": 60, "activ": 60, "optial": 60, "708129": 60, "45": 60, "402202": 60, "again": 60, "71": 60, "larger": 60}, "objects": {"": [[20, 0, 0, "-", "mnoptical"]], "mnoptical": [[4, 0, 0, "-", "dataplane"], [5, 0, 0, "-", "edfa_params"], [8, 0, 0, "-", "examples"], [21, 0, 0, "-", "link"], [22, 0, 0, "-", "network"], [23, 0, 0, "-", "node"], [37, 0, 0, "-", "ofcdemo"], [42, 0, 0, "-", "rest"], [43, 0, 0, "-", "terminal_params"], [48, 0, 0, "-", "topo"], [54, 0, 0, "-", "units"], [55, 0, 0, "-", "visualization"], [56, 0, 0, "-", "visualize_topo"]], "mnoptical.dataplane": [[4, 1, 1, "", "AmplifierPair"], [4, 1, 1, "", "CombSource"], [4, 4, 1, "", "Mininet"], [4, 1, 1, "", "Monitor"], [4, 1, 1, "", "OpticalIn"], [4, 1, 1, "", "OpticalIntf"], [4, 1, 1, "", "OpticalLink"], [4, 1, 1, "", "OpticalNet"], [4, 1, 1, "", "OpticalOut"], [4, 5, 1, "", "PhySpan"], [4, 1, 1, "", "ROADM"], [4, 1, 1, "", "SimpleROADM"], [4, 1, 1, "", "SwitchBase"], [4, 1, 1, "", "Terminal"], [4, 1, 1, "", "TwoTransceiverTopo"], [4, 4, 1, "", "UniLink"], [4, 5, 1, "", "UnidirectionalOpticalLink"], [4, 5, 1, "", "cleanOptLinks"], [4, 4, 1, "", "dB"], [4, 4, 1, "", "dBm"], [4, 5, 1, "", "disableIPv6"], [4, 5, 1, "", "dumpLinkPower"], [4, 5, 1, "", "dumpNet"], [4, 5, 1, "", "formatSignals"], [4, 4, 1, "", "km"], [4, 4, 1, "", "m"], [4, 5, 1, "", "twoTransceiverTest"]], "mnoptical.dataplane.AmplifierPair": [[4, 2, 1, "", "phyAmp1"], [4, 2, 1, "", "phyAmp2"]], "mnoptical.dataplane.CombSource": [[4, 2, 1, "", "ADD"], [4, 2, 1, "", "LINEOUT"], [4, 3, 1, "", "addTerminal"], [4, 3, 1, "", "restTurnonHandler"], [4, 3, 1, "", "turn_on"]], "mnoptical.dataplane.Monitor": [[4, 3, 1, "", "__str__"], [4, 2, 1, "", "execed"], [4, 3, 1, "", "intfList"], [4, 3, 1, "", "intfNames"], [4, 2, 1, "", "intfs"], [4, 3, 1, "", "pexec"], [4, 3, 1, "", "restMonitor"], [4, 2, 1, "", "waiting"]], "mnoptical.dataplane.OpticalIn": [[4, 3, 1, "", "isInput"], [4, 3, 1, "", "isOutput"]], "mnoptical.dataplane.OpticalIntf": [[4, 3, 1, "", "isInput"], [4, 3, 1, "", "isOutput"]], "mnoptical.dataplane.OpticalLink": [[4, 3, 1, "", "_parseArgs"], [4, 3, 1, "", "_parseSpans"], [4, 3, 1, "", "intfName"], [4, 2, 1, "", "phyLink1"], [4, 2, 1, "", "phyLink2"]], "mnoptical.dataplane.OpticalNet": [[4, 3, 1, "", "__iter__"], [4, 3, 1, "", "addLink"], [4, 3, 1, "", "addLinkComponents"], [4, 3, 1, "", "addMonitor"], [4, 3, 1, "", "addSwitch"], [4, 2, 1, "", "monitors"], [4, 3, 1, "", "restSetgainHandler"], [4, 3, 1, "", "restSetrippleHandler"], [4, 3, 1, "", "set_ripple"], [4, 3, 1, "", "setgainCmd"]], "mnoptical.dataplane.OpticalOut": [[4, 3, 1, "", "isInput"], [4, 3, 1, "", "isOutput"]], "mnoptical.dataplane.ROADM": [[4, 3, 1, "", "connect"], [4, 3, 1, "", "dpFlow"], [4, 3, 1, "", "dpInstall"], [4, 3, 1, "", "dpRemove"], [4, 3, 1, "", "dpReset"], [4, 3, 1, "", "install"], [4, 2, 1, "", "model"], [4, 2, 1, "", "modelClass"], [4, 3, 1, "", "phyInstall"], [4, 3, 1, "", "phyRemove"], [4, 3, 1, "", "phyReset"], [4, 3, 1, "", "remove"], [4, 3, 1, "", "reset"], [4, 3, 1, "", "restCleanmeHandler"], [4, 3, 1, "", "restConnectHandler"], [4, 3, 1, "", "restRulesHandler"], [4, 3, 1, "", "ruleTuple"], [4, 3, 1, "", "start"]], "mnoptical.dataplane.SimpleROADM": [[4, 3, 1, "", "update"]], "mnoptical.dataplane.SwitchBase": [[4, 3, 1, "", "cmd"], [4, 3, 1, "", "defaultDpid"], [4, 2, 1, "", "dpidBase"], [4, 2, 1, "", "modelClass"], [4, 3, 1, "", "reset"], [4, 3, 1, "", "restPortsDict"], [4, 3, 1, "", "restResetHandler"]], "mnoptical.dataplane.Terminal": [[4, 3, 1, "", "block"], [4, 2, 1, "", "blockCookie"], [4, 3, 1, "", "configTx"], [4, 3, 1, "", "connect"], [4, 3, 1, "", "makeTransceiver"], [4, 2, 1, "", "model"], [4, 2, 1, "", "modelClass"], [4, 3, 1, "", "receiverCallback"], [4, 3, 1, "", "reset"], [4, 3, 1, "", "restConnectHandler"], [4, 3, 1, "", "restTurnonHandler"], [4, 3, 1, "", "start"], [4, 3, 1, "", "turn_on"], [4, 3, 1, "", "txnum"], [4, 3, 1, "", "unblock"]], "mnoptical.dataplane.TwoTransceiverTopo": [[4, 3, 1, "", "build"]], "mnoptical.edfa_params": [[5, 4, 1, "", "fibre_spectral_attenuation"], [5, 4, 1, "", "ripple_functions"]], "mnoptical.examples": [[6, 0, 0, "-", "config_lroadmring"], [7, 0, 0, "-", "dbgtest"], [9, 0, 0, "-", "lroadmring"], [10, 0, 0, "-", "roadm_with_amps"], [11, 0, 0, "-", "simplelink"], [12, 0, 0, "-", "singlelink"], [13, 0, 0, "-", "singleroadm"], [14, 0, 0, "-", "sixnodestopo"], [15, 0, 0, "-", "test-attenuator"], [16, 0, 0, "-", "unilinear1"], [17, 0, 0, "-", "unilinear2"], [18, 0, 0, "-", "uniring"], [19, 0, 0, "-", "uniroadmchain"]], "mnoptical.examples.config_lroadmring": [[6, 4, 1, "", "N"], [6, 5, 1, "", "allocChannels"], [6, 5, 1, "", "config"], [6, 5, 1, "", "configRoadms"], [6, 5, 1, "", "configSwitches"], [6, 5, 1, "", "configTerminals"], [6, 5, 1, "", "dumpChmap"], [6, 5, 1, "", "genConnection"], [6, 5, 1, "", "genConnections"]], "mnoptical.examples.dbgtest": [[7, 5, 1, "", "dbgtest"], [7, 4, 1, "", "topo"]], "mnoptical.examples.lroadmring": [[9, 1, 1, "", "LumentumBase"], [9, 1, 1, "", "LumentumRing"], [9, 4, 1, "", "password"], [9, 4, 1, "", "sslkeyfile"], [9, 5, 1, "", "test"], [9, 4, 1, "", "topo"], [9, 4, 1, "", "username"]], "mnoptical.examples.lroadmring.LumentumBase": [[9, 3, 1, "", "addNetworkNodes"], [9, 3, 1, "", "addNodeLinks"], [9, 2, 1, "", "ethbase"], [9, 2, 1, "", "hostport"], [9, 2, 1, "", "listenPortBase"], [9, 3, 1, "", "nodeNames"], [9, 2, 1, "", "rxbase"], [9, 2, 1, "", "txbase"], [9, 3, 1, "", "wdmLink"]], "mnoptical.examples.lroadmring.LumentumRing": [[9, 3, 1, "", "build"]], "mnoptical.examples.roadm_with_amps": [[10, 1, 1, "", "SingleROADMTopo"], [10, 5, 1, "", "add_amp"], [10, 5, 1, "", "test"], [10, 4, 1, "", "topo"]], "mnoptical.examples.roadm_with_amps.SingleROADMTopo": [[10, 3, 1, "", "build"]], "mnoptical.examples.simplelink": [[11, 1, 1, "", "SimpleLinkTopo"], [11, 5, 1, "", "test"], [11, 4, 1, "", "topo"]], "mnoptical.examples.simplelink.SimpleLinkTopo": [[11, 3, 1, "", "build"]], "mnoptical.examples.singlelink": [[12, 1, 1, "", "SingleLinkTopo"], [12, 5, 1, "", "test"], [12, 4, 1, "", "topo"]], "mnoptical.examples.singlelink.SingleLinkTopo": [[12, 3, 1, "", "build"]], "mnoptical.examples.singleroadm": [[13, 1, 1, "", "SingleROADMTopo"], [13, 5, 1, "", "plotNet"], [13, 5, 1, "", "test"], [13, 4, 1, "", "topo"]], "mnoptical.examples.singleroadm.SingleROADMTopo": [[13, 3, 1, "", "build"]], "mnoptical.examples.sixnodestopo": [[14, 1, 1, "", "SixROADMTopo"], [14, 5, 1, "", "plotNet"], [14, 4, 1, "", "topo"]], "mnoptical.examples.sixnodestopo.SixROADMTopo": [[14, 3, 1, "", "build"]], "mnoptical.examples.test-attenuator": [[15, 1, 1, "", "MultiROADMTopo"], [15, 5, 1, "", "add_amp"], [15, 5, 1, "", "plotNet"], [15, 5, 1, "", "test"], [15, 4, 1, "", "topo"]], "mnoptical.examples.test-attenuator.MultiROADMTopo": [[15, 3, 1, "", "build"], [15, 3, 1, "", "configNet"], [15, 3, 1, "", "get_monitor_power"]], "mnoptical.examples.unilinear1": [[16, 1, 1, "", "CLI"], [16, 1, 1, "", "OpticalTopo"], [16, 1, 1, "", "UniLinearTopo"], [16, 5, 1, "", "config"], [16, 5, 1, "", "test"], [16, 4, 1, "", "topo"]], "mnoptical.examples.unilinear1.CLI": [[16, 3, 1, "", "do_config"]], "mnoptical.examples.unilinear1.OpticalTopo": [[16, 3, 1, "", "addROADM"], [16, 3, 1, "", "addTerminal"], [16, 3, 1, "", "ethLink"], [16, 3, 1, "", "wdmLink"]], "mnoptical.examples.unilinear1.UniLinearTopo": [[16, 3, 1, "", "addport"], [16, 3, 1, "", "build"], [16, 3, 1, "", "downlink"], [16, 3, 1, "", "dropport"], [16, 3, 1, "", "ethport"], [16, 2, 1, "", "linein"], [16, 2, 1, "", "lineout"], [16, 3, 1, "", "uplink"]], "mnoptical.examples.unilinear2": [[17, 1, 1, "", "CLI"], [17, 1, 1, "", "OpticalTopo"], [17, 1, 1, "", "UniLinearTopo2"], [17, 5, 1, "", "config"], [17, 5, 1, "", "test"], [17, 4, 1, "", "topo"]], "mnoptical.examples.unilinear2.CLI": [[17, 3, 1, "", "do_config"]], "mnoptical.examples.unilinear2.OpticalTopo": [[17, 3, 1, "", "addROADM"], [17, 3, 1, "", "addTerminal"], [17, 3, 1, "", "ethLink"], [17, 3, 1, "", "wdmLink"]], "mnoptical.examples.unilinear2.UniLinearTopo2": [[17, 3, 1, "", "addport"], [17, 3, 1, "", "build"], [17, 3, 1, "", "downlink"], [17, 3, 1, "", "dropport"], [17, 2, 1, "", "eastin"], [17, 2, 1, "", "eastout"], [17, 3, 1, "", "ethport"], [17, 3, 1, "", "linein"], [17, 3, 1, "", "lineout"], [17, 3, 1, "", "uplink"], [17, 2, 1, "", "westin"], [17, 2, 1, "", "westout"]], "mnoptical.examples.uniring": [[18, 1, 1, "", "CLI"], [18, 1, 1, "", "UniRingTopo"], [18, 5, 1, "", "add"], [18, 5, 1, "", "config"], [18, 5, 1, "", "configOpticalNet"], [18, 5, 1, "", "configPacketNet"], [18, 5, 1, "", "drop"], [18, 5, 1, "", "fwd"], [18, 5, 1, "", "test"], [18, 4, 1, "", "topo"]], "mnoptical.examples.uniring.CLI": [[18, 3, 1, "", "do_config"]], "mnoptical.examples.uniring.UniRingTopo": [[18, 3, 1, "", "build"]], "mnoptical.examples.uniroadmchain": [[19, 1, 1, "", "UniRoadmChain"], [19, 4, 1, "", "topo"]], "mnoptical.examples.uniroadmchain.UniRoadmChain": [[19, 3, 1, "", "build"], [19, 3, 1, "", "configNet"]], "mnoptical.link": [[21, 1, 1, "", "Link"], [21, 1, 1, "", "Span"], [21, 4, 1, "", "SpanTuple"]], "mnoptical.link.Link": [[21, 3, 1, "", "__repr__"], [21, 3, 1, "", "describe"], [21, 3, 1, "", "include_optical_signal_in"], [21, 3, 1, "", "include_optical_signal_out"], [21, 3, 1, "", "length"], [21, 3, 1, "", "propagate"], [21, 3, 1, "", "remove_optical_signal"], [21, 3, 1, "", "reset"]], "mnoptical.link.Span": [[21, 3, 1, "", "__repr__"], [21, 2, 1, "", "anonymous"], [21, 3, 1, "", "attenuation"], [21, 3, 1, "", "beta2"], [21, 3, 1, "", "describe"], [21, 3, 1, "", "gn_model"], [21, 2, 1, "", "ids"], [21, 3, 1, "", "include_optical_signal_in"], [21, 3, 1, "", "include_optical_signal_out"], [21, 3, 1, "", "output_nonlinear_noise"], [21, 3, 1, "", "propagate"], [21, 3, 1, "", "psi_factor"], [21, 3, 1, "", "remove_optical_signal"], [21, 3, 1, "", "reset"], [21, 3, 1, "", "set_input_port"], [21, 3, 1, "", "set_output_port"], [21, 3, 1, "", "srs_effect_model"]], "mnoptical.network": [[22, 1, 1, "", "Network"]], "mnoptical.network.Network": [[22, 3, 1, "", "add_amplifier"], [22, 3, 1, "", "add_link"], [22, 3, 1, "", "add_lt"], [22, 3, 1, "", "add_roadm"], [22, 3, 1, "", "describe"], [22, 3, 1, "", "find_link_and_in_port_from_nodes"], [22, 3, 1, "", "find_link_and_out_port_from_nodes"], [22, 3, 1, "", "find_link_from_nodes"], [22, 3, 1, "", "find_out_port_from_link"]], "mnoptical.node": [[23, 1, 1, "", "Amplifier"], [23, 1, 1, "", "Attenuator"], [23, 1, 1, "", "LineTerminal"], [23, 1, 1, "", "Monitor"], [23, 1, 1, "", "Node"], [23, 1, 1, "", "NodeAuditing"], [23, 1, 1, "", "OpticalSignal"], [23, 1, 1, "", "Roadm"], [23, 1, 1, "", "SignalTracing"], [23, 4, 1, "", "SwitchRule"], [23, 1, 1, "", "Transceiver"]], "mnoptical.node.Amplifier": [[23, 3, 1, "", "__repr__"], [23, 3, 1, "", "compute_power_excursions"], [23, 3, 1, "", "get_noise_figure"], [23, 3, 1, "", "get_wavelength_dependent_gain"], [23, 3, 1, "", "load_wavelength_dependent_gain"], [23, 3, 1, "", "mock_amp_gain_adjust"], [23, 3, 1, "", "monitor_query"], [23, 3, 1, "", "nli_compensation"], [23, 3, 1, "", "output_amplified_power"], [23, 3, 1, "", "power_excursions_flags_off"], [23, 3, 1, "", "propagate"], [23, 3, 1, "", "reset"], [23, 3, 1, "", "reset_gain"], [23, 3, 1, "", "set_gain"], [23, 3, 1, "", "set_ripple_function"], [23, 3, 1, "", "stage_amplified_spontaneous_emission_noise"]], "mnoptical.node.Attenuator": [[23, 3, 1, "", "attenuation"], [23, 3, 1, "", "propagate"]], "mnoptical.node.LineTerminal": [[23, 3, 1, "", "add_transceiver"], [23, 3, 1, "", "add_transceivers"], [23, 3, 1, "", "assoc_channel"], [23, 3, 1, "", "assoc_rx_to_channel"], [23, 3, 1, "", "assoc_tx_to_channel"], [23, 3, 1, "", "disassoc_rx_to_channel"], [23, 3, 1, "", "disassoc_tx_to_channel"], [23, 3, 1, "", "existing_transceiver"], [23, 3, 1, "", "get_optical_signals"], [23, 3, 1, "", "gosnr"], [23, 3, 1, "", "monitor_query"], [23, 3, 1, "", "osnr"], [23, 3, 1, "", "receiver"], [23, 3, 1, "", "receiver_callback"], [23, 3, 1, "", "reset"], [23, 3, 1, "", "reset_transceivers"], [23, 3, 1, "", "set_modulation_format"], [23, 3, 1, "", "turn_off"], [23, 3, 1, "", "turn_on"], [23, 3, 1, "", "tx_config"]], "mnoptical.node.Monitor": [[23, 3, 1, "", "__repr__"], [23, 3, 1, "", "get_ase_noise"], [23, 3, 1, "", "get_ber"], [23, 3, 1, "", "get_dict_ase_noise"], [23, 3, 1, "", "get_dict_gosnr"], [23, 3, 1, "", "get_dict_nli_noise"], [23, 3, 1, "", "get_dict_osnr"], [23, 3, 1, "", "get_dict_power"], [23, 3, 1, "", "get_gosnr"], [23, 3, 1, "", "get_list_gosnr"], [23, 3, 1, "", "get_list_osnr"], [23, 3, 1, "", "get_nli_noise"], [23, 3, 1, "", "get_optical_signals"], [23, 3, 1, "", "get_osnr"], [23, 3, 1, "", "get_power"], [23, 3, 1, "", "modify_mode"]], "mnoptical.node.Node": [[23, 3, 1, "", "__repr__"], [23, 2, 1, "", "debugger"], [23, 3, 1, "", "describe"], [23, 3, 1, "", "include_optical_signal_in"], [23, 3, 1, "", "include_optical_signal_out"], [23, 2, 1, "", "input_port_base"], [23, 2, 1, "", "output_port_base"], [23, 3, 1, "", "remove_optical_signal"], [23, 3, 1, "", "remove_signal_from_out_port"], [23, 3, 1, "", "reset_component"], [23, 3, 1, "", "set_input_port"], [23, 3, 1, "", "set_output_port"]], "mnoptical.node.NodeAuditing": [[23, 3, 1, "", "check_link_propagation"], [23, 3, 1, "", "check_roadm_propagation"]], "mnoptical.node.OpticalSignal": [[23, 3, 1, "", "__repr__"], [23, 3, 1, "", "assoc_loc_in"], [23, 3, 1, "", "assoc_loc_out"], [23, 3, 1, "", "describe"], [23, 3, 1, "", "reset"], [23, 3, 1, "", "set_modulation_format"], [23, 2, 1, "", "spectrum_band_init_H"], [23, 2, 1, "", "spectrum_band_init_nm"]], "mnoptical.node.Roadm": [[23, 3, 1, "", "can_switch"], [23, 3, 1, "", "can_switch_from_lt"], [23, 3, 1, "", "check_switch_rule"], [23, 3, 1, "", "compute_carrier_attenuation"], [23, 3, 1, "", "delete_switch_rule"], [23, 3, 1, "", "delete_switch_rules"], [23, 3, 1, "", "fast_switch"], [23, 3, 1, "", "get_in_port"], [23, 3, 1, "", "get_optical_signals"], [23, 3, 1, "", "include_optical_signal_in"], [23, 3, 1, "", "install_switch_rule"], [23, 3, 1, "", "monitor_query"], [23, 3, 1, "", "power_divergence"], [23, 3, 1, "", "prepropagation"], [23, 3, 1, "", "process_att"], [23, 3, 1, "", "propagate"], [23, 3, 1, "", "remove_switch_rule"], [23, 3, 1, "", "reset"], [23, 3, 1, "", "route"], [23, 3, 1, "", "set_boost_gain"], [23, 3, 1, "", "set_preamp_gain"], [23, 3, 1, "", "set_reference_power"], [23, 3, 1, "", "switch"], [23, 3, 1, "", "update_switch_rule"]], "mnoptical.node.SignalTracing": [[23, 3, 1, "", "channel_paths"], [23, 3, 1, "", "get_port"], [23, 2, 1, "", "pathEntry"], [23, 3, 1, "", "path_state"], [23, 3, 1, "", "signal_path"]], "mnoptical.node.Transceiver": [[23, 3, 1, "", "assoc_optical_signal"], [23, 3, 1, "", "describe"], [23, 3, 1, "", "remove_optical_signal"], [23, 3, 1, "", "set_modulation_format"]], "mnoptical.ofcdemo": [[24, 0, 0, "-", "Control_Test_Lum"], [25, 0, 0, "-", "Control_Test_Mininet_REST"], [26, 0, 0, "-", "Demo_Control"], [27, 0, 0, "-", "Demo_Control_2"], [28, 0, 0, "-", "Simulation_API"], [29, 0, 0, "-", "apsp"], [30, 0, 0, "-", "demo"], [31, 0, 0, "-", "demo_2021"], [32, 0, 0, "-", "demo_hwtopo"], [33, 0, 0, "-", "demolib"], [34, 0, 0, "-", "demolib_2021"], [35, 0, 0, "-", "fakecontroller"], [36, 0, 0, "-", "hwtopo"], [38, 0, 0, "-", "lroadm"], [39, 0, 0, "-", "lumentum_NETCONF_API"], [40, 0, 0, "-", "netconfserver"], [41, 0, 0, "-", "simpledemo"]], "mnoptical.ofcdemo.Control_Test_Lum": [[24, 4, 1, "", "ADD_DROP"], [24, 4, 1, "", "AllLumName"], [24, 5, 1, "", "Control_Test"], [24, 4, 1, "", "LumentumName_to_IP"], [24, 1, 1, "", "Lumentum_Control_NETCONF"], [24, 4, 1, "", "Lumentum_NETCONF_Agent"], [24, 4, 1, "", "NUM_NODE"], [24, 4, 1, "", "NUM_WAV"], [24, 4, 1, "", "NodeLink_to_LumentumLink"], [24, 4, 1, "", "THRUPORT"], [24, 4, 1, "", "m"]], "mnoptical.ofcdemo.Control_Test_Lum.Lumentum_Control_NETCONF": [[24, 3, 1, "", "channel_monitor"], [24, 3, 1, "", "cleanAllROADMs"], [24, 3, 1, "", "installPath"], [24, 3, 1, "", "uninstallPath"]], "mnoptical.ofcdemo.Control_Test_Mininet_REST": [[25, 1, 1, "", "Mininet_Control_REST"], [25, 5, 1, "", "Test"]], "mnoptical.ofcdemo.Control_Test_Mininet_REST.Mininet_Control_REST": [[25, 3, 1, "", "buildGraph"], [25, 3, 1, "", "configurePacketSwitch"], [25, 3, 1, "", "configureTerminal"], [25, 3, 1, "", "getMonitorKey"], [25, 3, 1, "", "getOSNR"], [25, 3, 1, "", "installPath"], [25, 3, 1, "", "monitorKey"], [25, 3, 1, "", "monitorKeyAndLightpaths"], [25, 3, 1, "", "monitorOSNR"], [25, 3, 1, "", "monitorOSNRbyKey"], [25, 3, 1, "", "route"], [25, 3, 1, "", "turnonTerminal"], [25, 3, 1, "", "uninstallPath"]], "mnoptical.ofcdemo.Demo_Control": [[26, 4, 1, "", "ALL_CHANNELS"], [26, 4, 1, "", "CPRI_CAP"], [26, 4, 1, "", "Controller_Lum"], [26, 4, 1, "", "Controller_Mininet"], [26, 4, 1, "", "DOWN_LINK_CAP"], [26, 4, 1, "", "DU_ROADMS"], [26, 5, 1, "", "FindRoute"], [26, 4, 1, "", "GRAPH"], [26, 4, 1, "", "LIGHTPATH_ID"], [26, 4, 1, "", "LIGHTPATH_INFO"], [26, 4, 1, "", "LINK_CAP"], [26, 5, 1, "", "Lumentum_MonitorLightpath"], [26, 5, 1, "", "Lumentum_installPath"], [26, 5, 1, "", "Lumentum_setupLightpath"], [26, 5, 1, "", "Lumentum_teardownLightpath"], [26, 5, 1, "", "Lumentum_uninstallPath"], [26, 5, 1, "", "Mininet_installPath"], [26, 5, 1, "", "Mininet_monitorLightpath"], [26, 5, 1, "", "Mininet_setupLightpath"], [26, 5, 1, "", "Mininet_teardownLightpath"], [26, 5, 1, "", "Mininet_uninstallPath"], [26, 4, 1, "", "NAME_ROADM"], [26, 4, 1, "", "NETLINKS"], [26, 4, 1, "", "NETLINK_INFO"], [26, 4, 1, "", "NODES"], [26, 4, 1, "", "NUM_NODE"], [26, 4, 1, "", "NUM_WAV"], [26, 4, 1, "", "PATH_CH_TO_LIGHTPATH"], [26, 4, 1, "", "ROADM_TO_ID"], [26, 4, 1, "", "ROADM_TO_TERMINAL"], [26, 4, 1, "", "ROADM_TRAF"], [26, 4, 1, "", "RU_ROADMS"], [26, 5, 1, "", "RoadmPhyNetwork"], [26, 4, 1, "", "SRC_DST_TO_LIGHTPATH"], [26, 5, 1, "", "Span"], [26, 4, 1, "", "TERMINAL_TO_ID"], [26, 4, 1, "", "TERMINAL_TO_ROADM"], [26, 4, 1, "", "TRAFFIC_ID"], [26, 4, 1, "", "TRAFFIC_INFO"], [26, 5, 1, "", "TrafficTest"], [26, 4, 1, "", "UP_LIGHTPATH_ID_SET"], [26, 4, 1, "", "UP_LIGHTPATH_TIME_LIST"], [26, 4, 1, "", "UP_TRAF_ID_SET"], [26, 4, 1, "", "UP_TRAF_TIME_LIST"], [26, 5, 1, "", "check_lightpath_for_traf"], [26, 5, 1, "", "getLinks"], [26, 5, 1, "", "init_Controller"], [26, 5, 1, "", "install_Lightpath"], [26, 5, 1, "", "install_Traf"], [26, 5, 1, "", "linkspec"], [26, 4, 1, "", "m"], [26, 4, 1, "", "name_roadms"], [26, 4, 1, "", "name_terminals"], [26, 5, 1, "", "netGraph"], [26, 4, 1, "", "node"], [26, 5, 1, "", "testMininet"], [26, 5, 1, "", "traf_to_lightpah_Assignment"], [26, 5, 1, "", "traf_to_lightpath_Release"], [26, 5, 1, "", "trafficPattern"], [26, 5, 1, "", "uninstall_Lightpath"], [26, 5, 1, "", "update_lightpath_down_time"], [26, 5, 1, "", "waveAvailibility"], [26, 5, 1, "", "waveSelection"]], "mnoptical.ofcdemo.Demo_Control_2": [[27, 4, 1, "", "ALL_CHANNELS"], [27, 4, 1, "", "CPRI_CAP"], [27, 4, 1, "", "Controller_Lum"], [27, 4, 1, "", "Controller_Mininet"], [27, 4, 1, "", "DOWN_LINK_CAP"], [27, 4, 1, "", "DU_ROADMS"], [27, 5, 1, "", "FindRoute"], [27, 4, 1, "", "GRAPH"], [27, 4, 1, "", "LIGHTPATH_ID"], [27, 4, 1, "", "LIGHTPATH_INFO"], [27, 4, 1, "", "LINK_CAP"], [27, 5, 1, "", "Lumentum_MonitorLightpath"], [27, 5, 1, "", "Lumentum_installPath"], [27, 5, 1, "", "Lumentum_setupLightpath"], [27, 5, 1, "", "Lumentum_teardownLightpath"], [27, 5, 1, "", "Lumentum_uninstallPath"], [27, 5, 1, "", "Mininet_installPath"], [27, 5, 1, "", "Mininet_monitorDifference"], [27, 5, 1, "", "Mininet_monitorLightpath"], [27, 5, 1, "", "Mininet_setupLightpath"], [27, 5, 1, "", "Mininet_teardownLightpath"], [27, 5, 1, "", "Mininet_uninstallPath"], [27, 4, 1, "", "NAME_ROADM"], [27, 4, 1, "", "NETLINKS"], [27, 4, 1, "", "NETLINK_INFO"], [27, 4, 1, "", "NODES"], [27, 4, 1, "", "NUM_NODE"], [27, 4, 1, "", "NUM_WAV"], [27, 4, 1, "", "PATH_CH_TO_LIGHTPATH"], [27, 4, 1, "", "ROADM_TO_ID"], [27, 4, 1, "", "ROADM_TO_TERMINAL"], [27, 4, 1, "", "ROADM_TRAF"], [27, 4, 1, "", "RU_ROADMS"], [27, 5, 1, "", "RoadmPhyNetwork"], [27, 4, 1, "", "SRC_DST_TO_LIGHTPATH"], [27, 5, 1, "", "Span"], [27, 4, 1, "", "TERMINAL_TO_ID"], [27, 4, 1, "", "TERMINAL_TO_ROADM"], [27, 4, 1, "", "TRAFFIC_ID"], [27, 4, 1, "", "TRAFFIC_INFO"], [27, 4, 1, "", "UP_LIGHTPATH_ID_SET"], [27, 4, 1, "", "UP_LIGHTPATH_TIME_LIST"], [27, 4, 1, "", "UP_TRAF_ID_SET"], [27, 4, 1, "", "UP_TRAF_TIME_LIST"], [27, 5, 1, "", "check_lightpath_for_traf"], [27, 5, 1, "", "getLinks"], [27, 5, 1, "", "install_Lightpath"], [27, 5, 1, "", "install_Traf"], [27, 5, 1, "", "linkspec"], [27, 4, 1, "", "m"], [27, 4, 1, "", "name_roadms"], [27, 4, 1, "", "name_terminals"], [27, 5, 1, "", "netGraph"], [27, 4, 1, "", "node"], [27, 5, 1, "", "testMininet"], [27, 5, 1, "", "traf_to_lightpah_Assignment"], [27, 5, 1, "", "traf_to_lightpath_Release"], [27, 5, 1, "", "uninstall_Lightpath"], [27, 5, 1, "", "update_lightpath_down_time"], [27, 5, 1, "", "waveAvailibility"], [27, 5, 1, "", "waveSelection"]], "mnoptical.ofcdemo.Simulation_API": [[28, 1, 1, "", "Mininet_Optical_Simu_API"]], "mnoptical.ofcdemo.Simulation_API.Mininet_Optical_Simu_API": [[28, 3, 1, "", "ROADM_deleteSwitchRule"], [28, 3, 1, "", "ROADM_installSwitchRule"], [28, 3, 1, "", "ROADM_monitor_all_gosnr"], [28, 3, 1, "", "ROADM_monitor_all_osnr"], [28, 3, 1, "", "ROADM_monitor_all_power"], [28, 3, 1, "", "ROADM_monitor_channel_data"], [28, 3, 1, "", "ROADM_voaPowerLeveling"], [28, 3, 1, "", "Terminal_Reset_Threshold"], [28, 3, 1, "", "Terminal_configChannel"], [28, 3, 1, "", "Terminal_configChannelPower"], [28, 3, 1, "", "Terminal_turnoffChannel"], [28, 3, 1, "", "Terminal_turnonChannel"]], "mnoptical.ofcdemo.apsp": [[29, 5, 1, "", "adjacencyDict"], [29, 5, 1, "", "allocateChannels"], [29, 5, 1, "", "canonical"], [29, 5, 1, "", "channelPorts"], [29, 5, 1, "", "configurePacketSwitches"], [29, 5, 1, "", "configureTerminals"], [29, 5, 1, "", "countSignals"], [29, 5, 1, "", "entriesToReroute"], [29, 5, 1, "", "installPath"], [29, 5, 1, "", "installRoutes"], [29, 5, 1, "", "monitorKey"], [29, 5, 1, "", "monitorOSNR"], [29, 4, 1, "", "net"], [29, 5, 1, "", "reroute"], [29, 5, 1, "", "route"], [29, 5, 1, "", "run"]], "mnoptical.ofcdemo.demo": [[30, 4, 1, "", "net"]], "mnoptical.ofcdemo.demo_2021": [[31, 4, 1, "", "net"]], "mnoptical.ofcdemo.demo_hwtopo": [[32, 5, 1, "", "Control_Test"], [32, 4, 1, "", "NetconfPortBase"], [32, 5, 1, "", "fixIPMap"]], "mnoptical.ofcdemo.demolib": [[33, 4, 1, "", "AmpSpec"], [33, 4, 1, "", "CLI"], [33, 1, 1, "", "DemoTopo"], [33, 1, 1, "", "LinearRoadmTopo"], [33, 4, 1, "", "ListenPortBase"], [33, 1, 1, "", "OpticalCLI"], [33, 1, 1, "", "OpticalTopo"], [33, 4, 1, "", "SpanSpec"], [33, 5, 1, "", "configureLinearNet"], [33, 5, 1, "", "linearRoadmTest"], [33, 4, 1, "", "net"], [33, 5, 1, "", "spanSpec"]], "mnoptical.ofcdemo.demolib.DemoTopo": [[33, 3, 1, "", "addPopLink"], [33, 3, 1, "", "build"]], "mnoptical.ofcdemo.demolib.LinearRoadmTopo": [[33, 3, 1, "", "build"], [33, 3, 1, "", "buildPop"], [33, 3, 1, "", "ip"], [33, 3, 1, "", "spans"]], "mnoptical.ofcdemo.demolib.OpticalCLI": [[33, 3, 1, "", "_fmtPathEntry"], [33, 3, 1, "", "_fmtSigState"], [33, 3, 1, "", "_printPathState"], [33, 3, 1, "", "do_amppowers"], [33, 3, 1, "", "do_arp"], [33, 3, 1, "", "do_checklinks"], [33, 3, 1, "", "do_checkroadms"], [33, 3, 1, "", "do_linksignals"], [33, 3, 1, "", "do_monitors"], [33, 3, 1, "", "do_osnr"], [33, 3, 1, "", "do_plot"], [33, 3, 1, "", "do_propagate"], [33, 3, 1, "", "do_reset"], [33, 3, 1, "", "do_setgain"], [33, 3, 1, "", "do_signals"], [33, 3, 1, "", "do_sigpath"], [33, 3, 1, "", "do_sigtrace"], [33, 3, 1, "", "do_spans"], [33, 3, 1, "", "formatSigState"], [33, 3, 1, "", "opticalLinks"], [33, 3, 1, "", "printNodeSignals"], [33, 3, 1, "", "printOsnr"], [33, 3, 1, "", "printSignals"], [33, 2, 1, "", "prompt"], [33, 3, 1, "", "spans"]], "mnoptical.ofcdemo.demolib.OpticalTopo": [[33, 3, 1, "", "ethLink"], [33, 3, 1, "", "wdmLink"]], "mnoptical.ofcdemo.demolib_2021": [[34, 4, 1, "", "AmpSpec"], [34, 4, 1, "", "CLI"], [34, 1, 1, "", "DemoTopo"], [34, 1, 1, "", "LinearRoadmTopo"], [34, 4, 1, "", "ListenPortBase"], [34, 1, 1, "", "OpticalTopo"], [34, 4, 1, "", "SpanSpec"], [34, 5, 1, "", "configureLinearNet"], [34, 5, 1, "", "linearRoadmTest"], [34, 4, 1, "", "net"], [34, 5, 1, "", "spanSpec"]], "mnoptical.ofcdemo.demolib_2021.DemoTopo": [[34, 3, 1, "", "addPopLink"], [34, 3, 1, "", "build"]], "mnoptical.ofcdemo.demolib_2021.LinearRoadmTopo": [[34, 3, 1, "", "build"], [34, 3, 1, "", "buildPop"], [34, 3, 1, "", "ip"], [34, 3, 1, "", "spans"]], "mnoptical.ofcdemo.demolib_2021.OpticalTopo": [[34, 3, 1, "", "ethLink"], [34, 3, 1, "", "wdmLink"]], "mnoptical.ofcdemo.fakecontroller": [[35, 4, 1, "", "ListenPortBase"], [35, 1, 1, "", "NodeProxy"], [35, 1, 1, "", "OFSwitchProxy"], [35, 1, 1, "", "Proxy"], [35, 1, 1, "", "RESTProxy"], [35, 1, 1, "", "ROADMProxy"], [35, 1, 1, "", "SwitchProxy"], [35, 1, 1, "", "TerminalProxy"], [35, 5, 1, "", "fetchLinks"], [35, 5, 1, "", "fetchNodes"], [35, 5, 1, "", "fetchOSNR"], [35, 5, 1, "", "fetchPorts"], [35, 5, 1, "", "fetchRules"]], "mnoptical.ofcdemo.fakecontroller.NodeProxy": [[35, 3, 1, "", "ports"]], "mnoptical.ofcdemo.fakecontroller.OFSwitchProxy": [[35, 3, 1, "", "dpctl"], [35, 2, 1, "", "listenPort"]], "mnoptical.ofcdemo.fakecontroller.Proxy": [[35, 3, 1, "", "__repr__"]], "mnoptical.ofcdemo.fakecontroller.RESTProxy": [[35, 3, 1, "", "get"]], "mnoptical.ofcdemo.fakecontroller.ROADMProxy": [[35, 3, 1, "", "connect"], [35, 3, 1, "", "reset"]], "mnoptical.ofcdemo.fakecontroller.SwitchProxy": [[35, 3, 1, "", "rules"]], "mnoptical.ofcdemo.fakecontroller.TerminalProxy": [[35, 3, 1, "", "connect"], [35, 3, 1, "", "reset"], [35, 3, 1, "", "turn_on"]], "mnoptical.ofcdemo.hwtopo": [[36, 1, 1, "", "Lumentum"], [36, 1, 1, "", "LumentumLinear"], [36, 1, 1, "", "MUX"], [36, 5, 1, "", "configComb"], [36, 4, 1, "", "netconfPortBase"], [36, 4, 1, "", "topo"]], "mnoptical.ofcdemo.hwtopo.Lumentum": [[36, 2, 1, "", "password"], [36, 2, 1, "", "username"]], "mnoptical.ofcdemo.hwtopo.LumentumLinear": [[36, 3, 1, "", "addport"], [36, 3, 1, "", "build"], [36, 3, 1, "", "dropport"], [36, 3, 1, "", "hostname"], [36, 3, 1, "", "wdmLink"]], "mnoptical.ofcdemo.lroadm": [[38, 1, 1, "", "LROADM"], [38, 4, 1, "", "NetconfPortBase"], [38, 4, 1, "", "password"], [38, 4, 1, "", "username"]], "mnoptical.ofcdemo.lroadm.LROADM": [[38, 3, 1, "", "__str__"], [38, 3, 1, "", "addport"], [38, 3, 1, "", "dropport"], [38, 2, 1, "", "password"], [38, 2, 1, "", "username"]], "mnoptical.ofcdemo.lumentum_NETCONF_API": [[39, 1, 1, "", "Lumentum"], [39, 1, 1, "", "Lumentum_NETCONF"], [39, 4, 1, "", "PASSWORD"], [39, 4, 1, "", "USERNAME"], [39, 1, 1, "", "xmltodict"]], "mnoptical.ofcdemo.lumentum_NETCONF_API.Lumentum": [[39, 3, 1, "", "ALS_disable"], [39, 1, 1, "", "WSSConnection"], [39, 1, 1, "", "WSSConnectionStatus"], [39, 3, 1, "", "cleanup"], [39, 2, 1, "", "connections"], [39, 3, 1, "", "edfa_config"], [39, 3, 1, "", "edfa_status"], [39, 3, 1, "", "freqRangeGHz"], [39, 3, 1, "", "gen_dwdm_connections"], [39, 3, 1, "", "lookup"], [39, 3, 1, "", "lookupstr"], [39, 3, 1, "", "wss_add_connections"], [39, 3, 1, "", "wss_delete_connection"], [39, 3, 1, "", "wss_get_connections"]], "mnoptical.ofcdemo.lumentum_NETCONF_API.Lumentum.WSSConnectionStatus": [[39, 3, 1, "", "from_connection_details"]], "mnoptical.ofcdemo.lumentum_NETCONF_API.Lumentum_NETCONF": [[39, 3, 1, "", "_ConfigWSS"], [39, 3, 1, "", "_WSSMonitor"], [39, 3, 1, "", "parseConnections"]], "mnoptical.ofcdemo.lumentum_NETCONF_API.xmltodict": [[39, 3, 1, "", "parse"]], "mnoptical.ofcdemo.netconfserver": [[40, 4, 1, "", "ConnNsmap"], [40, 4, 1, "", "Debug"], [40, 4, 1, "", "EdfaNsmap"], [40, 1, 1, "", "NetconfAgent"], [40, 4, 1, "", "NetconfPortBase"], [40, 1, 1, "", "NetconfServer"], [40, 4, 1, "", "SSLKeyFileDefault"], [40, 4, 1, "", "configNs"], [40, 5, 1, "", "debug"], [40, 4, 1, "", "linein"], [40, 4, 1, "", "lineout"], [40, 4, 1, "", "nsmap"], [40, 5, 1, "", "parseconn"], [40, 5, 1, "", "runTestServer"], [40, 5, 1, "", "xmlstring"]], "mnoptical.ofcdemo.netconfserver.NetconfAgent": [[40, 3, 1, "", "add_config"], [40, 3, 1, "", "add_connections"], [40, 3, 1, "", "add_edfas"], [40, 3, 1, "", "delete_connection_dn"], [40, 3, 1, "", "findInputPower"], [40, 3, 1, "", "findOutputPower"], [40, 3, 1, "", "nc_append_capabilities"], [40, 3, 1, "", "rpc_delete_connection"], [40, 3, 1, "", "rpc_disable_als"], [40, 3, 1, "", "rpc_edit_config"], [40, 3, 1, "", "rpc_get"], [40, 3, 1, "", "rpc_get_config"], [40, 3, 1, "", "rpc_remove_all_connections"], [40, 3, 1, "", "stop"], [40, 3, 1, "", "updateConnections"]], "mnoptical.ofcdemo.netconfserver.NetconfServer": [[40, 3, 1, "", "start"], [40, 3, 1, "", "stop"]], "mnoptical.ofcdemo.simpledemo": [[41, 4, 1, "", "net"]], "mnoptical.rest": [[42, 1, 1, "", "QuietHandler"], [42, 1, 1, "", "RestServer"], [42, 5, 1, "", "cleanme"], [42, 5, 1, "", "config"], [42, 5, 1, "", "connect"], [42, 5, 1, "", "disconnect"], [42, 5, 1, "", "info"], [42, 5, 1, "", "interRoadmLinks"], [42, 5, 1, "", "links"], [42, 5, 1, "", "linkspec"], [42, 5, 1, "", "lookUpNode"], [42, 5, 1, "", "monitor"], [42, 5, 1, "", "monitorHandler"], [42, 5, 1, "", "monitors"], [42, 5, 1, "", "net"], [42, 5, 1, "", "nodeHandler"], [42, 5, 1, "", "nodes"], [42, 5, 1, "", "opticalLinks"], [42, 5, 1, "", "ports"], [42, 5, 1, "", "reset"], [42, 5, 1, "", "routerLinks"], [42, 5, 1, "", "rules"], [42, 5, 1, "", "set_ripple"], [42, 5, 1, "", "setgain"], [42, 5, 1, "", "terminalLinks"], [42, 5, 1, "", "turn_on"]], "mnoptical.rest.QuietHandler": [[42, 3, 1, "", "log_request"], [42, 2, 1, "", "quiet"]], "mnoptical.rest.RestServer": [[42, 2, 1, "", "net"], [42, 3, 1, "", "start"], [42, 3, 1, "", "stop"]], "mnoptical.terminal_params": [[43, 4, 1, "", "bps"], [43, 4, 1, "", "rx_thresholds"], [43, 4, 1, "", "sr"]], "mnoptical.topo": [[44, 0, 0, "-", "cian_small_linear"], [45, 0, 0, "-", "cost239"], [46, 0, 0, "-", "deutsche_telekom"], [47, 0, 0, "-", "helper_funcs"], [49, 0, 0, "-", "linear"], [50, 0, 0, "-", "linear_multiloc"], [51, 0, 0, "-", "linear_params"], [52, 0, 0, "-", "ofc_demo"], [53, 0, 0, "-", "ring_topology"]], "mnoptical.topo.cian_small_linear": [[44, 1, 1, "", "CIANSmallLinear"]], "mnoptical.topo.cian_small_linear.CIANSmallLinear": [[44, 3, 1, "", "build"]], "mnoptical.topo.cost239": [[45, 1, 1, "", "Cost239Topology"], [45, 5, 1, "", "build_link"], [45, 5, 1, "", "build_links"], [45, 5, 1, "", "build_spans"]], "mnoptical.topo.cost239.Cost239Topology": [[45, 3, 1, "", "build"]], "mnoptical.topo.deutsche_telekom": [[46, 1, 1, "", "DeutscheTelekom"]], "mnoptical.topo.deutsche_telekom.DeutscheTelekom": [[46, 3, 1, "", "build"]], "mnoptical.topo.helper_funcs": [[47, 5, 1, "", "Span"], [47, 5, 1, "", "add_amp"], [47, 5, 1, "", "build_link"], [47, 5, 1, "", "build_spans"], [47, 4, 1, "", "m"]], "mnoptical.topo.linear": [[49, 1, 1, "", "LinearTopology"], [49, 5, 1, "", "Span"], [49, 5, 1, "", "add_amp"], [49, 5, 1, "", "build_link"], [49, 5, 1, "", "build_spans"], [49, 4, 1, "", "m"]], "mnoptical.topo.linear.LinearTopology": [[49, 3, 1, "", "build"]], "mnoptical.topo.linear_multiloc": [[50, 1, 1, "", "LinearTopology"]], "mnoptical.topo.linear_multiloc.LinearTopology": [[50, 3, 1, "", "build"]], "mnoptical.topo.linear_params": [[51, 1, 1, "", "LinearTopology"]], "mnoptical.topo.linear_params.LinearTopology": [[51, 3, 1, "", "build"]], "mnoptical.topo.ofc_demo": [[52, 5, 1, "", "build"]], "mnoptical.topo.ring_topology": [[53, 1, 1, "", "RingTopology"]], "mnoptical.topo.ring_topology.RingTopology": [[53, 3, 1, "", "build"]], "mnoptical.units": [[54, 4, 1, "", "THz"], [54, 4, 1, "", "W"], [54, 5, 1, "", "abs_to_db"], [54, 5, 1, "", "abs_to_dbm"], [54, 4, 1, "", "c"], [54, 4, 1, "", "cm"], [54, 5, 1, "", "db_to_abs"], [54, 4, 1, "", "h"], [54, 4, 1, "", "km"], [54, 4, 1, "", "mW"], [54, 4, 1, "", "nm"], [54, 4, 1, "", "pi"], [54, 4, 1, "", "ps"], [54, 4, 1, "", "um"]], "mnoptical.visualization": [[55, 4, 1, "", "net"], [55, 5, 1, "", "plot_power_vs_wavelength"]], "mnoptical.visualize_topo": [[56, 5, 1, "", "extract_power"], [56, 5, 1, "", "visualize"], [56, 5, 1, "", "visualize_topology"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:data", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "data", "Python data"], "5": ["py", "function", "Python function"]}, "titleterms": {"welcom": 0, "mininet": [0, 1, 57, 60], "optic": [0, 1, 57, 60], "overview": [0, 1, 2], "directori": 0, "python": [0, 1], "modul": [0, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56], "mnoptic": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "subcompon": 0, "other": [0, 59], "file": 0, "acknowledg": [0, 57], "api": [1, 3, 58], "specifi": 1, "topologi": 1, "start": 1, "rest": [1, 42], "sdn": 1, "control": 1, "architectur": 2, "refer": 3, "dataplan": 4, "content": [4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56], "class": [4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 28, 33, 34, 35, 36, 38, 39, 40, 42, 44, 45, 46, 49, 50, 51, 53], "function": [4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 24, 25, 26, 27, 29, 32, 33, 34, 35, 36, 40, 42, 45, 47, 49, 52, 54, 55, 56], "attribut": [4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 26, 27, 29, 32, 33, 34, 35, 36, 38, 39, 40, 47, 49, 54, 55], "edfa_param": 5, "exampl": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "config_lroadmr": 6, "dbgtest": 7, "submodul": [8, 20, 37, 48], "lroadmr": 9, "roadm_with_amp": 10, "simplelink": 11, "singlelink": 12, "singleroadm": [13, 58], "sixnodestopo": 14, "test": 15, "attenu": 15, "unilinear1": 16, "unilinear2": 17, "unir": 18, "uniroadmchain": 19, "subpackag": 20, "link": [21, 58], "network": 22, "node": 23, "ofcdemo": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "control_test_lum": 24, "control_test_mininet_rest": 25, "demo_control": 26, "demo_control_2": 27, "simulation_api": 28, "apsp": 29, "demo": 30, "demo_2021": 31, "demo_hwtopo": 32, "demolib": 33, "demolib_2021": 34, "fakecontrol": 35, "hwtopo": 36, "lroadm": 38, "lumentum_netconf_api": 39, "netconfserv": 40, "simpledemo": 41, "terminal_param": 43, "topo": [44, 45, 46, 47, 48, 49, 50, 51, 52, 53], "cian_small_linear": 44, "cost239": 45, "deutsche_telekom": 46, "helper_func": 47, "linear": 49, "linear_multiloc": 50, "linear_param": 51, "ofc_demo": 52, "ring_topologi": 53, "unit": 54, "visual": [55, 59], "visualize_topo": 56, "document": 57, "indic": 57, "tabl": 57, "tutori": 58, "simul": 58, "mode": 58, "emul": 58, "part": 58, "0": 58, "make": 58, "sure": 58, "py": 58, "work": 58, "correctli": 58, "import": 58, "note": 58, "bidirect": 58, "1": 58, "add": 58, "transceiv": 58, "2": 58, "program": 58, "data": 58, "plane": 58, "hint": 58, "advic": 58, "extra": 58, "credit": 58, "insan": 58, "motiv": 58, "how": 59, "run": [59, 60], "tool": 59, "access": 59, "plot": 59, "metric": 59, "instal": 60, "walkthrough": 60, "set": 60, "up": 60, "prerequisit": 60, "simpl": 60, "script": 60, "command": 60, "rout": 60, "congratul": 60}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Welcome to Mininet-Optical": [[0, "welcome-to-mininet-optical"]], "Overview": [[0, "overview"]], "Directories": [[0, "directories"]], "Python modules in mnoptical/": [[0, "python-modules-in-mnoptical"]], "Subcomponents of mnoptical/": [[0, "subcomponents-of-mnoptical"]], "Other files": [[0, "other-files"]], "Acknowledgments": [[0, "acknowledgments"], [57, "acknowledgments"]], "API Overview": [[1, "api-overview"]], "Python API": [[1, "python-api"]], "Specifying a Topology": [[1, "specifying-a-topology"]], "Starting Mininet-Optical": [[1, "starting-mininet-optical"]], "REST SDN Control API": [[1, "rest-sdn-control-api"]], "Architecture Overview": [[2, "architecture-overview"]], "Architecture": [[2, "architecture"]], "API Reference": [[3, "api-reference"]], "mnoptical.dataplane": [[4, "module-mnoptical.dataplane"]], "Module Contents": [[4, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [9, "module-contents"], [10, "module-contents"], [11, "module-contents"], [12, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [21, "module-contents"], [22, "module-contents"], [23, "module-contents"], [24, "module-contents"], [25, "module-contents"], [26, "module-contents"], [27, "module-contents"], [28, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [32, "module-contents"], [33, "module-contents"], [34, "module-contents"], [35, "module-contents"], [36, "module-contents"], [38, "module-contents"], [39, "module-contents"], [40, "module-contents"], [41, "module-contents"], [42, "module-contents"], [43, "module-contents"], [44, "module-contents"], [45, "module-contents"], [46, "module-contents"], [47, "module-contents"], [49, "module-contents"], [50, "module-contents"], [51, "module-contents"], [52, "module-contents"], [53, "module-contents"], [54, "module-contents"], [55, "module-contents"], [56, "module-contents"]], "Classes": [[4, "classes"], [9, "classes"], [10, "classes"], [11, "classes"], [12, "classes"], [13, "classes"], [14, "classes"], [15, "classes"], [16, "classes"], [17, "classes"], [18, "classes"], [19, "classes"], [21, "classes"], [22, "classes"], [23, "classes"], [24, "classes"], [25, "classes"], [28, "classes"], [33, "classes"], [34, "classes"], [35, "classes"], [36, "classes"], [38, "classes"], [39, "classes"], [40, "classes"], [42, "classes"], [44, "classes"], [45, "classes"], [46, "classes"], [49, "classes"], [50, "classes"], [51, "classes"], [53, "classes"]], "Functions": [[4, "functions"], [6, "functions"], [7, "functions"], [9, "functions"], [10, "functions"], [11, "functions"], [12, "functions"], [13, "functions"], [14, "functions"], [15, "functions"], [16, "functions"], [17, "functions"], [18, "functions"], [24, "functions"], [25, "functions"], [26, "functions"], [27, "functions"], [29, "functions"], [32, "functions"], [33, "functions"], [34, "functions"], [35, "functions"], [36, "functions"], [40, "functions"], [42, "functions"], [45, "functions"], [47, "functions"], [49, "functions"], [52, "functions"], [54, "functions"], [55, "functions"], [56, "functions"]], "Attributes": [[4, "attributes"], [6, "attributes"], [7, "attributes"], [9, "attributes"], [10, "attributes"], [11, "attributes"], [12, "attributes"], [13, "attributes"], [14, "attributes"], [15, "attributes"], [16, "attributes"], [17, "attributes"], [18, "attributes"], [19, "attributes"], [21, "attributes"], [23, "attributes"], [24, "attributes"], [26, "attributes"], [27, "attributes"], [29, "attributes"], [32, "attributes"], [33, "attributes"], [34, "attributes"], [35, "attributes"], [36, "attributes"], [38, "attributes"], [39, "attributes"], [40, "attributes"], [47, "attributes"], [49, "attributes"], [54, "attributes"], [55, "attributes"]], "mnoptical.edfa_params": [[5, "module-mnoptical.edfa_params"]], "mnoptical.examples.config_lroadmring": [[6, "module-mnoptical.examples.config_lroadmring"]], "mnoptical.examples.dbgtest": [[7, "module-mnoptical.examples.dbgtest"]], "mnoptical.examples": [[8, "module-mnoptical.examples"]], "Submodules": [[8, "submodules"], [20, "submodules"], [37, "submodules"], [48, "submodules"]], "mnoptical.examples.lroadmring": [[9, "module-mnoptical.examples.lroadmring"]], "mnoptical.examples.roadm_with_amps": [[10, "module-mnoptical.examples.roadm_with_amps"]], "mnoptical.examples.simplelink": [[11, "module-mnoptical.examples.simplelink"]], "mnoptical.examples.singlelink": [[12, "module-mnoptical.examples.singlelink"]], "mnoptical.examples.singleroadm": [[13, "module-mnoptical.examples.singleroadm"]], "mnoptical.examples.sixnodestopo": [[14, "module-mnoptical.examples.sixnodestopo"]], "mnoptical.examples.test-attenuator": [[15, "module-mnoptical.examples.test-attenuator"]], "mnoptical.examples.unilinear1": [[16, "module-mnoptical.examples.unilinear1"]], "mnoptical.examples.unilinear2": [[17, "module-mnoptical.examples.unilinear2"]], "mnoptical.examples.uniring": [[18, "module-mnoptical.examples.uniring"]], "mnoptical.examples.uniroadmchain": [[19, "module-mnoptical.examples.uniroadmchain"]], "mnoptical": [[20, "module-mnoptical"]], "Subpackages": [[20, "subpackages"]], "mnoptical.link": [[21, "module-mnoptical.link"]], "mnoptical.network": [[22, "module-mnoptical.network"]], "mnoptical.node": [[23, "module-mnoptical.node"]], "mnoptical.ofcdemo.Control_Test_Lum": [[24, "module-mnoptical.ofcdemo.Control_Test_Lum"]], "mnoptical.ofcdemo.Control_Test_Mininet_REST": [[25, "module-mnoptical.ofcdemo.Control_Test_Mininet_REST"]], "mnoptical.ofcdemo.Demo_Control": [[26, "module-mnoptical.ofcdemo.Demo_Control"]], "mnoptical.ofcdemo.Demo_Control_2": [[27, "module-mnoptical.ofcdemo.Demo_Control_2"]], "mnoptical.ofcdemo.Simulation_API": [[28, "module-mnoptical.ofcdemo.Simulation_API"]], "mnoptical.ofcdemo.apsp": [[29, "module-mnoptical.ofcdemo.apsp"]], "mnoptical.ofcdemo.demo": [[30, "module-mnoptical.ofcdemo.demo"]], "mnoptical.ofcdemo.demo_2021": [[31, "module-mnoptical.ofcdemo.demo_2021"]], "mnoptical.ofcdemo.demo_hwtopo": [[32, "module-mnoptical.ofcdemo.demo_hwtopo"]], "mnoptical.ofcdemo.demolib": [[33, "module-mnoptical.ofcdemo.demolib"]], "mnoptical.ofcdemo.demolib_2021": [[34, "module-mnoptical.ofcdemo.demolib_2021"]], "mnoptical.ofcdemo.fakecontroller": [[35, "module-mnoptical.ofcdemo.fakecontroller"]], "mnoptical.ofcdemo.hwtopo": [[36, "module-mnoptical.ofcdemo.hwtopo"]], "mnoptical.ofcdemo": [[37, "module-mnoptical.ofcdemo"]], "mnoptical.ofcdemo.lroadm": [[38, "module-mnoptical.ofcdemo.lroadm"]], "mnoptical.ofcdemo.lumentum_NETCONF_API": [[39, "module-mnoptical.ofcdemo.lumentum_NETCONF_API"]], "mnoptical.ofcdemo.netconfserver": [[40, "module-mnoptical.ofcdemo.netconfserver"]], "mnoptical.ofcdemo.simpledemo": [[41, "module-mnoptical.ofcdemo.simpledemo"]], "mnoptical.rest": [[42, "module-mnoptical.rest"]], "mnoptical.terminal_params": [[43, "module-mnoptical.terminal_params"]], "mnoptical.topo.cian_small_linear": [[44, "module-mnoptical.topo.cian_small_linear"]], "mnoptical.topo.cost239": [[45, "module-mnoptical.topo.cost239"]], "mnoptical.topo.deutsche_telekom": [[46, "module-mnoptical.topo.deutsche_telekom"]], "mnoptical.topo.helper_funcs": [[47, "module-mnoptical.topo.helper_funcs"]], "mnoptical.topo": [[48, "module-mnoptical.topo"]], "mnoptical.topo.linear": [[49, "module-mnoptical.topo.linear"]], "mnoptical.topo.linear_multiloc": [[50, "module-mnoptical.topo.linear_multiloc"]], "mnoptical.topo.linear_params": [[51, "module-mnoptical.topo.linear_params"]], "mnoptical.topo.ofc_demo": [[52, "module-mnoptical.topo.ofc_demo"]], "mnoptical.topo.ring_topology": [[53, "module-mnoptical.topo.ring_topology"]], "mnoptical.units": [[54, "module-mnoptical.units"]], "mnoptical.visualization": [[55, "module-mnoptical.visualization"]], "mnoptical.visualize_topo": [[56, "module-mnoptical.visualize_topo"]], "Mininet-Optical Documentation": [[57, "mininet-optical-documentation"]], "Indices and tables": [[57, "indices-and-tables"]], "Tutorial": [[58, "tutorial"]], "Simulation Mode Tutorial": [[58, "simulation-mode-tutorial"]], "Emulation Tutorial": [[58, "emulation-tutorial"]], "Part 0: Make sure singleroadm.py works correctly": [[58, "part-0-make-sure-singleroadm-py-works-correctly"]], "Important Note: Bidirectional Emulator API": [[58, "important-note-bidirectional-emulator-api"]], "Part 1: Add transceivers and links": [[58, "part-1-add-transceivers-and-links"]], "Part 2: Programming the Data Plane": [[58, "part-2-programming-the-data-plane"]], "Hints and Advice": [[58, "hints-and-advice"]], "Extra Credit for the Insanely Motivated": [[58, "extra-credit-for-the-insanely-motivated"]], "Visualization": [[59, "visualization"]], "How to run the visualization tool": [[59, "how-to-run-the-visualization-tool"]], "How to access and plot other metrics": [[59, "how-to-access-and-plot-other-metrics"]], "Installation and Walkthrough": [[60, "installation-and-walkthrough"]], "Setting up Mininet-Optical": [[60, "setting-up-mininet-optical"]], "Prerequisites": [[60, "prerequisites"]], "Installing Mininet": [[60, "installing-mininet"]], "Installing Mininet-Optical": [[60, "installing-mininet-optical"]], "Running a simple Mininet-Optical script": [[60, "running-a-simple-mininet-optical-script"]], "Mininet-Optical commands": [[60, "mininet-optical-commands"]], "Setting up routes": [[60, "setting-up-routes"]], "Congratulations!": [[60, "congratulations"]]}, "indexentries": {"add (mnoptical.dataplane.combsource attribute)": [[4, "mnoptical.dataplane.CombSource.ADD"]], "amplifierpair (class in mnoptical.dataplane)": [[4, "mnoptical.dataplane.AmplifierPair"]], "combsource (class in mnoptical.dataplane)": [[4, "mnoptical.dataplane.CombSource"]], "lineout (mnoptical.dataplane.combsource attribute)": [[4, "mnoptical.dataplane.CombSource.LINEOUT"]], "mininet (in module mnoptical.dataplane)": [[4, "mnoptical.dataplane.Mininet"]], "monitor (class in mnoptical.dataplane)": [[4, "mnoptical.dataplane.Monitor"]], "opticalin (class in mnoptical.dataplane)": [[4, "mnoptical.dataplane.OpticalIn"]], "opticalintf (class in mnoptical.dataplane)": [[4, "mnoptical.dataplane.OpticalIntf"]], "opticallink (class in mnoptical.dataplane)": [[4, "mnoptical.dataplane.OpticalLink"]], "opticalnet (class in mnoptical.dataplane)": [[4, "mnoptical.dataplane.OpticalNet"]], "opticalout (class in mnoptical.dataplane)": [[4, "mnoptical.dataplane.OpticalOut"]], "physpan() (in module mnoptical.dataplane)": [[4, "mnoptical.dataplane.PhySpan"]], "roadm (class in mnoptical.dataplane)": [[4, "mnoptical.dataplane.ROADM"]], "simpleroadm (class in mnoptical.dataplane)": [[4, "mnoptical.dataplane.SimpleROADM"]], "switchbase (class in mnoptical.dataplane)": [[4, "mnoptical.dataplane.SwitchBase"]], "terminal (class in mnoptical.dataplane)": [[4, "mnoptical.dataplane.Terminal"]], "twotransceivertopo (class in mnoptical.dataplane)": [[4, "mnoptical.dataplane.TwoTransceiverTopo"]], "unilink (in module mnoptical.dataplane)": [[4, "mnoptical.dataplane.UniLink"]], "unidirectionalopticallink() (in module mnoptical.dataplane)": [[4, "mnoptical.dataplane.UnidirectionalOpticalLink"]], "__iter__() (mnoptical.dataplane.opticalnet method)": [[4, "mnoptical.dataplane.OpticalNet.__iter__"]], "__str__() (mnoptical.dataplane.monitor method)": [[4, "mnoptical.dataplane.Monitor.__str__"]], "_parseargs() (mnoptical.dataplane.opticallink method)": [[4, "mnoptical.dataplane.OpticalLink._parseArgs"]], "_parsespans() (mnoptical.dataplane.opticallink method)": [[4, "mnoptical.dataplane.OpticalLink._parseSpans"]], "addlink() (mnoptical.dataplane.opticalnet method)": [[4, "mnoptical.dataplane.OpticalNet.addLink"]], "addlinkcomponents() (mnoptical.dataplane.opticalnet method)": [[4, "mnoptical.dataplane.OpticalNet.addLinkComponents"]], "addmonitor() (mnoptical.dataplane.opticalnet method)": [[4, "mnoptical.dataplane.OpticalNet.addMonitor"]], "addswitch() (mnoptical.dataplane.opticalnet method)": [[4, "mnoptical.dataplane.OpticalNet.addSwitch"]], "addterminal() (mnoptical.dataplane.combsource method)": [[4, "mnoptical.dataplane.CombSource.addTerminal"]], "block() (mnoptical.dataplane.terminal method)": [[4, "mnoptical.dataplane.Terminal.block"]], "blockcookie (mnoptical.dataplane.terminal attribute)": [[4, "mnoptical.dataplane.Terminal.blockCookie"]], "build() (mnoptical.dataplane.twotransceivertopo method)": [[4, "mnoptical.dataplane.TwoTransceiverTopo.build"]], "cleanoptlinks() (in module mnoptical.dataplane)": [[4, "mnoptical.dataplane.cleanOptLinks"]], "cmd() (mnoptical.dataplane.switchbase method)": [[4, "mnoptical.dataplane.SwitchBase.cmd"]], "configtx() (mnoptical.dataplane.terminal method)": [[4, "mnoptical.dataplane.Terminal.configTx"]], "connect() (mnoptical.dataplane.roadm method)": [[4, "mnoptical.dataplane.ROADM.connect"]], "connect() (mnoptical.dataplane.terminal method)": [[4, "mnoptical.dataplane.Terminal.connect"]], "db (in module mnoptical.dataplane)": [[4, "mnoptical.dataplane.dB"]], "dbm (in module mnoptical.dataplane)": [[4, "mnoptical.dataplane.dBm"]], "defaultdpid() (mnoptical.dataplane.switchbase method)": [[4, "mnoptical.dataplane.SwitchBase.defaultDpid"]], "disableipv6() (in module mnoptical.dataplane)": [[4, "mnoptical.dataplane.disableIPv6"]], "dpflow() (mnoptical.dataplane.roadm method)": [[4, "mnoptical.dataplane.ROADM.dpFlow"]], "dpinstall() (mnoptical.dataplane.roadm method)": [[4, "mnoptical.dataplane.ROADM.dpInstall"]], "dpremove() (mnoptical.dataplane.roadm method)": [[4, "mnoptical.dataplane.ROADM.dpRemove"]], "dpreset() (mnoptical.dataplane.roadm method)": [[4, "mnoptical.dataplane.ROADM.dpReset"]], "dpidbase (mnoptical.dataplane.switchbase attribute)": [[4, "mnoptical.dataplane.SwitchBase.dpidBase"]], "dumplinkpower() (in module mnoptical.dataplane)": [[4, "mnoptical.dataplane.dumpLinkPower"]], "dumpnet() (in module mnoptical.dataplane)": [[4, "mnoptical.dataplane.dumpNet"]], "execed (mnoptical.dataplane.monitor attribute)": [[4, "mnoptical.dataplane.Monitor.execed"]], "formatsignals() (in module mnoptical.dataplane)": [[4, "mnoptical.dataplane.formatSignals"]], "install() (mnoptical.dataplane.roadm method)": [[4, "mnoptical.dataplane.ROADM.install"]], "intflist() (mnoptical.dataplane.monitor method)": [[4, "mnoptical.dataplane.Monitor.intfList"]], "intfname() (mnoptical.dataplane.opticallink method)": [[4, "mnoptical.dataplane.OpticalLink.intfName"]], "intfnames() (mnoptical.dataplane.monitor method)": [[4, "mnoptical.dataplane.Monitor.intfNames"]], "intfs (mnoptical.dataplane.monitor attribute)": [[4, "mnoptical.dataplane.Monitor.intfs"]], "isinput() (mnoptical.dataplane.opticalin method)": [[4, "mnoptical.dataplane.OpticalIn.isInput"]], "isinput() (mnoptical.dataplane.opticalintf method)": [[4, "mnoptical.dataplane.OpticalIntf.isInput"]], "isinput() (mnoptical.dataplane.opticalout method)": [[4, "mnoptical.dataplane.OpticalOut.isInput"]], "isoutput() (mnoptical.dataplane.opticalin method)": [[4, "mnoptical.dataplane.OpticalIn.isOutput"]], "isoutput() (mnoptical.dataplane.opticalintf method)": [[4, "mnoptical.dataplane.OpticalIntf.isOutput"]], "isoutput() (mnoptical.dataplane.opticalout method)": [[4, "mnoptical.dataplane.OpticalOut.isOutput"]], "km (in module mnoptical.dataplane)": [[4, "mnoptical.dataplane.km"]], "m (in module mnoptical.dataplane)": [[4, "mnoptical.dataplane.m"]], "maketransceiver() (mnoptical.dataplane.terminal static method)": [[4, "mnoptical.dataplane.Terminal.makeTransceiver"]], "mnoptical.dataplane": [[4, "module-mnoptical.dataplane"]], "model (mnoptical.dataplane.roadm attribute)": [[4, "mnoptical.dataplane.ROADM.model"]], "model (mnoptical.dataplane.terminal attribute)": [[4, "mnoptical.dataplane.Terminal.model"]], "modelclass (mnoptical.dataplane.roadm attribute)": [[4, "mnoptical.dataplane.ROADM.modelClass"]], "modelclass (mnoptical.dataplane.switchbase attribute)": [[4, "mnoptical.dataplane.SwitchBase.modelClass"]], "modelclass (mnoptical.dataplane.terminal attribute)": [[4, "mnoptical.dataplane.Terminal.modelClass"]], "module": [[4, "module-mnoptical.dataplane"], [5, "module-mnoptical.edfa_params"], [6, "module-mnoptical.examples.config_lroadmring"], [7, "module-mnoptical.examples.dbgtest"], [8, "module-mnoptical.examples"], [9, "module-mnoptical.examples.lroadmring"], [10, "module-mnoptical.examples.roadm_with_amps"], [11, "module-mnoptical.examples.simplelink"], [12, "module-mnoptical.examples.singlelink"], [13, "module-mnoptical.examples.singleroadm"], [14, "module-mnoptical.examples.sixnodestopo"], [15, "module-mnoptical.examples.test-attenuator"], [16, "module-mnoptical.examples.unilinear1"], [17, "module-mnoptical.examples.unilinear2"], [18, "module-mnoptical.examples.uniring"], [19, "module-mnoptical.examples.uniroadmchain"], [20, "module-mnoptical"], [21, "module-mnoptical.link"], [22, "module-mnoptical.network"], [23, "module-mnoptical.node"], [24, "module-mnoptical.ofcdemo.Control_Test_Lum"], [25, "module-mnoptical.ofcdemo.Control_Test_Mininet_REST"], [26, "module-mnoptical.ofcdemo.Demo_Control"], [27, "module-mnoptical.ofcdemo.Demo_Control_2"], [28, "module-mnoptical.ofcdemo.Simulation_API"], [29, "module-mnoptical.ofcdemo.apsp"], [30, "module-mnoptical.ofcdemo.demo"], [31, "module-mnoptical.ofcdemo.demo_2021"], [32, "module-mnoptical.ofcdemo.demo_hwtopo"], [33, "module-mnoptical.ofcdemo.demolib"], [34, "module-mnoptical.ofcdemo.demolib_2021"], [35, "module-mnoptical.ofcdemo.fakecontroller"], [36, "module-mnoptical.ofcdemo.hwtopo"], [37, "module-mnoptical.ofcdemo"], [38, "module-mnoptical.ofcdemo.lroadm"], [39, "module-mnoptical.ofcdemo.lumentum_NETCONF_API"], [40, "module-mnoptical.ofcdemo.netconfserver"], [41, "module-mnoptical.ofcdemo.simpledemo"], [42, "module-mnoptical.rest"], [43, "module-mnoptical.terminal_params"], [44, "module-mnoptical.topo.cian_small_linear"], [45, "module-mnoptical.topo.cost239"], [46, "module-mnoptical.topo.deutsche_telekom"], [47, "module-mnoptical.topo.helper_funcs"], [48, "module-mnoptical.topo"], [49, "module-mnoptical.topo.linear"], [50, "module-mnoptical.topo.linear_multiloc"], [51, "module-mnoptical.topo.linear_params"], [52, "module-mnoptical.topo.ofc_demo"], [53, "module-mnoptical.topo.ring_topology"], [54, "module-mnoptical.units"], [55, "module-mnoptical.visualization"], [56, "module-mnoptical.visualize_topo"]], "monitors (mnoptical.dataplane.opticalnet attribute)": [[4, "mnoptical.dataplane.OpticalNet.monitors"]], "pexec() (mnoptical.dataplane.monitor method)": [[4, "mnoptical.dataplane.Monitor.pexec"]], "phyamp1 (mnoptical.dataplane.amplifierpair attribute)": [[4, "mnoptical.dataplane.AmplifierPair.phyAmp1"]], "phyamp2 (mnoptical.dataplane.amplifierpair attribute)": [[4, "mnoptical.dataplane.AmplifierPair.phyAmp2"]], "phyinstall() (mnoptical.dataplane.roadm method)": [[4, "mnoptical.dataplane.ROADM.phyInstall"]], "phylink1 (mnoptical.dataplane.opticallink attribute)": [[4, "mnoptical.dataplane.OpticalLink.phyLink1"]], "phylink2 (mnoptical.dataplane.opticallink attribute)": [[4, "mnoptical.dataplane.OpticalLink.phyLink2"]], "phyremove() (mnoptical.dataplane.roadm method)": [[4, "mnoptical.dataplane.ROADM.phyRemove"]], "phyreset() (mnoptical.dataplane.roadm method)": [[4, "mnoptical.dataplane.ROADM.phyReset"]], "receivercallback() (mnoptical.dataplane.terminal method)": [[4, "mnoptical.dataplane.Terminal.receiverCallback"]], "remove() (mnoptical.dataplane.roadm method)": [[4, "mnoptical.dataplane.ROADM.remove"]], "reset() (mnoptical.dataplane.roadm method)": [[4, "mnoptical.dataplane.ROADM.reset"]], "reset() (mnoptical.dataplane.switchbase method)": [[4, "mnoptical.dataplane.SwitchBase.reset"]], "reset() (mnoptical.dataplane.terminal method)": [[4, "mnoptical.dataplane.Terminal.reset"]], "restcleanmehandler() (mnoptical.dataplane.roadm method)": [[4, "mnoptical.dataplane.ROADM.restCleanmeHandler"]], "restconnecthandler() (mnoptical.dataplane.roadm method)": [[4, "mnoptical.dataplane.ROADM.restConnectHandler"]], "restconnecthandler() (mnoptical.dataplane.terminal method)": [[4, "mnoptical.dataplane.Terminal.restConnectHandler"]], "restmonitor() (mnoptical.dataplane.monitor method)": [[4, "mnoptical.dataplane.Monitor.restMonitor"]], "restportsdict() (mnoptical.dataplane.switchbase static method)": [[4, "mnoptical.dataplane.SwitchBase.restPortsDict"]], "restresethandler() (mnoptical.dataplane.switchbase method)": [[4, "mnoptical.dataplane.SwitchBase.restResetHandler"]], "restruleshandler() (mnoptical.dataplane.roadm method)": [[4, "mnoptical.dataplane.ROADM.restRulesHandler"]], "restsetgainhandler() (mnoptical.dataplane.opticalnet method)": [[4, "mnoptical.dataplane.OpticalNet.restSetgainHandler"]], "restsetripplehandler() (mnoptical.dataplane.opticalnet method)": [[4, "mnoptical.dataplane.OpticalNet.restSetrippleHandler"]], "restturnonhandler() (mnoptical.dataplane.combsource method)": [[4, "mnoptical.dataplane.CombSource.restTurnonHandler"]], "restturnonhandler() (mnoptical.dataplane.terminal method)": [[4, "mnoptical.dataplane.Terminal.restTurnonHandler"]], "ruletuple() (mnoptical.dataplane.roadm static method)": [[4, "mnoptical.dataplane.ROADM.ruleTuple"]], "set_ripple() (mnoptical.dataplane.opticalnet method)": [[4, "mnoptical.dataplane.OpticalNet.set_ripple"]], "setgaincmd() (mnoptical.dataplane.opticalnet method)": [[4, "mnoptical.dataplane.OpticalNet.setgainCmd"]], "start() (mnoptical.dataplane.roadm method)": [[4, "mnoptical.dataplane.ROADM.start"]], "start() (mnoptical.dataplane.terminal method)": [[4, "mnoptical.dataplane.Terminal.start"]], "turn_on() (mnoptical.dataplane.combsource method)": [[4, "mnoptical.dataplane.CombSource.turn_on"]], "turn_on() (mnoptical.dataplane.terminal method)": [[4, "mnoptical.dataplane.Terminal.turn_on"]], "twotransceivertest() (in module mnoptical.dataplane)": [[4, "mnoptical.dataplane.twoTransceiverTest"]], "txnum() (mnoptical.dataplane.terminal method)": [[4, "mnoptical.dataplane.Terminal.txnum"]], "unblock() (mnoptical.dataplane.terminal method)": [[4, "mnoptical.dataplane.Terminal.unblock"]], "update() (mnoptical.dataplane.simpleroadm method)": [[4, "mnoptical.dataplane.SimpleROADM.update"]], "waiting (mnoptical.dataplane.monitor attribute)": [[4, "mnoptical.dataplane.Monitor.waiting"]], "fibre_spectral_attenuation (in module mnoptical.edfa_params)": [[5, "mnoptical.edfa_params.fibre_spectral_attenuation"]], "mnoptical.edfa_params": [[5, "module-mnoptical.edfa_params"]], "ripple_functions (in module mnoptical.edfa_params)": [[5, "mnoptical.edfa_params.ripple_functions"]], "n (in module mnoptical.examples.config_lroadmring)": [[6, "mnoptical.examples.config_lroadmring.N"]], "allocchannels() (in module mnoptical.examples.config_lroadmring)": [[6, "mnoptical.examples.config_lroadmring.allocChannels"]], "config() (in module mnoptical.examples.config_lroadmring)": [[6, "mnoptical.examples.config_lroadmring.config"]], "configroadms() (in module mnoptical.examples.config_lroadmring)": [[6, "mnoptical.examples.config_lroadmring.configRoadms"]], "configswitches() (in module mnoptical.examples.config_lroadmring)": [[6, "mnoptical.examples.config_lroadmring.configSwitches"]], "configterminals() (in module mnoptical.examples.config_lroadmring)": [[6, "mnoptical.examples.config_lroadmring.configTerminals"]], "dumpchmap() (in module mnoptical.examples.config_lroadmring)": [[6, "mnoptical.examples.config_lroadmring.dumpChmap"]], "genconnection() (in module mnoptical.examples.config_lroadmring)": [[6, "mnoptical.examples.config_lroadmring.genConnection"]], "genconnections() (in module mnoptical.examples.config_lroadmring)": [[6, "mnoptical.examples.config_lroadmring.genConnections"]], "mnoptical.examples.config_lroadmring": [[6, "module-mnoptical.examples.config_lroadmring"]], "dbgtest() (in module mnoptical.examples.dbgtest)": [[7, "mnoptical.examples.dbgtest.dbgtest"]], "mnoptical.examples.dbgtest": [[7, "module-mnoptical.examples.dbgtest"]], "topo (in module mnoptical.examples.dbgtest)": [[7, "mnoptical.examples.dbgtest.topo"]], "mnoptical.examples": [[8, "module-mnoptical.examples"]], "lumentumbase (class in mnoptical.examples.lroadmring)": [[9, "mnoptical.examples.lroadmring.LumentumBase"]], "lumentumring (class in mnoptical.examples.lroadmring)": [[9, "mnoptical.examples.lroadmring.LumentumRing"]], "addnetworknodes() (mnoptical.examples.lroadmring.lumentumbase method)": [[9, "mnoptical.examples.lroadmring.LumentumBase.addNetworkNodes"]], "addnodelinks() (mnoptical.examples.lroadmring.lumentumbase method)": [[9, "mnoptical.examples.lroadmring.LumentumBase.addNodeLinks"]], "build() (mnoptical.examples.lroadmring.lumentumring method)": [[9, "mnoptical.examples.lroadmring.LumentumRing.build"]], "ethbase (mnoptical.examples.lroadmring.lumentumbase attribute)": [[9, "mnoptical.examples.lroadmring.LumentumBase.ethbase"]], "hostport (mnoptical.examples.lroadmring.lumentumbase attribute)": [[9, "mnoptical.examples.lroadmring.LumentumBase.hostport"]], "listenportbase (mnoptical.examples.lroadmring.lumentumbase attribute)": [[9, "mnoptical.examples.lroadmring.LumentumBase.listenPortBase"]], "mnoptical.examples.lroadmring": [[9, "module-mnoptical.examples.lroadmring"]], "nodenames() (mnoptical.examples.lroadmring.lumentumbase static method)": [[9, "mnoptical.examples.lroadmring.LumentumBase.nodeNames"]], "password (in module mnoptical.examples.lroadmring)": [[9, "mnoptical.examples.lroadmring.password"]], "rxbase (mnoptical.examples.lroadmring.lumentumbase attribute)": [[9, "mnoptical.examples.lroadmring.LumentumBase.rxbase"]], "sslkeyfile (in module mnoptical.examples.lroadmring)": [[9, "mnoptical.examples.lroadmring.sslkeyfile"]], "test() (in module mnoptical.examples.lroadmring)": [[9, "mnoptical.examples.lroadmring.test"]], "topo (in module mnoptical.examples.lroadmring)": [[9, "mnoptical.examples.lroadmring.topo"]], "txbase (mnoptical.examples.lroadmring.lumentumbase attribute)": [[9, "mnoptical.examples.lroadmring.LumentumBase.txbase"]], "username (in module mnoptical.examples.lroadmring)": [[9, "mnoptical.examples.lroadmring.username"]], "wdmlink() (mnoptical.examples.lroadmring.lumentumbase method)": [[9, "mnoptical.examples.lroadmring.LumentumBase.wdmLink"]], "singleroadmtopo (class in mnoptical.examples.roadm_with_amps)": [[10, "mnoptical.examples.roadm_with_amps.SingleROADMTopo"]], "add_amp() (in module mnoptical.examples.roadm_with_amps)": [[10, "mnoptical.examples.roadm_with_amps.add_amp"]], "build() (mnoptical.examples.roadm_with_amps.singleroadmtopo method)": [[10, "mnoptical.examples.roadm_with_amps.SingleROADMTopo.build"]], "mnoptical.examples.roadm_with_amps": [[10, "module-mnoptical.examples.roadm_with_amps"]], "test() (in module mnoptical.examples.roadm_with_amps)": [[10, "mnoptical.examples.roadm_with_amps.test"]], "topo (in module mnoptical.examples.roadm_with_amps)": [[10, "mnoptical.examples.roadm_with_amps.topo"]], "simplelinktopo (class in mnoptical.examples.simplelink)": [[11, "mnoptical.examples.simplelink.SimpleLinkTopo"]], "build() (mnoptical.examples.simplelink.simplelinktopo method)": [[11, "mnoptical.examples.simplelink.SimpleLinkTopo.build"]], "mnoptical.examples.simplelink": [[11, "module-mnoptical.examples.simplelink"]], "test() (in module mnoptical.examples.simplelink)": [[11, "mnoptical.examples.simplelink.test"]], "topo (in module mnoptical.examples.simplelink)": [[11, "mnoptical.examples.simplelink.topo"]], "singlelinktopo (class in mnoptical.examples.singlelink)": [[12, "mnoptical.examples.singlelink.SingleLinkTopo"]], "build() (mnoptical.examples.singlelink.singlelinktopo method)": [[12, "mnoptical.examples.singlelink.SingleLinkTopo.build"]], "mnoptical.examples.singlelink": [[12, "module-mnoptical.examples.singlelink"]], "test() (in module mnoptical.examples.singlelink)": [[12, "mnoptical.examples.singlelink.test"]], "topo (in module mnoptical.examples.singlelink)": [[12, "mnoptical.examples.singlelink.topo"]], "singleroadmtopo (class in mnoptical.examples.singleroadm)": [[13, "mnoptical.examples.singleroadm.SingleROADMTopo"]], "build() (mnoptical.examples.singleroadm.singleroadmtopo method)": [[13, "mnoptical.examples.singleroadm.SingleROADMTopo.build"]], "mnoptical.examples.singleroadm": [[13, "module-mnoptical.examples.singleroadm"]], "plotnet() (in module mnoptical.examples.singleroadm)": [[13, "mnoptical.examples.singleroadm.plotNet"]], "test() (in module mnoptical.examples.singleroadm)": [[13, "mnoptical.examples.singleroadm.test"]], "topo (in module mnoptical.examples.singleroadm)": [[13, "mnoptical.examples.singleroadm.topo"]], "sixroadmtopo (class in mnoptical.examples.sixnodestopo)": [[14, "mnoptical.examples.sixnodestopo.SixROADMTopo"]], "build() (mnoptical.examples.sixnodestopo.sixroadmtopo method)": [[14, "mnoptical.examples.sixnodestopo.SixROADMTopo.build"]], "mnoptical.examples.sixnodestopo": [[14, "module-mnoptical.examples.sixnodestopo"]], "plotnet() (in module mnoptical.examples.sixnodestopo)": [[14, "mnoptical.examples.sixnodestopo.plotNet"]], "topo (in module mnoptical.examples.sixnodestopo)": [[14, "mnoptical.examples.sixnodestopo.topo"]], "multiroadmtopo (class in mnoptical.examples.test-attenuator)": [[15, "mnoptical.examples.test-attenuator.MultiROADMTopo"]], "add_amp() (in module mnoptical.examples.test-attenuator)": [[15, "mnoptical.examples.test-attenuator.add_amp"]], "build() (mnoptical.examples.test-attenuator.multiroadmtopo method)": [[15, "mnoptical.examples.test-attenuator.MultiROADMTopo.build"]], "confignet() (mnoptical.examples.test-attenuator.multiroadmtopo method)": [[15, "mnoptical.examples.test-attenuator.MultiROADMTopo.configNet"]], "get_monitor_power() (mnoptical.examples.test-attenuator.multiroadmtopo method)": [[15, "mnoptical.examples.test-attenuator.MultiROADMTopo.get_monitor_power"]], "mnoptical.examples.test-attenuator": [[15, "module-mnoptical.examples.test-attenuator"]], "plotnet() (in module mnoptical.examples.test-attenuator)": [[15, "mnoptical.examples.test-attenuator.plotNet"]], "test() (in module mnoptical.examples.test-attenuator)": [[15, "mnoptical.examples.test-attenuator.test"]], "topo (in module mnoptical.examples.test-attenuator)": [[15, "mnoptical.examples.test-attenuator.topo"]], "cli (class in mnoptical.examples.unilinear1)": [[16, "mnoptical.examples.unilinear1.CLI"]], "opticaltopo (class in mnoptical.examples.unilinear1)": [[16, "mnoptical.examples.unilinear1.OpticalTopo"]], "unilineartopo (class in mnoptical.examples.unilinear1)": [[16, "mnoptical.examples.unilinear1.UniLinearTopo"]], "addroadm() (mnoptical.examples.unilinear1.opticaltopo method)": [[16, "mnoptical.examples.unilinear1.OpticalTopo.addROADM"]], "addterminal() (mnoptical.examples.unilinear1.opticaltopo method)": [[16, "mnoptical.examples.unilinear1.OpticalTopo.addTerminal"]], "addport() (mnoptical.examples.unilinear1.unilineartopo method)": [[16, "mnoptical.examples.unilinear1.UniLinearTopo.addport"]], "build() (mnoptical.examples.unilinear1.unilineartopo method)": [[16, "mnoptical.examples.unilinear1.UniLinearTopo.build"]], "config() (in module mnoptical.examples.unilinear1)": [[16, "mnoptical.examples.unilinear1.config"]], "do_config() (mnoptical.examples.unilinear1.cli method)": [[16, "mnoptical.examples.unilinear1.CLI.do_config"]], "downlink() (mnoptical.examples.unilinear1.unilineartopo method)": [[16, "mnoptical.examples.unilinear1.UniLinearTopo.downlink"]], "dropport() (mnoptical.examples.unilinear1.unilineartopo method)": [[16, "mnoptical.examples.unilinear1.UniLinearTopo.dropport"]], "ethlink() (mnoptical.examples.unilinear1.opticaltopo method)": [[16, "mnoptical.examples.unilinear1.OpticalTopo.ethLink"]], "ethport() (mnoptical.examples.unilinear1.unilineartopo method)": [[16, "mnoptical.examples.unilinear1.UniLinearTopo.ethport"]], "linein (mnoptical.examples.unilinear1.unilineartopo attribute)": [[16, "mnoptical.examples.unilinear1.UniLinearTopo.linein"]], "lineout (mnoptical.examples.unilinear1.unilineartopo attribute)": [[16, "mnoptical.examples.unilinear1.UniLinearTopo.lineout"]], "mnoptical.examples.unilinear1": [[16, "module-mnoptical.examples.unilinear1"]], "test() (in module mnoptical.examples.unilinear1)": [[16, "mnoptical.examples.unilinear1.test"]], "topo (in module mnoptical.examples.unilinear1)": [[16, "mnoptical.examples.unilinear1.topo"]], "uplink() (mnoptical.examples.unilinear1.unilineartopo method)": [[16, "mnoptical.examples.unilinear1.UniLinearTopo.uplink"]], "wdmlink() (mnoptical.examples.unilinear1.opticaltopo method)": [[16, "mnoptical.examples.unilinear1.OpticalTopo.wdmLink"]], "cli (class in mnoptical.examples.unilinear2)": [[17, "mnoptical.examples.unilinear2.CLI"]], "opticaltopo (class in mnoptical.examples.unilinear2)": [[17, "mnoptical.examples.unilinear2.OpticalTopo"]], "unilineartopo2 (class in mnoptical.examples.unilinear2)": [[17, "mnoptical.examples.unilinear2.UniLinearTopo2"]], "addroadm() (mnoptical.examples.unilinear2.opticaltopo method)": [[17, "mnoptical.examples.unilinear2.OpticalTopo.addROADM"]], "addterminal() (mnoptical.examples.unilinear2.opticaltopo method)": [[17, "mnoptical.examples.unilinear2.OpticalTopo.addTerminal"]], "addport() (mnoptical.examples.unilinear2.unilineartopo2 method)": [[17, "mnoptical.examples.unilinear2.UniLinearTopo2.addport"]], "build() (mnoptical.examples.unilinear2.unilineartopo2 method)": [[17, "mnoptical.examples.unilinear2.UniLinearTopo2.build"]], "config() (in module mnoptical.examples.unilinear2)": [[17, "mnoptical.examples.unilinear2.config"]], "do_config() (mnoptical.examples.unilinear2.cli method)": [[17, "mnoptical.examples.unilinear2.CLI.do_config"]], "downlink() (mnoptical.examples.unilinear2.unilineartopo2 method)": [[17, "mnoptical.examples.unilinear2.UniLinearTopo2.downlink"]], "dropport() (mnoptical.examples.unilinear2.unilineartopo2 method)": [[17, "mnoptical.examples.unilinear2.UniLinearTopo2.dropport"]], "eastin (mnoptical.examples.unilinear2.unilineartopo2 attribute)": [[17, "mnoptical.examples.unilinear2.UniLinearTopo2.eastin"]], "eastout (mnoptical.examples.unilinear2.unilineartopo2 attribute)": [[17, "mnoptical.examples.unilinear2.UniLinearTopo2.eastout"]], "ethlink() (mnoptical.examples.unilinear2.opticaltopo method)": [[17, "mnoptical.examples.unilinear2.OpticalTopo.ethLink"]], "ethport() (mnoptical.examples.unilinear2.unilineartopo2 method)": [[17, "mnoptical.examples.unilinear2.UniLinearTopo2.ethport"]], "linein() (mnoptical.examples.unilinear2.unilineartopo2 method)": [[17, "mnoptical.examples.unilinear2.UniLinearTopo2.linein"]], "lineout() (mnoptical.examples.unilinear2.unilineartopo2 method)": [[17, "mnoptical.examples.unilinear2.UniLinearTopo2.lineout"]], "mnoptical.examples.unilinear2": [[17, "module-mnoptical.examples.unilinear2"]], "test() (in module mnoptical.examples.unilinear2)": [[17, "mnoptical.examples.unilinear2.test"]], "topo (in module mnoptical.examples.unilinear2)": [[17, "mnoptical.examples.unilinear2.topo"]], "uplink() (mnoptical.examples.unilinear2.unilineartopo2 method)": [[17, "mnoptical.examples.unilinear2.UniLinearTopo2.uplink"]], "wdmlink() (mnoptical.examples.unilinear2.opticaltopo method)": [[17, "mnoptical.examples.unilinear2.OpticalTopo.wdmLink"]], "westin (mnoptical.examples.unilinear2.unilineartopo2 attribute)": [[17, "mnoptical.examples.unilinear2.UniLinearTopo2.westin"]], "westout (mnoptical.examples.unilinear2.unilineartopo2 attribute)": [[17, "mnoptical.examples.unilinear2.UniLinearTopo2.westout"]], "cli (class in mnoptical.examples.uniring)": [[18, "mnoptical.examples.uniring.CLI"]], "uniringtopo (class in mnoptical.examples.uniring)": [[18, "mnoptical.examples.uniring.UniRingTopo"]], "add() (in module mnoptical.examples.uniring)": [[18, "mnoptical.examples.uniring.add"]], "build() (mnoptical.examples.uniring.uniringtopo method)": [[18, "mnoptical.examples.uniring.UniRingTopo.build"]], "config() (in module mnoptical.examples.uniring)": [[18, "mnoptical.examples.uniring.config"]], "configopticalnet() (in module mnoptical.examples.uniring)": [[18, "mnoptical.examples.uniring.configOpticalNet"]], "configpacketnet() (in module mnoptical.examples.uniring)": [[18, "mnoptical.examples.uniring.configPacketNet"]], "do_config() (mnoptical.examples.uniring.cli method)": [[18, "mnoptical.examples.uniring.CLI.do_config"]], "drop() (in module mnoptical.examples.uniring)": [[18, "mnoptical.examples.uniring.drop"]], "fwd() (in module mnoptical.examples.uniring)": [[18, "mnoptical.examples.uniring.fwd"]], "mnoptical.examples.uniring": [[18, "module-mnoptical.examples.uniring"]], "test() (in module mnoptical.examples.uniring)": [[18, "mnoptical.examples.uniring.test"]], "topo (in module mnoptical.examples.uniring)": [[18, "mnoptical.examples.uniring.topo"]], "uniroadmchain (class in mnoptical.examples.uniroadmchain)": [[19, "mnoptical.examples.uniroadmchain.UniRoadmChain"]], "build() (mnoptical.examples.uniroadmchain.uniroadmchain method)": [[19, "mnoptical.examples.uniroadmchain.UniRoadmChain.build"]], "confignet() (mnoptical.examples.uniroadmchain.uniroadmchain method)": [[19, "mnoptical.examples.uniroadmchain.UniRoadmChain.configNet"]], "mnoptical.examples.uniroadmchain": [[19, "module-mnoptical.examples.uniroadmchain"]], "topo (in module mnoptical.examples.uniroadmchain)": [[19, "mnoptical.examples.uniroadmchain.topo"]], "mnoptical": [[20, "module-mnoptical"]], "link (class in mnoptical.link)": [[21, "mnoptical.link.Link"]], "span (class in mnoptical.link)": [[21, "mnoptical.link.Span"]], "spantuple (in module mnoptical.link)": [[21, "mnoptical.link.SpanTuple"]], "__repr__() (mnoptical.link.link method)": [[21, "mnoptical.link.Link.__repr__"]], "__repr__() (mnoptical.link.span method)": [[21, "mnoptical.link.Span.__repr__"]], "anonymous (mnoptical.link.span attribute)": [[21, "mnoptical.link.Span.anonymous"]], "attenuation() (mnoptical.link.span method)": [[21, "mnoptical.link.Span.attenuation"]], "beta2() (mnoptical.link.span method)": [[21, "mnoptical.link.Span.beta2"]], "describe() (mnoptical.link.link method)": [[21, "mnoptical.link.Link.describe"]], "describe() (mnoptical.link.span method)": [[21, "mnoptical.link.Span.describe"]], "gn_model() (mnoptical.link.span method)": [[21, "mnoptical.link.Span.gn_model"]], "ids (mnoptical.link.span attribute)": [[21, "mnoptical.link.Span.ids"]], "include_optical_signal_in() (mnoptical.link.link method)": [[21, "mnoptical.link.Link.include_optical_signal_in"]], "include_optical_signal_in() (mnoptical.link.span method)": [[21, "mnoptical.link.Span.include_optical_signal_in"]], "include_optical_signal_out() (mnoptical.link.link method)": [[21, "mnoptical.link.Link.include_optical_signal_out"]], "include_optical_signal_out() (mnoptical.link.span method)": [[21, "mnoptical.link.Span.include_optical_signal_out"]], "length() (mnoptical.link.link method)": [[21, "mnoptical.link.Link.length"]], "mnoptical.link": [[21, "module-mnoptical.link"]], "output_nonlinear_noise() (mnoptical.link.span method)": [[21, "mnoptical.link.Span.output_nonlinear_noise"]], "propagate() (mnoptical.link.link method)": [[21, "mnoptical.link.Link.propagate"]], "propagate() (mnoptical.link.span method)": [[21, "mnoptical.link.Span.propagate"]], "psi_factor() (mnoptical.link.span static method)": [[21, "mnoptical.link.Span.psi_factor"]], "remove_optical_signal() (mnoptical.link.link method)": [[21, "mnoptical.link.Link.remove_optical_signal"]], "remove_optical_signal() (mnoptical.link.span method)": [[21, "mnoptical.link.Span.remove_optical_signal"]], "reset() (mnoptical.link.link method)": [[21, "mnoptical.link.Link.reset"]], "reset() (mnoptical.link.span method)": [[21, "mnoptical.link.Span.reset"]], "set_input_port() (mnoptical.link.span method)": [[21, "mnoptical.link.Span.set_input_port"]], "set_output_port() (mnoptical.link.span method)": [[21, "mnoptical.link.Span.set_output_port"]], "srs_effect_model() (mnoptical.link.span method)": [[21, "mnoptical.link.Span.srs_effect_model"]], "network (class in mnoptical.network)": [[22, "mnoptical.network.Network"]], "add_amplifier() (mnoptical.network.network method)": [[22, "mnoptical.network.Network.add_amplifier"]], "add_link() (mnoptical.network.network method)": [[22, "mnoptical.network.Network.add_link"]], "add_lt() (mnoptical.network.network method)": [[22, "mnoptical.network.Network.add_lt"]], "add_roadm() (mnoptical.network.network method)": [[22, "mnoptical.network.Network.add_roadm"]], "describe() (mnoptical.network.network method)": [[22, "mnoptical.network.Network.describe"]], "find_link_and_in_port_from_nodes() (mnoptical.network.network method)": [[22, "mnoptical.network.Network.find_link_and_in_port_from_nodes"]], "find_link_and_out_port_from_nodes() (mnoptical.network.network method)": [[22, "mnoptical.network.Network.find_link_and_out_port_from_nodes"]], "find_link_from_nodes() (mnoptical.network.network method)": [[22, "mnoptical.network.Network.find_link_from_nodes"]], "find_out_port_from_link() (mnoptical.network.network static method)": [[22, "mnoptical.network.Network.find_out_port_from_link"]], "mnoptical.network": [[22, "module-mnoptical.network"]], "amplifier (class in mnoptical.node)": [[23, "mnoptical.node.Amplifier"]], "attenuator (class in mnoptical.node)": [[23, "mnoptical.node.Attenuator"]], "lineterminal (class in mnoptical.node)": [[23, "mnoptical.node.LineTerminal"]], "monitor (class in mnoptical.node)": [[23, "mnoptical.node.Monitor"]], "node (class in mnoptical.node)": [[23, "mnoptical.node.Node"]], "nodeauditing (class in mnoptical.node)": [[23, "mnoptical.node.NodeAuditing"]], "opticalsignal (class in mnoptical.node)": [[23, "mnoptical.node.OpticalSignal"]], "roadm (class in mnoptical.node)": [[23, "mnoptical.node.Roadm"]], "signaltracing (class in mnoptical.node)": [[23, "mnoptical.node.SignalTracing"]], "switchrule (in module mnoptical.node)": [[23, "mnoptical.node.SwitchRule"]], "transceiver (class in mnoptical.node)": [[23, "mnoptical.node.Transceiver"]], "__repr__() (mnoptical.node.amplifier method)": [[23, "mnoptical.node.Amplifier.__repr__"]], "__repr__() (mnoptical.node.monitor method)": [[23, "mnoptical.node.Monitor.__repr__"]], "__repr__() (mnoptical.node.node method)": [[23, "mnoptical.node.Node.__repr__"]], "__repr__() (mnoptical.node.opticalsignal method)": [[23, "mnoptical.node.OpticalSignal.__repr__"]], "add_transceiver() (mnoptical.node.lineterminal method)": [[23, "mnoptical.node.LineTerminal.add_transceiver"]], "add_transceivers() (mnoptical.node.lineterminal method)": [[23, "mnoptical.node.LineTerminal.add_transceivers"]], "assoc_channel() (mnoptical.node.lineterminal method)": [[23, "mnoptical.node.LineTerminal.assoc_channel"]], "assoc_loc_in() (mnoptical.node.opticalsignal method)": [[23, "mnoptical.node.OpticalSignal.assoc_loc_in"]], "assoc_loc_out() (mnoptical.node.opticalsignal method)": [[23, "mnoptical.node.OpticalSignal.assoc_loc_out"]], "assoc_optical_signal() (mnoptical.node.transceiver method)": [[23, "mnoptical.node.Transceiver.assoc_optical_signal"]], "assoc_rx_to_channel() (mnoptical.node.lineterminal method)": [[23, "mnoptical.node.LineTerminal.assoc_rx_to_channel"]], "assoc_tx_to_channel() (mnoptical.node.lineterminal method)": [[23, "mnoptical.node.LineTerminal.assoc_tx_to_channel"]], "attenuation() (mnoptical.node.attenuator method)": [[23, "mnoptical.node.Attenuator.attenuation"]], "can_switch() (mnoptical.node.roadm method)": [[23, "mnoptical.node.Roadm.can_switch"]], "can_switch_from_lt() (mnoptical.node.roadm method)": [[23, "mnoptical.node.Roadm.can_switch_from_lt"]], "channel_paths() (mnoptical.node.signaltracing static method)": [[23, "mnoptical.node.SignalTracing.channel_paths"]], "check_link_propagation() (mnoptical.node.nodeauditing static method)": [[23, "mnoptical.node.NodeAuditing.check_link_propagation"]], "check_roadm_propagation() (mnoptical.node.nodeauditing static method)": [[23, "mnoptical.node.NodeAuditing.check_roadm_propagation"]], "check_switch_rule() (mnoptical.node.roadm method)": [[23, "mnoptical.node.Roadm.check_switch_rule"]], "compute_carrier_attenuation() (mnoptical.node.roadm method)": [[23, "mnoptical.node.Roadm.compute_carrier_attenuation"]], "compute_power_excursions() (mnoptical.node.amplifier method)": [[23, "mnoptical.node.Amplifier.compute_power_excursions"]], "debugger (mnoptical.node.node attribute)": [[23, "mnoptical.node.Node.debugger"]], "delete_switch_rule() (mnoptical.node.roadm method)": [[23, "mnoptical.node.Roadm.delete_switch_rule"]], "delete_switch_rules() (mnoptical.node.roadm method)": [[23, "mnoptical.node.Roadm.delete_switch_rules"]], "describe() (mnoptical.node.node method)": [[23, "mnoptical.node.Node.describe"]], "describe() (mnoptical.node.opticalsignal method)": [[23, "mnoptical.node.OpticalSignal.describe"]], "describe() (mnoptical.node.transceiver method)": [[23, "mnoptical.node.Transceiver.describe"]], "disassoc_rx_to_channel() (mnoptical.node.lineterminal method)": [[23, "mnoptical.node.LineTerminal.disassoc_rx_to_channel"]], "disassoc_tx_to_channel() (mnoptical.node.lineterminal method)": [[23, "mnoptical.node.LineTerminal.disassoc_tx_to_channel"]], "existing_transceiver() (mnoptical.node.lineterminal method)": [[23, "mnoptical.node.LineTerminal.existing_transceiver"]], "fast_switch() (mnoptical.node.roadm method)": [[23, "mnoptical.node.Roadm.fast_switch"]], "get_ase_noise() (mnoptical.node.monitor method)": [[23, "mnoptical.node.Monitor.get_ase_noise"]], "get_ber() (mnoptical.node.monitor method)": [[23, "mnoptical.node.Monitor.get_ber"]], "get_dict_ase_noise() (mnoptical.node.monitor method)": [[23, "mnoptical.node.Monitor.get_dict_ase_noise"]], "get_dict_gosnr() (mnoptical.node.monitor method)": [[23, "mnoptical.node.Monitor.get_dict_gosnr"]], "get_dict_nli_noise() (mnoptical.node.monitor method)": [[23, "mnoptical.node.Monitor.get_dict_nli_noise"]], "get_dict_osnr() (mnoptical.node.monitor method)": [[23, "mnoptical.node.Monitor.get_dict_osnr"]], "get_dict_power() (mnoptical.node.monitor method)": [[23, "mnoptical.node.Monitor.get_dict_power"]], "get_gosnr() (mnoptical.node.monitor method)": [[23, "mnoptical.node.Monitor.get_gosnr"]], "get_in_port() (mnoptical.node.roadm method)": [[23, "mnoptical.node.Roadm.get_in_port"]], "get_list_gosnr() (mnoptical.node.monitor method)": [[23, "mnoptical.node.Monitor.get_list_gosnr"]], "get_list_osnr() (mnoptical.node.monitor method)": [[23, "mnoptical.node.Monitor.get_list_osnr"]], "get_nli_noise() (mnoptical.node.monitor method)": [[23, "mnoptical.node.Monitor.get_nli_noise"]], "get_noise_figure() (mnoptical.node.amplifier static method)": [[23, "mnoptical.node.Amplifier.get_noise_figure"]], "get_optical_signals() (mnoptical.node.lineterminal method)": [[23, "mnoptical.node.LineTerminal.get_optical_signals"]], "get_optical_signals() (mnoptical.node.monitor method)": [[23, "mnoptical.node.Monitor.get_optical_signals"]], "get_optical_signals() (mnoptical.node.roadm method)": [[23, "mnoptical.node.Roadm.get_optical_signals"]], "get_osnr() (mnoptical.node.monitor method)": [[23, "mnoptical.node.Monitor.get_osnr"]], "get_port() (mnoptical.node.signaltracing static method)": [[23, "mnoptical.node.SignalTracing.get_port"]], "get_power() (mnoptical.node.monitor method)": [[23, "mnoptical.node.Monitor.get_power"]], "get_wavelength_dependent_gain() (mnoptical.node.amplifier method)": [[23, "mnoptical.node.Amplifier.get_wavelength_dependent_gain"]], "gosnr() (mnoptical.node.lineterminal static method)": [[23, "mnoptical.node.LineTerminal.gosnr"]], "include_optical_signal_in() (mnoptical.node.node method)": [[23, "mnoptical.node.Node.include_optical_signal_in"]], "include_optical_signal_in() (mnoptical.node.roadm method)": [[23, "mnoptical.node.Roadm.include_optical_signal_in"]], "include_optical_signal_out() (mnoptical.node.node method)": [[23, "mnoptical.node.Node.include_optical_signal_out"]], "input_port_base (mnoptical.node.node attribute)": [[23, "mnoptical.node.Node.input_port_base"]], "install_switch_rule() (mnoptical.node.roadm method)": [[23, "mnoptical.node.Roadm.install_switch_rule"]], "load_wavelength_dependent_gain() (mnoptical.node.amplifier method)": [[23, "mnoptical.node.Amplifier.load_wavelength_dependent_gain"]], "mnoptical.node": [[23, "module-mnoptical.node"]], "mock_amp_gain_adjust() (mnoptical.node.amplifier method)": [[23, "mnoptical.node.Amplifier.mock_amp_gain_adjust"]], "modify_mode() (mnoptical.node.monitor method)": [[23, "mnoptical.node.Monitor.modify_mode"]], "monitor_query() (mnoptical.node.amplifier method)": [[23, "mnoptical.node.Amplifier.monitor_query"]], "monitor_query() (mnoptical.node.lineterminal method)": [[23, "mnoptical.node.LineTerminal.monitor_query"]], "monitor_query() (mnoptical.node.roadm method)": [[23, "mnoptical.node.Roadm.monitor_query"]], "nli_compensation() (mnoptical.node.amplifier method)": [[23, "mnoptical.node.Amplifier.nli_compensation"]], "osnr() (mnoptical.node.lineterminal static method)": [[23, "mnoptical.node.LineTerminal.osnr"]], "output_amplified_power() (mnoptical.node.amplifier method)": [[23, "mnoptical.node.Amplifier.output_amplified_power"]], "output_port_base (mnoptical.node.node attribute)": [[23, "mnoptical.node.Node.output_port_base"]], "pathentry (mnoptical.node.signaltracing attribute)": [[23, "mnoptical.node.SignalTracing.pathEntry"]], "path_state() (mnoptical.node.signaltracing static method)": [[23, "mnoptical.node.SignalTracing.path_state"]], "power_divergence() (mnoptical.node.roadm method)": [[23, "mnoptical.node.Roadm.power_divergence"]], "power_excursions_flags_off() (mnoptical.node.amplifier method)": [[23, "mnoptical.node.Amplifier.power_excursions_flags_off"]], "prepropagation() (mnoptical.node.roadm method)": [[23, "mnoptical.node.Roadm.prepropagation"]], "process_att() (mnoptical.node.roadm method)": [[23, "mnoptical.node.Roadm.process_att"]], "propagate() (mnoptical.node.amplifier method)": [[23, "mnoptical.node.Amplifier.propagate"]], "propagate() (mnoptical.node.attenuator method)": [[23, "mnoptical.node.Attenuator.propagate"]], "propagate() (mnoptical.node.roadm method)": [[23, "mnoptical.node.Roadm.propagate"]], "receiver() (mnoptical.node.lineterminal method)": [[23, "mnoptical.node.LineTerminal.receiver"]], "receiver_callback() (mnoptical.node.lineterminal method)": [[23, "mnoptical.node.LineTerminal.receiver_callback"]], "remove_optical_signal() (mnoptical.node.node method)": [[23, "mnoptical.node.Node.remove_optical_signal"]], "remove_optical_signal() (mnoptical.node.transceiver method)": [[23, "mnoptical.node.Transceiver.remove_optical_signal"]], "remove_signal_from_out_port() (mnoptical.node.node method)": [[23, "mnoptical.node.Node.remove_signal_from_out_port"]], "remove_switch_rule() (mnoptical.node.roadm method)": [[23, "mnoptical.node.Roadm.remove_switch_rule"]], "reset() (mnoptical.node.amplifier method)": [[23, "mnoptical.node.Amplifier.reset"]], "reset() (mnoptical.node.lineterminal method)": [[23, "mnoptical.node.LineTerminal.reset"]], "reset() (mnoptical.node.opticalsignal method)": [[23, "mnoptical.node.OpticalSignal.reset"]], "reset() (mnoptical.node.roadm method)": [[23, "mnoptical.node.Roadm.reset"]], "reset_component() (mnoptical.node.node method)": [[23, "mnoptical.node.Node.reset_component"]], "reset_gain() (mnoptical.node.amplifier method)": [[23, "mnoptical.node.Amplifier.reset_gain"]], "reset_transceivers() (mnoptical.node.lineterminal method)": [[23, "mnoptical.node.LineTerminal.reset_transceivers"]], "route() (mnoptical.node.roadm method)": [[23, "mnoptical.node.Roadm.route"]], "set_boost_gain() (mnoptical.node.roadm method)": [[23, "mnoptical.node.Roadm.set_boost_gain"]], "set_gain() (mnoptical.node.amplifier method)": [[23, "mnoptical.node.Amplifier.set_gain"]], "set_input_port() (mnoptical.node.node method)": [[23, "mnoptical.node.Node.set_input_port"]], "set_modulation_format() (mnoptical.node.lineterminal method)": [[23, "mnoptical.node.LineTerminal.set_modulation_format"]], "set_modulation_format() (mnoptical.node.opticalsignal method)": [[23, "mnoptical.node.OpticalSignal.set_modulation_format"]], "set_modulation_format() (mnoptical.node.transceiver method)": [[23, "mnoptical.node.Transceiver.set_modulation_format"]], "set_output_port() (mnoptical.node.node method)": [[23, "mnoptical.node.Node.set_output_port"]], "set_preamp_gain() (mnoptical.node.roadm method)": [[23, "mnoptical.node.Roadm.set_preamp_gain"]], "set_reference_power() (mnoptical.node.roadm method)": [[23, "mnoptical.node.Roadm.set_reference_power"]], "set_ripple_function() (mnoptical.node.amplifier method)": [[23, "mnoptical.node.Amplifier.set_ripple_function"]], "signal_path() (mnoptical.node.signaltracing static method)": [[23, "mnoptical.node.SignalTracing.signal_path"]], "spectrum_band_init_h (mnoptical.node.opticalsignal attribute)": [[23, "mnoptical.node.OpticalSignal.spectrum_band_init_H"]], "spectrum_band_init_nm (mnoptical.node.opticalsignal attribute)": [[23, "mnoptical.node.OpticalSignal.spectrum_band_init_nm"]], "stage_amplified_spontaneous_emission_noise() (mnoptical.node.amplifier method)": [[23, "mnoptical.node.Amplifier.stage_amplified_spontaneous_emission_noise"]], "switch() (mnoptical.node.roadm method)": [[23, "mnoptical.node.Roadm.switch"]], "turn_off() (mnoptical.node.lineterminal method)": [[23, "mnoptical.node.LineTerminal.turn_off"]], "turn_on() (mnoptical.node.lineterminal method)": [[23, "mnoptical.node.LineTerminal.turn_on"]], "tx_config() (mnoptical.node.lineterminal method)": [[23, "mnoptical.node.LineTerminal.tx_config"]], "update_switch_rule() (mnoptical.node.roadm method)": [[23, "mnoptical.node.Roadm.update_switch_rule"]], "add_drop (in module mnoptical.ofcdemo.control_test_lum)": [[24, "mnoptical.ofcdemo.Control_Test_Lum.ADD_DROP"]], "alllumname (in module mnoptical.ofcdemo.control_test_lum)": [[24, "mnoptical.ofcdemo.Control_Test_Lum.AllLumName"]], "control_test() (in module mnoptical.ofcdemo.control_test_lum)": [[24, "mnoptical.ofcdemo.Control_Test_Lum.Control_Test"]], "lumentumname_to_ip (in module mnoptical.ofcdemo.control_test_lum)": [[24, "mnoptical.ofcdemo.Control_Test_Lum.LumentumName_to_IP"]], "lumentum_control_netconf (class in mnoptical.ofcdemo.control_test_lum)": [[24, "mnoptical.ofcdemo.Control_Test_Lum.Lumentum_Control_NETCONF"]], "lumentum_netconf_agent (in module mnoptical.ofcdemo.control_test_lum)": [[24, "mnoptical.ofcdemo.Control_Test_Lum.Lumentum_NETCONF_Agent"]], "num_node (in module mnoptical.ofcdemo.control_test_lum)": [[24, "mnoptical.ofcdemo.Control_Test_Lum.NUM_NODE"]], "num_wav (in module mnoptical.ofcdemo.control_test_lum)": [[24, "mnoptical.ofcdemo.Control_Test_Lum.NUM_WAV"]], "nodelink_to_lumentumlink (in module mnoptical.ofcdemo.control_test_lum)": [[24, "mnoptical.ofcdemo.Control_Test_Lum.NodeLink_to_LumentumLink"]], "thruport (in module mnoptical.ofcdemo.control_test_lum)": [[24, "mnoptical.ofcdemo.Control_Test_Lum.THRUPORT"]], "channel_monitor() (mnoptical.ofcdemo.control_test_lum.lumentum_control_netconf method)": [[24, "mnoptical.ofcdemo.Control_Test_Lum.Lumentum_Control_NETCONF.channel_monitor"]], "cleanallroadms() (mnoptical.ofcdemo.control_test_lum.lumentum_control_netconf method)": [[24, "mnoptical.ofcdemo.Control_Test_Lum.Lumentum_Control_NETCONF.cleanAllROADMs"]], "installpath() (mnoptical.ofcdemo.control_test_lum.lumentum_control_netconf method)": [[24, "mnoptical.ofcdemo.Control_Test_Lum.Lumentum_Control_NETCONF.installPath"]], "m (in module mnoptical.ofcdemo.control_test_lum)": [[24, "mnoptical.ofcdemo.Control_Test_Lum.m"]], "mnoptical.ofcdemo.control_test_lum": [[24, "module-mnoptical.ofcdemo.Control_Test_Lum"]], "uninstallpath() (mnoptical.ofcdemo.control_test_lum.lumentum_control_netconf method)": [[24, "mnoptical.ofcdemo.Control_Test_Lum.Lumentum_Control_NETCONF.uninstallPath"]], "mininet_control_rest (class in mnoptical.ofcdemo.control_test_mininet_rest)": [[25, "mnoptical.ofcdemo.Control_Test_Mininet_REST.Mininet_Control_REST"]], "test() (in module mnoptical.ofcdemo.control_test_mininet_rest)": [[25, "mnoptical.ofcdemo.Control_Test_Mininet_REST.Test"]], "buildgraph() (mnoptical.ofcdemo.control_test_mininet_rest.mininet_control_rest method)": [[25, "mnoptical.ofcdemo.Control_Test_Mininet_REST.Mininet_Control_REST.buildGraph"]], "configurepacketswitch() (mnoptical.ofcdemo.control_test_mininet_rest.mininet_control_rest method)": [[25, "mnoptical.ofcdemo.Control_Test_Mininet_REST.Mininet_Control_REST.configurePacketSwitch"]], "configureterminal() (mnoptical.ofcdemo.control_test_mininet_rest.mininet_control_rest method)": [[25, "mnoptical.ofcdemo.Control_Test_Mininet_REST.Mininet_Control_REST.configureTerminal"]], "getmonitorkey() (mnoptical.ofcdemo.control_test_mininet_rest.mininet_control_rest method)": [[25, "mnoptical.ofcdemo.Control_Test_Mininet_REST.Mininet_Control_REST.getMonitorKey"]], "getosnr() (mnoptical.ofcdemo.control_test_mininet_rest.mininet_control_rest method)": [[25, "mnoptical.ofcdemo.Control_Test_Mininet_REST.Mininet_Control_REST.getOSNR"]], "installpath() (mnoptical.ofcdemo.control_test_mininet_rest.mininet_control_rest method)": [[25, "mnoptical.ofcdemo.Control_Test_Mininet_REST.Mininet_Control_REST.installPath"]], "mnoptical.ofcdemo.control_test_mininet_rest": [[25, "module-mnoptical.ofcdemo.Control_Test_Mininet_REST"]], "monitorkey() (mnoptical.ofcdemo.control_test_mininet_rest.mininet_control_rest method)": [[25, "mnoptical.ofcdemo.Control_Test_Mininet_REST.Mininet_Control_REST.monitorKey"]], "monitorkeyandlightpaths() (mnoptical.ofcdemo.control_test_mininet_rest.mininet_control_rest method)": [[25, "mnoptical.ofcdemo.Control_Test_Mininet_REST.Mininet_Control_REST.monitorKeyAndLightpaths"]], "monitorosnr() (mnoptical.ofcdemo.control_test_mininet_rest.mininet_control_rest method)": [[25, "mnoptical.ofcdemo.Control_Test_Mininet_REST.Mininet_Control_REST.monitorOSNR"]], "monitorosnrbykey() (mnoptical.ofcdemo.control_test_mininet_rest.mininet_control_rest method)": [[25, "mnoptical.ofcdemo.Control_Test_Mininet_REST.Mininet_Control_REST.monitorOSNRbyKey"]], "route() (mnoptical.ofcdemo.control_test_mininet_rest.mininet_control_rest method)": [[25, "mnoptical.ofcdemo.Control_Test_Mininet_REST.Mininet_Control_REST.route"]], "turnonterminal() (mnoptical.ofcdemo.control_test_mininet_rest.mininet_control_rest method)": [[25, "mnoptical.ofcdemo.Control_Test_Mininet_REST.Mininet_Control_REST.turnonTerminal"]], "uninstallpath() (mnoptical.ofcdemo.control_test_mininet_rest.mininet_control_rest method)": [[25, "mnoptical.ofcdemo.Control_Test_Mininet_REST.Mininet_Control_REST.uninstallPath"]], "all_channels (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.ALL_CHANNELS"]], "cpri_cap (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.CPRI_CAP"]], "controller_lum (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.Controller_Lum"]], "controller_mininet (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.Controller_Mininet"]], "down_link_cap (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.DOWN_LINK_CAP"]], "du_roadms (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.DU_ROADMS"]], "findroute() (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.FindRoute"]], "graph (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.GRAPH"]], "lightpath_id (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.LIGHTPATH_ID"]], "lightpath_info (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.LIGHTPATH_INFO"]], "link_cap (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.LINK_CAP"]], "lumentum_monitorlightpath() (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.Lumentum_MonitorLightpath"]], "lumentum_installpath() (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.Lumentum_installPath"]], "lumentum_setuplightpath() (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.Lumentum_setupLightpath"]], "lumentum_teardownlightpath() (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.Lumentum_teardownLightpath"]], "lumentum_uninstallpath() (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.Lumentum_uninstallPath"]], "mininet_installpath() (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.Mininet_installPath"]], "mininet_monitorlightpath() (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.Mininet_monitorLightpath"]], "mininet_setuplightpath() (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.Mininet_setupLightpath"]], "mininet_teardownlightpath() (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.Mininet_teardownLightpath"]], "mininet_uninstallpath() (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.Mininet_uninstallPath"]], "name_roadm (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.NAME_ROADM"]], "netlinks (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.NETLINKS"]], "netlink_info (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.NETLINK_INFO"]], "nodes (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.NODES"]], "num_node (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.NUM_NODE"]], "num_wav (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.NUM_WAV"]], "path_ch_to_lightpath (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.PATH_CH_TO_LIGHTPATH"]], "roadm_to_id (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.ROADM_TO_ID"]], "roadm_to_terminal (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.ROADM_TO_TERMINAL"]], "roadm_traf (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.ROADM_TRAF"]], "ru_roadms (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.RU_ROADMS"]], "roadmphynetwork() (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.RoadmPhyNetwork"]], "src_dst_to_lightpath (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.SRC_DST_TO_LIGHTPATH"]], "span() (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.Span"]], "terminal_to_id (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.TERMINAL_TO_ID"]], "terminal_to_roadm (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.TERMINAL_TO_ROADM"]], "traffic_id (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.TRAFFIC_ID"]], "traffic_info (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.TRAFFIC_INFO"]], "traffictest() (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.TrafficTest"]], "up_lightpath_id_set (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.UP_LIGHTPATH_ID_SET"]], "up_lightpath_time_list (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.UP_LIGHTPATH_TIME_LIST"]], "up_traf_id_set (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.UP_TRAF_ID_SET"]], "up_traf_time_list (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.UP_TRAF_TIME_LIST"]], "check_lightpath_for_traf() (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.check_lightpath_for_traf"]], "getlinks() (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.getLinks"]], "init_controller() (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.init_Controller"]], "install_lightpath() (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.install_Lightpath"]], "install_traf() (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.install_Traf"]], "linkspec() (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.linkspec"]], "m (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.m"]], "mnoptical.ofcdemo.demo_control": [[26, "module-mnoptical.ofcdemo.Demo_Control"]], "name_roadms (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.name_roadms"]], "name_terminals (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.name_terminals"]], "netgraph() (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.netGraph"]], "node (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.node"]], "testmininet() (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.testMininet"]], "traf_to_lightpah_assignment() (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.traf_to_lightpah_Assignment"]], "traf_to_lightpath_release() (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.traf_to_lightpath_Release"]], "trafficpattern() (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.trafficPattern"]], "uninstall_lightpath() (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.uninstall_Lightpath"]], "update_lightpath_down_time() (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.update_lightpath_down_time"]], "waveavailibility() (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.waveAvailibility"]], "waveselection() (in module mnoptical.ofcdemo.demo_control)": [[26, "mnoptical.ofcdemo.Demo_Control.waveSelection"]], "all_channels (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.ALL_CHANNELS"]], "cpri_cap (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.CPRI_CAP"]], "controller_lum (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.Controller_Lum"]], "controller_mininet (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.Controller_Mininet"]], "down_link_cap (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.DOWN_LINK_CAP"]], "du_roadms (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.DU_ROADMS"]], "findroute() (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.FindRoute"]], "graph (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.GRAPH"]], "lightpath_id (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.LIGHTPATH_ID"]], "lightpath_info (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.LIGHTPATH_INFO"]], "link_cap (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.LINK_CAP"]], "lumentum_monitorlightpath() (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.Lumentum_MonitorLightpath"]], "lumentum_installpath() (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.Lumentum_installPath"]], "lumentum_setuplightpath() (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.Lumentum_setupLightpath"]], "lumentum_teardownlightpath() (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.Lumentum_teardownLightpath"]], "lumentum_uninstallpath() (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.Lumentum_uninstallPath"]], "mininet_installpath() (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.Mininet_installPath"]], "mininet_monitordifference() (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.Mininet_monitorDifference"]], "mininet_monitorlightpath() (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.Mininet_monitorLightpath"]], "mininet_setuplightpath() (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.Mininet_setupLightpath"]], "mininet_teardownlightpath() (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.Mininet_teardownLightpath"]], "mininet_uninstallpath() (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.Mininet_uninstallPath"]], "name_roadm (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.NAME_ROADM"]], "netlinks (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.NETLINKS"]], "netlink_info (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.NETLINK_INFO"]], "nodes (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.NODES"]], "num_node (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.NUM_NODE"]], "num_wav (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.NUM_WAV"]], "path_ch_to_lightpath (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.PATH_CH_TO_LIGHTPATH"]], "roadm_to_id (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.ROADM_TO_ID"]], "roadm_to_terminal (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.ROADM_TO_TERMINAL"]], "roadm_traf (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.ROADM_TRAF"]], "ru_roadms (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.RU_ROADMS"]], "roadmphynetwork() (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.RoadmPhyNetwork"]], "src_dst_to_lightpath (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.SRC_DST_TO_LIGHTPATH"]], "span() (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.Span"]], "terminal_to_id (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.TERMINAL_TO_ID"]], "terminal_to_roadm (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.TERMINAL_TO_ROADM"]], "traffic_id (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.TRAFFIC_ID"]], "traffic_info (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.TRAFFIC_INFO"]], "up_lightpath_id_set (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.UP_LIGHTPATH_ID_SET"]], "up_lightpath_time_list (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.UP_LIGHTPATH_TIME_LIST"]], "up_traf_id_set (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.UP_TRAF_ID_SET"]], "up_traf_time_list (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.UP_TRAF_TIME_LIST"]], "check_lightpath_for_traf() (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.check_lightpath_for_traf"]], "getlinks() (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.getLinks"]], "install_lightpath() (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.install_Lightpath"]], "install_traf() (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.install_Traf"]], "linkspec() (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.linkspec"]], "m (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.m"]], "mnoptical.ofcdemo.demo_control_2": [[27, "module-mnoptical.ofcdemo.Demo_Control_2"]], "name_roadms (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.name_roadms"]], "name_terminals (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.name_terminals"]], "netgraph() (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.netGraph"]], "node (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.node"]], "testmininet() (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.testMininet"]], "traf_to_lightpah_assignment() (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.traf_to_lightpah_Assignment"]], "traf_to_lightpath_release() (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.traf_to_lightpath_Release"]], "uninstall_lightpath() (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.uninstall_Lightpath"]], "update_lightpath_down_time() (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.update_lightpath_down_time"]], "waveavailibility() (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.waveAvailibility"]], "waveselection() (in module mnoptical.ofcdemo.demo_control_2)": [[27, "mnoptical.ofcdemo.Demo_Control_2.waveSelection"]], "mininet_optical_simu_api (class in mnoptical.ofcdemo.simulation_api)": [[28, "mnoptical.ofcdemo.Simulation_API.Mininet_Optical_Simu_API"]], "roadm_deleteswitchrule() (mnoptical.ofcdemo.simulation_api.mininet_optical_simu_api method)": [[28, "mnoptical.ofcdemo.Simulation_API.Mininet_Optical_Simu_API.ROADM_deleteSwitchRule"]], "roadm_installswitchrule() (mnoptical.ofcdemo.simulation_api.mininet_optical_simu_api method)": [[28, "mnoptical.ofcdemo.Simulation_API.Mininet_Optical_Simu_API.ROADM_installSwitchRule"]], "roadm_monitor_all_gosnr() (mnoptical.ofcdemo.simulation_api.mininet_optical_simu_api method)": [[28, "mnoptical.ofcdemo.Simulation_API.Mininet_Optical_Simu_API.ROADM_monitor_all_gosnr"]], "roadm_monitor_all_osnr() (mnoptical.ofcdemo.simulation_api.mininet_optical_simu_api method)": [[28, "mnoptical.ofcdemo.Simulation_API.Mininet_Optical_Simu_API.ROADM_monitor_all_osnr"]], "roadm_monitor_all_power() (mnoptical.ofcdemo.simulation_api.mininet_optical_simu_api method)": [[28, "mnoptical.ofcdemo.Simulation_API.Mininet_Optical_Simu_API.ROADM_monitor_all_power"]], "roadm_monitor_channel_data() (mnoptical.ofcdemo.simulation_api.mininet_optical_simu_api method)": [[28, "mnoptical.ofcdemo.Simulation_API.Mininet_Optical_Simu_API.ROADM_monitor_channel_data"]], "roadm_voapowerleveling() (mnoptical.ofcdemo.simulation_api.mininet_optical_simu_api method)": [[28, "mnoptical.ofcdemo.Simulation_API.Mininet_Optical_Simu_API.ROADM_voaPowerLeveling"]], "terminal_reset_threshold() (mnoptical.ofcdemo.simulation_api.mininet_optical_simu_api method)": [[28, "mnoptical.ofcdemo.Simulation_API.Mininet_Optical_Simu_API.Terminal_Reset_Threshold"]], "terminal_configchannel() (mnoptical.ofcdemo.simulation_api.mininet_optical_simu_api method)": [[28, "mnoptical.ofcdemo.Simulation_API.Mininet_Optical_Simu_API.Terminal_configChannel"]], "terminal_configchannelpower() (mnoptical.ofcdemo.simulation_api.mininet_optical_simu_api method)": [[28, "mnoptical.ofcdemo.Simulation_API.Mininet_Optical_Simu_API.Terminal_configChannelPower"]], "terminal_turnoffchannel() (mnoptical.ofcdemo.simulation_api.mininet_optical_simu_api method)": [[28, "mnoptical.ofcdemo.Simulation_API.Mininet_Optical_Simu_API.Terminal_turnoffChannel"]], "terminal_turnonchannel() (mnoptical.ofcdemo.simulation_api.mininet_optical_simu_api method)": [[28, "mnoptical.ofcdemo.Simulation_API.Mininet_Optical_Simu_API.Terminal_turnonChannel"]], "mnoptical.ofcdemo.simulation_api": [[28, "module-mnoptical.ofcdemo.Simulation_API"]], "adjacencydict() (in module mnoptical.ofcdemo.apsp)": [[29, "mnoptical.ofcdemo.apsp.adjacencyDict"]], "allocatechannels() (in module mnoptical.ofcdemo.apsp)": [[29, "mnoptical.ofcdemo.apsp.allocateChannels"]], "canonical() (in module mnoptical.ofcdemo.apsp)": [[29, "mnoptical.ofcdemo.apsp.canonical"]], "channelports() (in module mnoptical.ofcdemo.apsp)": [[29, "mnoptical.ofcdemo.apsp.channelPorts"]], "configurepacketswitches() (in module mnoptical.ofcdemo.apsp)": [[29, "mnoptical.ofcdemo.apsp.configurePacketSwitches"]], "configureterminals() (in module mnoptical.ofcdemo.apsp)": [[29, "mnoptical.ofcdemo.apsp.configureTerminals"]], "countsignals() (in module mnoptical.ofcdemo.apsp)": [[29, "mnoptical.ofcdemo.apsp.countSignals"]], "entriestoreroute() (in module mnoptical.ofcdemo.apsp)": [[29, "mnoptical.ofcdemo.apsp.entriesToReroute"]], "installpath() (in module mnoptical.ofcdemo.apsp)": [[29, "mnoptical.ofcdemo.apsp.installPath"]], "installroutes() (in module mnoptical.ofcdemo.apsp)": [[29, "mnoptical.ofcdemo.apsp.installRoutes"]], "mnoptical.ofcdemo.apsp": [[29, "module-mnoptical.ofcdemo.apsp"]], "monitorkey() (in module mnoptical.ofcdemo.apsp)": [[29, "mnoptical.ofcdemo.apsp.monitorKey"]], "monitorosnr() (in module mnoptical.ofcdemo.apsp)": [[29, "mnoptical.ofcdemo.apsp.monitorOSNR"]], "net (in module mnoptical.ofcdemo.apsp)": [[29, "mnoptical.ofcdemo.apsp.net"]], "reroute() (in module mnoptical.ofcdemo.apsp)": [[29, "mnoptical.ofcdemo.apsp.reroute"]], "route() (in module mnoptical.ofcdemo.apsp)": [[29, "mnoptical.ofcdemo.apsp.route"]], "run() (in module mnoptical.ofcdemo.apsp)": [[29, "mnoptical.ofcdemo.apsp.run"]], "mnoptical.ofcdemo.demo": [[30, "module-mnoptical.ofcdemo.demo"]], "net (in module mnoptical.ofcdemo.demo)": [[30, "mnoptical.ofcdemo.demo.net"]], "mnoptical.ofcdemo.demo_2021": [[31, "module-mnoptical.ofcdemo.demo_2021"]], "net (in module mnoptical.ofcdemo.demo_2021)": [[31, "mnoptical.ofcdemo.demo_2021.net"]], "control_test() (in module mnoptical.ofcdemo.demo_hwtopo)": [[32, "mnoptical.ofcdemo.demo_hwtopo.Control_Test"]], "netconfportbase (in module mnoptical.ofcdemo.demo_hwtopo)": [[32, "mnoptical.ofcdemo.demo_hwtopo.NetconfPortBase"]], "fixipmap() (in module mnoptical.ofcdemo.demo_hwtopo)": [[32, "mnoptical.ofcdemo.demo_hwtopo.fixIPMap"]], "mnoptical.ofcdemo.demo_hwtopo": [[32, "module-mnoptical.ofcdemo.demo_hwtopo"]], "ampspec (in module mnoptical.ofcdemo.demolib)": [[33, "mnoptical.ofcdemo.demolib.AmpSpec"]], "cli (in module mnoptical.ofcdemo.demolib)": [[33, "mnoptical.ofcdemo.demolib.CLI"]], "demotopo (class in mnoptical.ofcdemo.demolib)": [[33, "mnoptical.ofcdemo.demolib.DemoTopo"]], "linearroadmtopo (class in mnoptical.ofcdemo.demolib)": [[33, "mnoptical.ofcdemo.demolib.LinearRoadmTopo"]], "listenportbase (in module mnoptical.ofcdemo.demolib)": [[33, "mnoptical.ofcdemo.demolib.ListenPortBase"]], "opticalcli (class in mnoptical.ofcdemo.demolib)": [[33, "mnoptical.ofcdemo.demolib.OpticalCLI"]], "opticaltopo (class in mnoptical.ofcdemo.demolib)": [[33, "mnoptical.ofcdemo.demolib.OpticalTopo"]], "spanspec (in module mnoptical.ofcdemo.demolib)": [[33, "mnoptical.ofcdemo.demolib.SpanSpec"]], "_fmtpathentry() (mnoptical.ofcdemo.demolib.opticalcli method)": [[33, "mnoptical.ofcdemo.demolib.OpticalCLI._fmtPathEntry"]], "_fmtsigstate() (mnoptical.ofcdemo.demolib.opticalcli method)": [[33, "mnoptical.ofcdemo.demolib.OpticalCLI._fmtSigState"]], "_printpathstate() (mnoptical.ofcdemo.demolib.opticalcli method)": [[33, "mnoptical.ofcdemo.demolib.OpticalCLI._printPathState"]], "addpoplink() (mnoptical.ofcdemo.demolib.demotopo method)": [[33, "mnoptical.ofcdemo.demolib.DemoTopo.addPopLink"]], "build() (mnoptical.ofcdemo.demolib.demotopo method)": [[33, "mnoptical.ofcdemo.demolib.DemoTopo.build"]], "build() (mnoptical.ofcdemo.demolib.linearroadmtopo method)": [[33, "mnoptical.ofcdemo.demolib.LinearRoadmTopo.build"]], "buildpop() (mnoptical.ofcdemo.demolib.linearroadmtopo method)": [[33, "mnoptical.ofcdemo.demolib.LinearRoadmTopo.buildPop"]], "configurelinearnet() (in module mnoptical.ofcdemo.demolib)": [[33, "mnoptical.ofcdemo.demolib.configureLinearNet"]], "do_amppowers() (mnoptical.ofcdemo.demolib.opticalcli method)": [[33, "mnoptical.ofcdemo.demolib.OpticalCLI.do_amppowers"]], "do_arp() (mnoptical.ofcdemo.demolib.opticalcli method)": [[33, "mnoptical.ofcdemo.demolib.OpticalCLI.do_arp"]], "do_checklinks() (mnoptical.ofcdemo.demolib.opticalcli method)": [[33, "mnoptical.ofcdemo.demolib.OpticalCLI.do_checklinks"]], "do_checkroadms() (mnoptical.ofcdemo.demolib.opticalcli method)": [[33, "mnoptical.ofcdemo.demolib.OpticalCLI.do_checkroadms"]], "do_linksignals() (mnoptical.ofcdemo.demolib.opticalcli method)": [[33, "mnoptical.ofcdemo.demolib.OpticalCLI.do_linksignals"]], "do_monitors() (mnoptical.ofcdemo.demolib.opticalcli method)": [[33, "mnoptical.ofcdemo.demolib.OpticalCLI.do_monitors"]], "do_osnr() (mnoptical.ofcdemo.demolib.opticalcli method)": [[33, "mnoptical.ofcdemo.demolib.OpticalCLI.do_osnr"]], "do_plot() (mnoptical.ofcdemo.demolib.opticalcli method)": [[33, "mnoptical.ofcdemo.demolib.OpticalCLI.do_plot"]], "do_propagate() (mnoptical.ofcdemo.demolib.opticalcli method)": [[33, "mnoptical.ofcdemo.demolib.OpticalCLI.do_propagate"]], "do_reset() (mnoptical.ofcdemo.demolib.opticalcli method)": [[33, "mnoptical.ofcdemo.demolib.OpticalCLI.do_reset"]], "do_setgain() (mnoptical.ofcdemo.demolib.opticalcli method)": [[33, "mnoptical.ofcdemo.demolib.OpticalCLI.do_setgain"]], "do_signals() (mnoptical.ofcdemo.demolib.opticalcli method)": [[33, "mnoptical.ofcdemo.demolib.OpticalCLI.do_signals"]], "do_sigpath() (mnoptical.ofcdemo.demolib.opticalcli method)": [[33, "mnoptical.ofcdemo.demolib.OpticalCLI.do_sigpath"]], "do_sigtrace() (mnoptical.ofcdemo.demolib.opticalcli method)": [[33, "mnoptical.ofcdemo.demolib.OpticalCLI.do_sigtrace"]], "do_spans() (mnoptical.ofcdemo.demolib.opticalcli method)": [[33, "mnoptical.ofcdemo.demolib.OpticalCLI.do_spans"]], "ethlink() (mnoptical.ofcdemo.demolib.opticaltopo method)": [[33, "mnoptical.ofcdemo.demolib.OpticalTopo.ethLink"]], "formatsigstate() (mnoptical.ofcdemo.demolib.opticalcli static method)": [[33, "mnoptical.ofcdemo.demolib.OpticalCLI.formatSigState"]], "ip() (mnoptical.ofcdemo.demolib.linearroadmtopo static method)": [[33, "mnoptical.ofcdemo.demolib.LinearRoadmTopo.ip"]], "linearroadmtest() (in module mnoptical.ofcdemo.demolib)": [[33, "mnoptical.ofcdemo.demolib.linearRoadmTest"]], "mnoptical.ofcdemo.demolib": [[33, "module-mnoptical.ofcdemo.demolib"]], "net (in module mnoptical.ofcdemo.demolib)": [[33, "mnoptical.ofcdemo.demolib.net"]], "opticallinks() (mnoptical.ofcdemo.demolib.opticalcli method)": [[33, "mnoptical.ofcdemo.demolib.OpticalCLI.opticalLinks"]], "printnodesignals() (mnoptical.ofcdemo.demolib.opticalcli static method)": [[33, "mnoptical.ofcdemo.demolib.OpticalCLI.printNodeSignals"]], "printosnr() (mnoptical.ofcdemo.demolib.opticalcli static method)": [[33, "mnoptical.ofcdemo.demolib.OpticalCLI.printOsnr"]], "printsignals() (mnoptical.ofcdemo.demolib.opticalcli method)": [[33, "mnoptical.ofcdemo.demolib.OpticalCLI.printSignals"]], "prompt (mnoptical.ofcdemo.demolib.opticalcli attribute)": [[33, "mnoptical.ofcdemo.demolib.OpticalCLI.prompt"]], "spanspec() (in module mnoptical.ofcdemo.demolib)": [[33, "mnoptical.ofcdemo.demolib.spanSpec"]], "spans() (mnoptical.ofcdemo.demolib.linearroadmtopo method)": [[33, "mnoptical.ofcdemo.demolib.LinearRoadmTopo.spans"]], "spans() (mnoptical.ofcdemo.demolib.opticalcli method)": [[33, "mnoptical.ofcdemo.demolib.OpticalCLI.spans"]], "wdmlink() (mnoptical.ofcdemo.demolib.opticaltopo method)": [[33, "mnoptical.ofcdemo.demolib.OpticalTopo.wdmLink"]], "ampspec (in module mnoptical.ofcdemo.demolib_2021)": [[34, "mnoptical.ofcdemo.demolib_2021.AmpSpec"]], "cli (in module mnoptical.ofcdemo.demolib_2021)": [[34, "mnoptical.ofcdemo.demolib_2021.CLI"]], "demotopo (class in mnoptical.ofcdemo.demolib_2021)": [[34, "mnoptical.ofcdemo.demolib_2021.DemoTopo"]], "linearroadmtopo (class in mnoptical.ofcdemo.demolib_2021)": [[34, "mnoptical.ofcdemo.demolib_2021.LinearRoadmTopo"]], "listenportbase (in module mnoptical.ofcdemo.demolib_2021)": [[34, "mnoptical.ofcdemo.demolib_2021.ListenPortBase"]], "opticaltopo (class in mnoptical.ofcdemo.demolib_2021)": [[34, "mnoptical.ofcdemo.demolib_2021.OpticalTopo"]], "spanspec (in module mnoptical.ofcdemo.demolib_2021)": [[34, "mnoptical.ofcdemo.demolib_2021.SpanSpec"]], "addpoplink() (mnoptical.ofcdemo.demolib_2021.demotopo method)": [[34, "mnoptical.ofcdemo.demolib_2021.DemoTopo.addPopLink"]], "build() (mnoptical.ofcdemo.demolib_2021.demotopo method)": [[34, "mnoptical.ofcdemo.demolib_2021.DemoTopo.build"]], "build() (mnoptical.ofcdemo.demolib_2021.linearroadmtopo method)": [[34, "mnoptical.ofcdemo.demolib_2021.LinearRoadmTopo.build"]], "buildpop() (mnoptical.ofcdemo.demolib_2021.linearroadmtopo method)": [[34, "mnoptical.ofcdemo.demolib_2021.LinearRoadmTopo.buildPop"]], "configurelinearnet() (in module mnoptical.ofcdemo.demolib_2021)": [[34, "mnoptical.ofcdemo.demolib_2021.configureLinearNet"]], "ethlink() (mnoptical.ofcdemo.demolib_2021.opticaltopo method)": [[34, "mnoptical.ofcdemo.demolib_2021.OpticalTopo.ethLink"]], "ip() (mnoptical.ofcdemo.demolib_2021.linearroadmtopo static method)": [[34, "mnoptical.ofcdemo.demolib_2021.LinearRoadmTopo.ip"]], "linearroadmtest() (in module mnoptical.ofcdemo.demolib_2021)": [[34, "mnoptical.ofcdemo.demolib_2021.linearRoadmTest"]], "mnoptical.ofcdemo.demolib_2021": [[34, "module-mnoptical.ofcdemo.demolib_2021"]], "net (in module mnoptical.ofcdemo.demolib_2021)": [[34, "mnoptical.ofcdemo.demolib_2021.net"]], "spanspec() (in module mnoptical.ofcdemo.demolib_2021)": [[34, "mnoptical.ofcdemo.demolib_2021.spanSpec"]], "spans() (mnoptical.ofcdemo.demolib_2021.linearroadmtopo method)": [[34, "mnoptical.ofcdemo.demolib_2021.LinearRoadmTopo.spans"]], "wdmlink() (mnoptical.ofcdemo.demolib_2021.opticaltopo method)": [[34, "mnoptical.ofcdemo.demolib_2021.OpticalTopo.wdmLink"]], "listenportbase (in module mnoptical.ofcdemo.fakecontroller)": [[35, "mnoptical.ofcdemo.fakecontroller.ListenPortBase"]], "nodeproxy (class in mnoptical.ofcdemo.fakecontroller)": [[35, "mnoptical.ofcdemo.fakecontroller.NodeProxy"]], "ofswitchproxy (class in mnoptical.ofcdemo.fakecontroller)": [[35, "mnoptical.ofcdemo.fakecontroller.OFSwitchProxy"]], "proxy (class in mnoptical.ofcdemo.fakecontroller)": [[35, "mnoptical.ofcdemo.fakecontroller.Proxy"]], "restproxy (class in mnoptical.ofcdemo.fakecontroller)": [[35, "mnoptical.ofcdemo.fakecontroller.RESTProxy"]], "roadmproxy (class in mnoptical.ofcdemo.fakecontroller)": [[35, "mnoptical.ofcdemo.fakecontroller.ROADMProxy"]], "switchproxy (class in mnoptical.ofcdemo.fakecontroller)": [[35, "mnoptical.ofcdemo.fakecontroller.SwitchProxy"]], "terminalproxy (class in mnoptical.ofcdemo.fakecontroller)": [[35, "mnoptical.ofcdemo.fakecontroller.TerminalProxy"]], "__repr__() (mnoptical.ofcdemo.fakecontroller.proxy method)": [[35, "mnoptical.ofcdemo.fakecontroller.Proxy.__repr__"]], "connect() (mnoptical.ofcdemo.fakecontroller.roadmproxy method)": [[35, "mnoptical.ofcdemo.fakecontroller.ROADMProxy.connect"]], "connect() (mnoptical.ofcdemo.fakecontroller.terminalproxy method)": [[35, "mnoptical.ofcdemo.fakecontroller.TerminalProxy.connect"]], "dpctl() (mnoptical.ofcdemo.fakecontroller.ofswitchproxy method)": [[35, "mnoptical.ofcdemo.fakecontroller.OFSwitchProxy.dpctl"]], "fetchlinks() (in module mnoptical.ofcdemo.fakecontroller)": [[35, "mnoptical.ofcdemo.fakecontroller.fetchLinks"]], "fetchnodes() (in module mnoptical.ofcdemo.fakecontroller)": [[35, "mnoptical.ofcdemo.fakecontroller.fetchNodes"]], "fetchosnr() (in module mnoptical.ofcdemo.fakecontroller)": [[35, "mnoptical.ofcdemo.fakecontroller.fetchOSNR"]], "fetchports() (in module mnoptical.ofcdemo.fakecontroller)": [[35, "mnoptical.ofcdemo.fakecontroller.fetchPorts"]], "fetchrules() (in module mnoptical.ofcdemo.fakecontroller)": [[35, "mnoptical.ofcdemo.fakecontroller.fetchRules"]], "get() (mnoptical.ofcdemo.fakecontroller.restproxy method)": [[35, "mnoptical.ofcdemo.fakecontroller.RESTProxy.get"]], "listenport (mnoptical.ofcdemo.fakecontroller.ofswitchproxy attribute)": [[35, "mnoptical.ofcdemo.fakecontroller.OFSwitchProxy.listenPort"]], "mnoptical.ofcdemo.fakecontroller": [[35, "module-mnoptical.ofcdemo.fakecontroller"]], "ports() (mnoptical.ofcdemo.fakecontroller.nodeproxy method)": [[35, "mnoptical.ofcdemo.fakecontroller.NodeProxy.ports"]], "reset() (mnoptical.ofcdemo.fakecontroller.roadmproxy method)": [[35, "mnoptical.ofcdemo.fakecontroller.ROADMProxy.reset"]], "reset() (mnoptical.ofcdemo.fakecontroller.terminalproxy method)": [[35, "mnoptical.ofcdemo.fakecontroller.TerminalProxy.reset"]], "rules() (mnoptical.ofcdemo.fakecontroller.switchproxy method)": [[35, "mnoptical.ofcdemo.fakecontroller.SwitchProxy.rules"]], "turn_on() (mnoptical.ofcdemo.fakecontroller.terminalproxy method)": [[35, "mnoptical.ofcdemo.fakecontroller.TerminalProxy.turn_on"]], "lumentum (class in mnoptical.ofcdemo.hwtopo)": [[36, "mnoptical.ofcdemo.hwtopo.Lumentum"]], "lumentumlinear (class in mnoptical.ofcdemo.hwtopo)": [[36, "mnoptical.ofcdemo.hwtopo.LumentumLinear"]], "mux (class in mnoptical.ofcdemo.hwtopo)": [[36, "mnoptical.ofcdemo.hwtopo.MUX"]], "addport() (mnoptical.ofcdemo.hwtopo.lumentumlinear method)": [[36, "mnoptical.ofcdemo.hwtopo.LumentumLinear.addport"]], "build() (mnoptical.ofcdemo.hwtopo.lumentumlinear method)": [[36, "mnoptical.ofcdemo.hwtopo.LumentumLinear.build"]], "configcomb() (in module mnoptical.ofcdemo.hwtopo)": [[36, "mnoptical.ofcdemo.hwtopo.configComb"]], "dropport() (mnoptical.ofcdemo.hwtopo.lumentumlinear method)": [[36, "mnoptical.ofcdemo.hwtopo.LumentumLinear.dropport"]], "hostname() (mnoptical.ofcdemo.hwtopo.lumentumlinear method)": [[36, "mnoptical.ofcdemo.hwtopo.LumentumLinear.hostname"]], "mnoptical.ofcdemo.hwtopo": [[36, "module-mnoptical.ofcdemo.hwtopo"]], "netconfportbase (in module mnoptical.ofcdemo.hwtopo)": [[36, "mnoptical.ofcdemo.hwtopo.netconfPortBase"]], "password (mnoptical.ofcdemo.hwtopo.lumentum attribute)": [[36, "mnoptical.ofcdemo.hwtopo.Lumentum.password"]], "topo (in module mnoptical.ofcdemo.hwtopo)": [[36, "mnoptical.ofcdemo.hwtopo.topo"]], "username (mnoptical.ofcdemo.hwtopo.lumentum attribute)": [[36, "mnoptical.ofcdemo.hwtopo.Lumentum.username"]], "wdmlink() (mnoptical.ofcdemo.hwtopo.lumentumlinear method)": [[36, "mnoptical.ofcdemo.hwtopo.LumentumLinear.wdmLink"]], "mnoptical.ofcdemo": [[37, "module-mnoptical.ofcdemo"]], "lroadm (class in mnoptical.ofcdemo.lroadm)": [[38, "mnoptical.ofcdemo.lroadm.LROADM"]], "netconfportbase (in module mnoptical.ofcdemo.lroadm)": [[38, "mnoptical.ofcdemo.lroadm.NetconfPortBase"]], "__str__() (mnoptical.ofcdemo.lroadm.lroadm method)": [[38, "mnoptical.ofcdemo.lroadm.LROADM.__str__"]], "addport() (mnoptical.ofcdemo.lroadm.lroadm method)": [[38, "mnoptical.ofcdemo.lroadm.LROADM.addport"]], "dropport() (mnoptical.ofcdemo.lroadm.lroadm method)": [[38, "mnoptical.ofcdemo.lroadm.LROADM.dropport"]], "mnoptical.ofcdemo.lroadm": [[38, "module-mnoptical.ofcdemo.lroadm"]], "password (in module mnoptical.ofcdemo.lroadm)": [[38, "mnoptical.ofcdemo.lroadm.password"]], "password (mnoptical.ofcdemo.lroadm.lroadm attribute)": [[38, "mnoptical.ofcdemo.lroadm.LROADM.password"]], "username (in module mnoptical.ofcdemo.lroadm)": [[38, "mnoptical.ofcdemo.lroadm.username"]], "username (mnoptical.ofcdemo.lroadm.lroadm attribute)": [[38, "mnoptical.ofcdemo.lroadm.LROADM.username"]], "als_disable() (mnoptical.ofcdemo.lumentum_netconf_api.lumentum method)": [[39, "mnoptical.ofcdemo.lumentum_NETCONF_API.Lumentum.ALS_disable"]], "lumentum (class in mnoptical.ofcdemo.lumentum_netconf_api)": [[39, "mnoptical.ofcdemo.lumentum_NETCONF_API.Lumentum"]], "lumentum.wssconnection (class in mnoptical.ofcdemo.lumentum_netconf_api)": [[39, "mnoptical.ofcdemo.lumentum_NETCONF_API.Lumentum.WSSConnection"]], "lumentum.wssconnectionstatus (class in mnoptical.ofcdemo.lumentum_netconf_api)": [[39, "mnoptical.ofcdemo.lumentum_NETCONF_API.Lumentum.WSSConnectionStatus"]], "lumentum_netconf (class in mnoptical.ofcdemo.lumentum_netconf_api)": [[39, "mnoptical.ofcdemo.lumentum_NETCONF_API.Lumentum_NETCONF"]], "password (in module mnoptical.ofcdemo.lumentum_netconf_api)": [[39, "mnoptical.ofcdemo.lumentum_NETCONF_API.PASSWORD"]], "username (in module mnoptical.ofcdemo.lumentum_netconf_api)": [[39, "mnoptical.ofcdemo.lumentum_NETCONF_API.USERNAME"]], "_configwss() (mnoptical.ofcdemo.lumentum_netconf_api.lumentum_netconf method)": [[39, "mnoptical.ofcdemo.lumentum_NETCONF_API.Lumentum_NETCONF._ConfigWSS"]], "_wssmonitor() (mnoptical.ofcdemo.lumentum_netconf_api.lumentum_netconf method)": [[39, "mnoptical.ofcdemo.lumentum_NETCONF_API.Lumentum_NETCONF._WSSMonitor"]], "cleanup() (mnoptical.ofcdemo.lumentum_netconf_api.lumentum method)": [[39, "mnoptical.ofcdemo.lumentum_NETCONF_API.Lumentum.cleanup"]], "connections (mnoptical.ofcdemo.lumentum_netconf_api.lumentum attribute)": [[39, "mnoptical.ofcdemo.lumentum_NETCONF_API.Lumentum.connections"]], "edfa_config() (mnoptical.ofcdemo.lumentum_netconf_api.lumentum method)": [[39, "mnoptical.ofcdemo.lumentum_NETCONF_API.Lumentum.edfa_config"]], "edfa_status() (mnoptical.ofcdemo.lumentum_netconf_api.lumentum method)": [[39, "mnoptical.ofcdemo.lumentum_NETCONF_API.Lumentum.edfa_status"]], "freqrangeghz() (mnoptical.ofcdemo.lumentum_netconf_api.lumentum static method)": [[39, "mnoptical.ofcdemo.lumentum_NETCONF_API.Lumentum.freqRangeGHz"]], "from_connection_details() (mnoptical.ofcdemo.lumentum_netconf_api.lumentum.wssconnectionstatus class method)": [[39, "mnoptical.ofcdemo.lumentum_NETCONF_API.Lumentum.WSSConnectionStatus.from_connection_details"]], "gen_dwdm_connections() (mnoptical.ofcdemo.lumentum_netconf_api.lumentum static method)": [[39, "mnoptical.ofcdemo.lumentum_NETCONF_API.Lumentum.gen_dwdm_connections"]], "lookup() (mnoptical.ofcdemo.lumentum_netconf_api.lumentum static method)": [[39, "mnoptical.ofcdemo.lumentum_NETCONF_API.Lumentum.lookup"]], "lookupstr() (mnoptical.ofcdemo.lumentum_netconf_api.lumentum static method)": [[39, "mnoptical.ofcdemo.lumentum_NETCONF_API.Lumentum.lookupstr"]], "mnoptical.ofcdemo.lumentum_netconf_api": [[39, "module-mnoptical.ofcdemo.lumentum_NETCONF_API"]], "parse() (mnoptical.ofcdemo.lumentum_netconf_api.xmltodict static method)": [[39, "mnoptical.ofcdemo.lumentum_NETCONF_API.xmltodict.parse"]], "parseconnections() (mnoptical.ofcdemo.lumentum_netconf_api.lumentum_netconf static method)": [[39, "mnoptical.ofcdemo.lumentum_NETCONF_API.Lumentum_NETCONF.parseConnections"]], "wss_add_connections() (mnoptical.ofcdemo.lumentum_netconf_api.lumentum method)": [[39, "mnoptical.ofcdemo.lumentum_NETCONF_API.Lumentum.wss_add_connections"]], "wss_delete_connection() (mnoptical.ofcdemo.lumentum_netconf_api.lumentum method)": [[39, "mnoptical.ofcdemo.lumentum_NETCONF_API.Lumentum.wss_delete_connection"]], "wss_get_connections() (mnoptical.ofcdemo.lumentum_netconf_api.lumentum method)": [[39, "mnoptical.ofcdemo.lumentum_NETCONF_API.Lumentum.wss_get_connections"]], "xmltodict (class in mnoptical.ofcdemo.lumentum_netconf_api)": [[39, "mnoptical.ofcdemo.lumentum_NETCONF_API.xmltodict"]], "connnsmap (in module mnoptical.ofcdemo.netconfserver)": [[40, "mnoptical.ofcdemo.netconfserver.ConnNsmap"]], "debug (in module mnoptical.ofcdemo.netconfserver)": [[40, "mnoptical.ofcdemo.netconfserver.Debug"]], "edfansmap (in module mnoptical.ofcdemo.netconfserver)": [[40, "mnoptical.ofcdemo.netconfserver.EdfaNsmap"]], "netconfagent (class in mnoptical.ofcdemo.netconfserver)": [[40, "mnoptical.ofcdemo.netconfserver.NetconfAgent"]], "netconfportbase (in module mnoptical.ofcdemo.netconfserver)": [[40, "mnoptical.ofcdemo.netconfserver.NetconfPortBase"]], "netconfserver (class in mnoptical.ofcdemo.netconfserver)": [[40, "mnoptical.ofcdemo.netconfserver.NetconfServer"]], "sslkeyfiledefault (in module mnoptical.ofcdemo.netconfserver)": [[40, "mnoptical.ofcdemo.netconfserver.SSLKeyFileDefault"]], "add_config() (mnoptical.ofcdemo.netconfserver.netconfagent method)": [[40, "mnoptical.ofcdemo.netconfserver.NetconfAgent.add_config"]], "add_connections() (mnoptical.ofcdemo.netconfserver.netconfagent method)": [[40, "mnoptical.ofcdemo.netconfserver.NetconfAgent.add_connections"]], "add_edfas() (mnoptical.ofcdemo.netconfserver.netconfagent method)": [[40, "mnoptical.ofcdemo.netconfserver.NetconfAgent.add_edfas"]], "configns (in module mnoptical.ofcdemo.netconfserver)": [[40, "mnoptical.ofcdemo.netconfserver.configNs"]], "debug() (in module mnoptical.ofcdemo.netconfserver)": [[40, "mnoptical.ofcdemo.netconfserver.debug"]], "delete_connection_dn() (mnoptical.ofcdemo.netconfserver.netconfagent method)": [[40, "mnoptical.ofcdemo.netconfserver.NetconfAgent.delete_connection_dn"]], "findinputpower() (mnoptical.ofcdemo.netconfserver.netconfagent method)": [[40, "mnoptical.ofcdemo.netconfserver.NetconfAgent.findInputPower"]], "findoutputpower() (mnoptical.ofcdemo.netconfserver.netconfagent method)": [[40, "mnoptical.ofcdemo.netconfserver.NetconfAgent.findOutputPower"]], "linein (in module mnoptical.ofcdemo.netconfserver)": [[40, "mnoptical.ofcdemo.netconfserver.linein"]], "lineout (in module mnoptical.ofcdemo.netconfserver)": [[40, "mnoptical.ofcdemo.netconfserver.lineout"]], "mnoptical.ofcdemo.netconfserver": [[40, "module-mnoptical.ofcdemo.netconfserver"]], "nc_append_capabilities() (mnoptical.ofcdemo.netconfserver.netconfagent method)": [[40, "mnoptical.ofcdemo.netconfserver.NetconfAgent.nc_append_capabilities"]], "nsmap (in module mnoptical.ofcdemo.netconfserver)": [[40, "mnoptical.ofcdemo.netconfserver.nsmap"]], "parseconn() (in module mnoptical.ofcdemo.netconfserver)": [[40, "mnoptical.ofcdemo.netconfserver.parseconn"]], "rpc_delete_connection() (mnoptical.ofcdemo.netconfserver.netconfagent method)": [[40, "mnoptical.ofcdemo.netconfserver.NetconfAgent.rpc_delete_connection"]], "rpc_disable_als() (mnoptical.ofcdemo.netconfserver.netconfagent method)": [[40, "mnoptical.ofcdemo.netconfserver.NetconfAgent.rpc_disable_als"]], "rpc_edit_config() (mnoptical.ofcdemo.netconfserver.netconfagent method)": [[40, "mnoptical.ofcdemo.netconfserver.NetconfAgent.rpc_edit_config"]], "rpc_get() (mnoptical.ofcdemo.netconfserver.netconfagent method)": [[40, "mnoptical.ofcdemo.netconfserver.NetconfAgent.rpc_get"]], "rpc_get_config() (mnoptical.ofcdemo.netconfserver.netconfagent method)": [[40, "mnoptical.ofcdemo.netconfserver.NetconfAgent.rpc_get_config"]], "rpc_remove_all_connections() (mnoptical.ofcdemo.netconfserver.netconfagent method)": [[40, "mnoptical.ofcdemo.netconfserver.NetconfAgent.rpc_remove_all_connections"]], "runtestserver() (in module mnoptical.ofcdemo.netconfserver)": [[40, "mnoptical.ofcdemo.netconfserver.runTestServer"]], "start() (mnoptical.ofcdemo.netconfserver.netconfserver method)": [[40, "mnoptical.ofcdemo.netconfserver.NetconfServer.start"]], "stop() (mnoptical.ofcdemo.netconfserver.netconfagent method)": [[40, "mnoptical.ofcdemo.netconfserver.NetconfAgent.stop"]], "stop() (mnoptical.ofcdemo.netconfserver.netconfserver method)": [[40, "mnoptical.ofcdemo.netconfserver.NetconfServer.stop"]], "updateconnections() (mnoptical.ofcdemo.netconfserver.netconfagent method)": [[40, "mnoptical.ofcdemo.netconfserver.NetconfAgent.updateConnections"]], "xmlstring() (in module mnoptical.ofcdemo.netconfserver)": [[40, "mnoptical.ofcdemo.netconfserver.xmlstring"]], "mnoptical.ofcdemo.simpledemo": [[41, "module-mnoptical.ofcdemo.simpledemo"]], "net (in module mnoptical.ofcdemo.simpledemo)": [[41, "mnoptical.ofcdemo.simpledemo.net"]], "quiethandler (class in mnoptical.rest)": [[42, "mnoptical.rest.QuietHandler"]], "restserver (class in mnoptical.rest)": [[42, "mnoptical.rest.RestServer"]], "cleanme() (in module mnoptical.rest)": [[42, "mnoptical.rest.cleanme"]], "config() (in module mnoptical.rest)": [[42, "mnoptical.rest.config"]], "connect() (in module mnoptical.rest)": [[42, "mnoptical.rest.connect"]], "disconnect() (in module mnoptical.rest)": [[42, "mnoptical.rest.disconnect"]], "info() (in module mnoptical.rest)": [[42, "mnoptical.rest.info"]], "interroadmlinks() (in module mnoptical.rest)": [[42, "mnoptical.rest.interRoadmLinks"]], "links() (in module mnoptical.rest)": [[42, "mnoptical.rest.links"]], "linkspec() (in module mnoptical.rest)": [[42, "mnoptical.rest.linkspec"]], "log_request() (mnoptical.rest.quiethandler method)": [[42, "mnoptical.rest.QuietHandler.log_request"]], "lookupnode() (in module mnoptical.rest)": [[42, "mnoptical.rest.lookUpNode"]], "mnoptical.rest": [[42, "module-mnoptical.rest"]], "monitor() (in module mnoptical.rest)": [[42, "mnoptical.rest.monitor"]], "monitorhandler() (in module mnoptical.rest)": [[42, "mnoptical.rest.monitorHandler"]], "monitors() (in module mnoptical.rest)": [[42, "mnoptical.rest.monitors"]], "net (mnoptical.rest.restserver attribute)": [[42, "mnoptical.rest.RestServer.net"]], "net() (in module mnoptical.rest)": [[42, "mnoptical.rest.net"]], "nodehandler() (in module mnoptical.rest)": [[42, "mnoptical.rest.nodeHandler"]], "nodes() (in module mnoptical.rest)": [[42, "mnoptical.rest.nodes"]], "opticallinks() (in module mnoptical.rest)": [[42, "mnoptical.rest.opticalLinks"]], "ports() (in module mnoptical.rest)": [[42, "mnoptical.rest.ports"]], "quiet (mnoptical.rest.quiethandler attribute)": [[42, "mnoptical.rest.QuietHandler.quiet"]], "reset() (in module mnoptical.rest)": [[42, "mnoptical.rest.reset"]], "routerlinks() (in module mnoptical.rest)": [[42, "mnoptical.rest.routerLinks"]], "rules() (in module mnoptical.rest)": [[42, "mnoptical.rest.rules"]], "set_ripple() (in module mnoptical.rest)": [[42, "mnoptical.rest.set_ripple"]], "setgain() (in module mnoptical.rest)": [[42, "mnoptical.rest.setgain"]], "start() (mnoptical.rest.restserver method)": [[42, "mnoptical.rest.RestServer.start"]], "stop() (mnoptical.rest.restserver method)": [[42, "mnoptical.rest.RestServer.stop"]], "terminallinks() (in module mnoptical.rest)": [[42, "mnoptical.rest.terminalLinks"]], "turn_on() (in module mnoptical.rest)": [[42, "mnoptical.rest.turn_on"]], "bps (in module mnoptical.terminal_params)": [[43, "mnoptical.terminal_params.bps"]], "mnoptical.terminal_params": [[43, "module-mnoptical.terminal_params"]], "rx_thresholds (in module mnoptical.terminal_params)": [[43, "mnoptical.terminal_params.rx_thresholds"]], "sr (in module mnoptical.terminal_params)": [[43, "mnoptical.terminal_params.sr"]], "ciansmalllinear (class in mnoptical.topo.cian_small_linear)": [[44, "mnoptical.topo.cian_small_linear.CIANSmallLinear"]], "build() (mnoptical.topo.cian_small_linear.ciansmalllinear static method)": [[44, "mnoptical.topo.cian_small_linear.CIANSmallLinear.build"]], "mnoptical.topo.cian_small_linear": [[44, "module-mnoptical.topo.cian_small_linear"]], "cost239topology (class in mnoptical.topo.cost239)": [[45, "mnoptical.topo.cost239.Cost239Topology"]], "build() (mnoptical.topo.cost239.cost239topology static method)": [[45, "mnoptical.topo.cost239.Cost239Topology.build"]], "build_link() (in module mnoptical.topo.cost239)": [[45, "mnoptical.topo.cost239.build_link"]], "build_links() (in module mnoptical.topo.cost239)": [[45, "mnoptical.topo.cost239.build_links"]], "build_spans() (in module mnoptical.topo.cost239)": [[45, "mnoptical.topo.cost239.build_spans"]], "mnoptical.topo.cost239": [[45, "module-mnoptical.topo.cost239"]], "deutschetelekom (class in mnoptical.topo.deutsche_telekom)": [[46, "mnoptical.topo.deutsche_telekom.DeutscheTelekom"]], "build() (mnoptical.topo.deutsche_telekom.deutschetelekom static method)": [[46, "mnoptical.topo.deutsche_telekom.DeutscheTelekom.build"]], "mnoptical.topo.deutsche_telekom": [[46, "module-mnoptical.topo.deutsche_telekom"]], "span() (in module mnoptical.topo.helper_funcs)": [[47, "mnoptical.topo.helper_funcs.Span"]], "add_amp() (in module mnoptical.topo.helper_funcs)": [[47, "mnoptical.topo.helper_funcs.add_amp"]], "build_link() (in module mnoptical.topo.helper_funcs)": [[47, "mnoptical.topo.helper_funcs.build_link"]], "build_spans() (in module mnoptical.topo.helper_funcs)": [[47, "mnoptical.topo.helper_funcs.build_spans"]], "m (in module mnoptical.topo.helper_funcs)": [[47, "mnoptical.topo.helper_funcs.m"]], "mnoptical.topo.helper_funcs": [[47, "module-mnoptical.topo.helper_funcs"]], "mnoptical.topo": [[48, "module-mnoptical.topo"]], "lineartopology (class in mnoptical.topo.linear)": [[49, "mnoptical.topo.linear.LinearTopology"]], "span() (in module mnoptical.topo.linear)": [[49, "mnoptical.topo.linear.Span"]], "add_amp() (in module mnoptical.topo.linear)": [[49, "mnoptical.topo.linear.add_amp"]], "build() (mnoptical.topo.linear.lineartopology static method)": [[49, "mnoptical.topo.linear.LinearTopology.build"]], "build_link() (in module mnoptical.topo.linear)": [[49, "mnoptical.topo.linear.build_link"]], "build_spans() (in module mnoptical.topo.linear)": [[49, "mnoptical.topo.linear.build_spans"]], "m (in module mnoptical.topo.linear)": [[49, "mnoptical.topo.linear.m"]], "mnoptical.topo.linear": [[49, "module-mnoptical.topo.linear"]], "lineartopology (class in mnoptical.topo.linear_multiloc)": [[50, "mnoptical.topo.linear_multiloc.LinearTopology"]], "build() (mnoptical.topo.linear_multiloc.lineartopology static method)": [[50, "mnoptical.topo.linear_multiloc.LinearTopology.build"]], "mnoptical.topo.linear_multiloc": [[50, "module-mnoptical.topo.linear_multiloc"]], "lineartopology (class in mnoptical.topo.linear_params)": [[51, "mnoptical.topo.linear_params.LinearTopology"]], "build() (mnoptical.topo.linear_params.lineartopology static method)": [[51, "mnoptical.topo.linear_params.LinearTopology.build"]], "mnoptical.topo.linear_params": [[51, "module-mnoptical.topo.linear_params"]], "build() (in module mnoptical.topo.ofc_demo)": [[52, "mnoptical.topo.ofc_demo.build"]], "mnoptical.topo.ofc_demo": [[52, "module-mnoptical.topo.ofc_demo"]], "ringtopology (class in mnoptical.topo.ring_topology)": [[53, "mnoptical.topo.ring_topology.RingTopology"]], "build() (mnoptical.topo.ring_topology.ringtopology static method)": [[53, "mnoptical.topo.ring_topology.RingTopology.build"]], "mnoptical.topo.ring_topology": [[53, "module-mnoptical.topo.ring_topology"]], "thz (in module mnoptical.units)": [[54, "mnoptical.units.THz"]], "w (in module mnoptical.units)": [[54, "mnoptical.units.W"]], "abs_to_db() (in module mnoptical.units)": [[54, "mnoptical.units.abs_to_db"]], "abs_to_dbm() (in module mnoptical.units)": [[54, "mnoptical.units.abs_to_dbm"]], "c (in module mnoptical.units)": [[54, "mnoptical.units.c"]], "cm (in module mnoptical.units)": [[54, "mnoptical.units.cm"]], "db_to_abs() (in module mnoptical.units)": [[54, "mnoptical.units.db_to_abs"]], "h (in module mnoptical.units)": [[54, "mnoptical.units.h"]], "km (in module mnoptical.units)": [[54, "mnoptical.units.km"]], "mw (in module mnoptical.units)": [[54, "mnoptical.units.mW"]], "mnoptical.units": [[54, "module-mnoptical.units"]], "nm (in module mnoptical.units)": [[54, "mnoptical.units.nm"]], "pi (in module mnoptical.units)": [[54, "mnoptical.units.pi"]], "ps (in module mnoptical.units)": [[54, "mnoptical.units.ps"]], "um (in module mnoptical.units)": [[54, "mnoptical.units.um"]], "mnoptical.visualization": [[55, "module-mnoptical.visualization"]], "net (in module mnoptical.visualization)": [[55, "mnoptical.visualization.net"]], "plot_power_vs_wavelength() (in module mnoptical.visualization)": [[55, "mnoptical.visualization.plot_power_vs_wavelength"]], "extract_power() (in module mnoptical.visualize_topo)": [[56, "mnoptical.visualize_topo.extract_power"]], "mnoptical.visualize_topo": [[56, "module-mnoptical.visualize_topo"]], "visualize() (in module mnoptical.visualize_topo)": [[56, "mnoptical.visualize_topo.visualize"]], "visualize_topology() (in module mnoptical.visualize_topo)": [[56, "mnoptical.visualize_topo.visualize_topology"]]}})