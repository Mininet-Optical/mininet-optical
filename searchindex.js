Search.setIndex({"docnames": ["README", "api-overview", "architecture", "autoapi/index", "autoapi/mnoptical/dataplane/index", "autoapi/mnoptical/edfa_params/index", "autoapi/mnoptical/examples/config_lroadmring/index", "autoapi/mnoptical/examples/cosmostutorial/index", "autoapi/mnoptical/examples/dbgtest/index", "autoapi/mnoptical/examples/index", "autoapi/mnoptical/examples/lroadmring/index", "autoapi/mnoptical/examples/nc_add_connection/index", "autoapi/mnoptical/examples/roadm_with_amps/index", "autoapi/mnoptical/examples/sigcommtutorial/index", "autoapi/mnoptical/examples/simplelink/index", "autoapi/mnoptical/examples/singlelink/index", "autoapi/mnoptical/examples/singleroadm/index", "autoapi/mnoptical/examples/sixnodestopo/index", "autoapi/mnoptical/examples/testattenuator/index", "autoapi/mnoptical/examples/unilinear1/index", "autoapi/mnoptical/examples/unilinear2/index", "autoapi/mnoptical/examples/uniring/index", "autoapi/mnoptical/examples/uniroadmchain/index", "autoapi/mnoptical/index", "autoapi/mnoptical/link/index", "autoapi/mnoptical/network/index", "autoapi/mnoptical/node/index", "autoapi/mnoptical/ofcdemo/Control_Test_Lum/index", "autoapi/mnoptical/ofcdemo/Control_Test_Mininet_REST/index", "autoapi/mnoptical/ofcdemo/Demo_Control/index", "autoapi/mnoptical/ofcdemo/Demo_Control_2/index", "autoapi/mnoptical/ofcdemo/Simulation_API/index", "autoapi/mnoptical/ofcdemo/apsp/index", "autoapi/mnoptical/ofcdemo/demo/index", "autoapi/mnoptical/ofcdemo/demo_2021/index", "autoapi/mnoptical/ofcdemo/demo_hwtopo/index", "autoapi/mnoptical/ofcdemo/demolib/index", "autoapi/mnoptical/ofcdemo/demolib_2021/index", "autoapi/mnoptical/ofcdemo/fakecontroller/index", "autoapi/mnoptical/ofcdemo/hwtopo/index", "autoapi/mnoptical/ofcdemo/index", "autoapi/mnoptical/ofcdemo/lroadm/index", "autoapi/mnoptical/ofcdemo/lumentum_NETCONF_API/index", "autoapi/mnoptical/ofcdemo/netconfserver/index", "autoapi/mnoptical/ofcdemo/simpledemo/index", "autoapi/mnoptical/rest/index", "autoapi/mnoptical/terminal_params/index", "autoapi/mnoptical/topo/cian_small_linear/index", "autoapi/mnoptical/topo/cost239/index", "autoapi/mnoptical/topo/deutsche_telekom/index", "autoapi/mnoptical/topo/helper_funcs/index", "autoapi/mnoptical/topo/index", "autoapi/mnoptical/topo/linear/index", "autoapi/mnoptical/topo/linear_multiloc/index", "autoapi/mnoptical/topo/linear_params/index", "autoapi/mnoptical/topo/ofc_demo/index", "autoapi/mnoptical/topo/ring_topology/index", "autoapi/mnoptical/units/index", "autoapi/mnoptical/visualization/index", "autoapi/mnoptical/visualize_topo/index", "index", "tutorial", "visualization", "walkthrough"], "filenames": ["README.md", "api-overview.md", "architecture.md", "autoapi/index.rst", "autoapi/mnoptical/dataplane/index.rst", "autoapi/mnoptical/edfa_params/index.rst", "autoapi/mnoptical/examples/config_lroadmring/index.rst", "autoapi/mnoptical/examples/cosmostutorial/index.rst", "autoapi/mnoptical/examples/dbgtest/index.rst", "autoapi/mnoptical/examples/index.rst", "autoapi/mnoptical/examples/lroadmring/index.rst", "autoapi/mnoptical/examples/nc_add_connection/index.rst", "autoapi/mnoptical/examples/roadm_with_amps/index.rst", "autoapi/mnoptical/examples/sigcommtutorial/index.rst", "autoapi/mnoptical/examples/simplelink/index.rst", "autoapi/mnoptical/examples/singlelink/index.rst", "autoapi/mnoptical/examples/singleroadm/index.rst", "autoapi/mnoptical/examples/sixnodestopo/index.rst", "autoapi/mnoptical/examples/testattenuator/index.rst", "autoapi/mnoptical/examples/unilinear1/index.rst", "autoapi/mnoptical/examples/unilinear2/index.rst", "autoapi/mnoptical/examples/uniring/index.rst", "autoapi/mnoptical/examples/uniroadmchain/index.rst", "autoapi/mnoptical/index.rst", "autoapi/mnoptical/link/index.rst", "autoapi/mnoptical/network/index.rst", "autoapi/mnoptical/node/index.rst", "autoapi/mnoptical/ofcdemo/Control_Test_Lum/index.rst", "autoapi/mnoptical/ofcdemo/Control_Test_Mininet_REST/index.rst", "autoapi/mnoptical/ofcdemo/Demo_Control/index.rst", "autoapi/mnoptical/ofcdemo/Demo_Control_2/index.rst", "autoapi/mnoptical/ofcdemo/Simulation_API/index.rst", "autoapi/mnoptical/ofcdemo/apsp/index.rst", "autoapi/mnoptical/ofcdemo/demo/index.rst", "autoapi/mnoptical/ofcdemo/demo_2021/index.rst", "autoapi/mnoptical/ofcdemo/demo_hwtopo/index.rst", "autoapi/mnoptical/ofcdemo/demolib/index.rst", "autoapi/mnoptical/ofcdemo/demolib_2021/index.rst", "autoapi/mnoptical/ofcdemo/fakecontroller/index.rst", "autoapi/mnoptical/ofcdemo/hwtopo/index.rst", "autoapi/mnoptical/ofcdemo/index.rst", "autoapi/mnoptical/ofcdemo/lroadm/index.rst", "autoapi/mnoptical/ofcdemo/lumentum_NETCONF_API/index.rst", "autoapi/mnoptical/ofcdemo/netconfserver/index.rst", "autoapi/mnoptical/ofcdemo/simpledemo/index.rst", "autoapi/mnoptical/rest/index.rst", "autoapi/mnoptical/terminal_params/index.rst", "autoapi/mnoptical/topo/cian_small_linear/index.rst", "autoapi/mnoptical/topo/cost239/index.rst", "autoapi/mnoptical/topo/deutsche_telekom/index.rst", "autoapi/mnoptical/topo/helper_funcs/index.rst", "autoapi/mnoptical/topo/index.rst", "autoapi/mnoptical/topo/linear/index.rst", "autoapi/mnoptical/topo/linear_multiloc/index.rst", "autoapi/mnoptical/topo/linear_params/index.rst", "autoapi/mnoptical/topo/ofc_demo/index.rst", "autoapi/mnoptical/topo/ring_topology/index.rst", "autoapi/mnoptical/units/index.rst", "autoapi/mnoptical/visualization/index.rst", "autoapi/mnoptical/visualize_topo/index.rst", "index.rst", "tutorial.md", "visualization.md", "walkthrough.md"], "titles": ["Welcome to Mininet-Optical", "API Overview", "Architecture Overview", "API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.dataplane</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.edfa_params</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.examples.config_lroadmring</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.examples.cosmostutorial</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.examples.dbgtest</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.examples</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.examples.lroadmring</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.examples.nc_add_connection</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.examples.roadm_with_amps</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.examples.sigcommtutorial</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.examples.simplelink</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.examples.singlelink</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.examples.singleroadm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.examples.sixnodestopo</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.examples.test-attenuator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.examples.unilinear1</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.examples.unilinear2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.examples.uniring</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.examples.uniroadmchain</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.link</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.network</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.node</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.ofcdemo.Control_Test_Lum</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.ofcdemo.Control_Test_Mininet_REST</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.ofcdemo.Demo_Control</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.ofcdemo.Demo_Control_2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.ofcdemo.Simulation_API</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.ofcdemo.apsp</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.ofcdemo.demo</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.ofcdemo.demo_2021</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.ofcdemo.demo_hwtopo</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.ofcdemo.demolib</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.ofcdemo.demolib_2021</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.ofcdemo.fakecontroller</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.ofcdemo.hwtopo</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.ofcdemo</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.ofcdemo.lroadm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.ofcdemo.lumentum_NETCONF_API</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.ofcdemo.netconfserver</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.ofcdemo.simpledemo</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.rest</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.terminal_params</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.topo.cian_small_linear</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.topo.cost239</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.topo.deutsche_telekom</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.topo.helper_funcs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.topo</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.topo.linear</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.topo.linear_multiloc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.topo.linear_params</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.topo.ofc_demo</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.topo.ring_topology</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.units</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.visualization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mnoptical.visualize_topo</span></code>", "Mininet-Optical Documentation", "Tutorial", "Visualization", "Installation and Walkthrough"], "terms": {"i": [0, 1, 2, 4, 6, 7, 10, 13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 32, 36, 37, 38, 39, 41, 42, 45, 61, 62, 63], "prototyp": [0, 38], "implement": [0, 2, 26, 39, 43, 61], "an": [0, 1, 2, 4, 11, 12, 15, 18, 19, 25, 26, 28, 29, 30, 32, 36, 37, 38, 42, 45, 50, 52, 61, 62, 63], "emul": [0, 1, 2, 4, 14, 26, 44, 60, 62, 63], "packet": [0, 1, 2, 14, 21, 28, 32, 45, 61, 63], "softwar": [0, 1, 2, 61], "defin": [0, 1, 2, 26, 46], "network": [0, 1, 2, 3, 4, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 28, 29, 30, 32, 36, 37, 43, 45, 47, 48, 52, 53, 54, 55, 59, 61, 62, 63], "It": [0, 1, 4, 61, 62], "includ": [0, 24, 26, 61, 63], "simul": [0, 1, 2, 4, 19, 26, 43, 60], "transmiss": [0, 2, 24, 26, 59, 61], "physic": [0, 2, 4, 26, 44, 61], "base": [0, 1, 2, 4, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 31, 36, 37, 38, 39, 41, 42, 43, 45, 63], "gn": [0, 24], "model": [0, 2, 4, 10, 24, 26, 36, 39, 61], "dataplan": [0, 3, 23, 26, 39, 41, 44, 61, 62, 63], "extend": [0, 1, 2, 36], "element": [0, 1, 2, 24, 43, 61], "link": [0, 1, 3, 4, 7, 10, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 26, 28, 29, 30, 32, 36, 37, 39, 45, 49, 52, 63], "simpl": [0, 1, 4, 6, 7, 10, 12, 14, 15, 16, 17, 22, 28, 32, 35, 38, 41, 43, 45, 60, 61], "sdn": [0, 2, 28, 32, 38, 45, 60, 61, 62], "control": [0, 2, 4, 6, 24, 26, 28, 29, 30, 31, 32, 35, 38, 42, 44, 45, 60, 61, 62, 63], "plane": [0, 4, 44, 45, 63], "The": [0, 1, 2, 4, 21, 24, 28, 32, 38, 59, 61, 62, 63], "mai": [0, 1, 4, 19, 38, 61, 63], "us": [0, 1, 2, 4, 6, 7, 10, 11, 14, 15, 19, 22, 24, 26, 28, 29, 30, 31, 32, 38, 44, 59, 61, 62, 63], "independ": [0, 26], "part": [0, 39, 60], "thi": [0, 1, 2, 3, 4, 6, 7, 12, 13, 14, 15, 19, 20, 21, 22, 25, 26, 29, 30, 36, 38, 41, 44, 45, 59, 61, 62, 63], "enabl": [0, 2, 6, 24, 28, 32, 61], "end": [0, 61], "roadm": [0, 1, 2, 4, 6, 10, 12, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 36, 37, 38, 39, 41, 42, 43, 44, 45, 49, 50, 52, 59, 61, 62, 63], "transceiv": [0, 1, 4, 6, 12, 15, 17, 19, 20, 21, 24, 25, 26, 38, 39, 62, 63], "fiber": [0, 2, 4, 15, 24, 25, 29, 30, 36, 37, 50, 52, 54, 61, 63], "span": [0, 1, 4, 10, 15, 16, 24, 25, 26, 29, 30, 36, 37, 48, 49, 50, 52, 54, 61, 63], "edfa": [0, 2, 25, 26, 42, 43, 61, 63], "openflow": [0, 2, 6, 28, 32, 38, 61], "switch": [0, 1, 2, 4, 6, 10, 15, 26, 27, 29, 30, 31, 38, 45, 61, 63], "ethernet": [0, 1, 2, 4, 6, 10, 15, 21, 61, 63], "manag": [0, 2], "both": [0, 4, 61], "document": [0, 3, 63], "avail": [0, 62, 63], "org": [0, 1, 7, 13], "packag": 0, "exampl": [0, 1, 3, 23, 61, 62, 63], "sampl": 0, "script": [0, 1, 6, 10, 12, 14, 15, 16, 21, 26, 38, 60, 61, 62], "test": [0, 1, 4, 7, 8, 10, 12, 14, 15, 16, 19, 20, 21, 22, 28, 29, 30, 35, 36, 37, 38, 43, 61, 63], "mode": [0, 21, 24, 26, 43, 59, 60, 62, 63], "doc": [0, 1], "sphinx": [0, 3], "onos_rest_api": 0, "ono": [0, 38, 61], "cli": [0, 1, 2, 4, 19, 20, 21, 36, 37, 62, 63], "tool": [0, 2, 60], "rest": [0, 3, 4, 6, 14, 15, 23, 38, 60, 61, 62, 63], "proxi": [0, 38], "ofc20": 0, "demo": [0, 3, 4, 23, 28, 32, 34, 36, 37, 39, 40, 44, 45, 61], "opticalemul": 0, "southbound": 0, "driver": 0, "dist": 0, "present": [0, 1], "creat": [0, 1, 2, 3, 4, 12, 14, 18, 19, 20, 21, 25, 26, 42, 50, 52, 59, 61, 62, 63], "make": [0, 2, 11, 38, 63], "py": [0, 1, 4, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 26, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 44, 45, 62, 63], "edfa_param": [0, 3, 23], "wavelength": [0, 24, 26], "depend": [0, 16, 17, 26, 29, 30, 61, 63], "gain": [0, 4, 24, 26, 36, 45], "function": [0, 1, 24, 26, 61, 62, 63], "contain": [0, 2, 3, 26, 32], "node": [0, 1, 3, 4, 6, 10, 12, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 28, 29, 30, 31, 32, 36, 38, 42, 44, 45, 47, 49, 50, 52, 53, 54, 55, 61, 62, 63], "agent": [0, 4, 43], "extern": [0, 2, 61], "unit": [0, 3, 23, 26], "measur": 0, "terminal_param": [0, 3, 23], "paramet": [0, 1, 24, 25, 26, 42, 47, 48, 50, 52, 53, 54, 55, 57, 59, 61, 62], "termin": [0, 1, 2, 4, 10, 12, 14, 15, 16, 17, 19, 20, 21, 22, 26, 28, 31, 32, 36, 37, 38, 39, 45, 49, 61, 63], "visualize_topo": [0, 3, 23], "visual": [0, 3, 23, 59, 60], "support": [0, 4, 8, 25, 26, 45, 60, 61, 62, 63], "can": [0, 1, 2, 4, 14, 16, 17, 22, 24, 26, 61, 62, 63], "also": [0, 1, 2, 4, 12, 15, 39, 61, 62, 63], "ofcdemo": [0, 3, 6, 19, 20, 21, 23, 61], "relat": 0, "our": [0, 1, 4, 28, 32, 36, 37, 43, 61], "ofc": [0, 28, 32, 33, 34, 36, 37, 39], "": [0, 1, 2, 4, 21, 24, 26, 28, 32, 36, 38, 43, 45, 61, 63], "topo": [0, 1, 3, 4, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 36, 37, 39], "topologi": [0, 7, 10, 12, 13, 14, 15, 16, 17, 19, 20, 33, 34, 36, 37, 39, 44, 49, 59, 60, 61, 62, 63], "makefil": 0, "ha": [0, 1, 2, 60, 61, 62, 63], "clean": [0, 1, 4, 26, 42], "instal": [0, 1, 4, 26, 27, 29, 31, 38, 45, 59, 60, 61], "devel": 0, "target": 0, "requir": [0, 1, 26, 48, 52, 59, 61, 62, 63], "txt": 0, "been": [0, 1, 60, 62, 63], "develop": [0, 2, 28, 32, 60], "from": [0, 1, 4, 12, 21, 24, 26, 27, 28, 29, 30, 32, 35, 36, 45, 59, 60, 61, 62, 63], "depart": [0, 60], "energi": [0, 60], "under": [0, 24, 60], "grant": [0, 60], "de": [0, 60], "sc0015867": [0, 60], "nation": [0, 60], "scienc": [0, 60], "foundat": [0, 60], "cian": [0, 60], "erc": [0, 60], "cosmo": [0, 4, 7, 11, 13, 39, 60], "pawr": [0, 60], "platform": [0, 60], "cosm": [0, 7, 60], "ic": [0, 7, 60], "project": [0, 24, 60, 61], "cn": [0, 60], "1827923": [0, 60], "oac": [0, 60], "2029295": [0, 60], "2112562": [0, 60], "And": [0, 60], "ireland": [0, 60], "through": [0, 4, 36, 60, 61], "connect": [0, 1, 2, 4, 6, 11, 14, 15, 16, 17, 19, 20, 21, 24, 26, 36, 37, 38, 42, 43, 45, 60, 61, 63], "centr": [0, 60], "13": [0, 60, 61], "rc": [0, 60], "2077_p2": [0, 60], "18": [0, 26, 28, 29, 32, 60, 61], "ri": [0, 60], "5721": [0, 60], "14": [0, 60, 61], "ia": [0, 60], "527": [0, 60], "section": [1, 63], "provid": [1, 4, 61], "we": [1, 4, 14, 19, 20, 21, 24, 26, 28, 32, 61, 62, 63], "discuss": 1, "gener": [1, 2, 3, 4, 24, 61], "linear": [1, 3, 12, 19, 20, 23, 26, 36, 37, 44, 51, 61], "its": [1, 2, 61, 62], "logic": 1, "regular": [1, 63], "If": [1, 4, 26, 61, 62, 63], "you": [1, 61, 62, 63], "ar": [1, 2, 4, 10, 15, 16, 19, 20, 21, 25, 26, 28, 29, 30, 32, 36, 37, 61, 62, 63], "unfamiliar": 1, "wish": [1, 61], "read": [1, 61], "introduct": 1, "On": [1, 63], "complet": [1, 61, 63], "follow": [1, 4, 14, 61, 62, 63], "set": [1, 4, 26, 27, 35, 36, 38, 45, 60, 61], "command": [1, 4, 14, 19, 20, 21, 36, 61, 62], "have": [1, 19, 28, 32, 61, 63], "readi": 1, "configur": [1, 2, 4, 6, 7, 14, 15, 16, 17, 19, 20, 21, 22, 26, 28, 29, 30, 31, 32, 36, 37, 38, 39, 43, 45, 61, 63], "take": [1, 61], "look": [1, 26, 42, 45, 61, 63], "like": [1, 7, 10, 13, 39, 41, 43, 61, 63], "h1": [1, 12, 14, 15, 16, 17, 22, 36, 37, 61, 63], "t1": [1, 12, 14, 15, 16, 22, 36, 37, 61, 63], "boost": [1, 4, 12, 14, 15, 16, 18, 26, 42, 43, 49, 50, 52, 61, 63], "25km": [1, 14, 15, 16, 61, 63], "t2": [1, 12, 14, 15, 16, 22, 36, 37, 61, 63], "h2": [1, 12, 14, 15, 16, 17, 22, 36, 37, 61, 63], "let": 1, "simplelink": [1, 3, 9, 23, 61], "see": [1, 26, 61, 62, 63], "how": [1, 12, 16, 17, 28, 32, 60, 61, 63], "done": [1, 61], "sinc": [1, 2, 28, 32, 61, 63], "object": [1, 4, 12, 18, 24, 25, 26, 27, 28, 31, 38, 45, 47, 48, 50, 52, 53, 54, 55, 59, 61, 63], "orient": 1, "program": [1, 6, 28, 32, 38], "approach": [1, 2, 61], "need": [1, 14, 19, 20, 24, 26, 59, 61, 62, 63], "class": [1, 59, 63], "name": [1, 4, 10, 11, 25, 26, 28, 32, 35, 36, 37, 38, 39, 41, 42, 61, 62, 63], "simplelinktopo": [1, 14], "statement": [1, 59], "import": [1, 59, 62], "rememb": [1, 61], "templat": [1, 36, 37], "instanti": [1, 25], "which": [1, 2, 4, 59, 61, 62, 63], "pass": [1, 4, 12, 26, 43, 61], "constructor": [1, 4, 12, 61], "build": [1, 4, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 36, 37, 39, 47, 48, 49, 52, 53, 54, 55, 56, 61], "desir": 1, "def": [1, 26], "self": [1, 4, 26, 38], "In": [1, 24, 61, 62, 63], "first": [1, 43, 61], "host": [1, 2, 4, 7, 10, 15, 21, 36, 37, 39, 61, 63], "addhost": 1, "purpos": [1, 36, 62], "thereaft": 1, "interfac": [1, 2, 4, 26, 61], "between": [1, 14, 15, 16, 19, 24, 26, 36, 45, 49, 61, 63], "further": [1, 2], "place": 1, "transmit": [1, 4, 12, 26, 61], "receiv": [1, 4, 26, 61, 63], "signal": [1, 2, 4, 19, 20, 22, 24, 26, 27, 29, 30, 31, 36, 43, 61, 62, 63], "therefor": [1, 62], "param": [1, 4, 7, 10, 12, 13, 18, 24, 25, 26, 36, 37, 38, 39, 43, 50, 52, 54, 59], "tx1": 1, "0": [1, 4, 6, 10, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 32, 36, 37, 38, 39, 42, 48, 50, 52, 53, 54, 55, 57, 59, 63], "dbm": [1, 4, 10, 19, 20, 21, 22, 39, 47, 48, 52, 53, 54, 55, 57, 61, 62], "c": [1, 57, 61], "addswitch": [1, 4, 19, 20], "cl": [1, 4, 19, 20], "note": [1, 10, 16, 26, 29, 30, 42, 62, 63], "just": [1, 4, 28, 32, 39, 61], "data": [1, 24, 26, 31, 43], "valu": [1, 24, 26, 38, 57, 59, 61], "later": [1, 63], "actual": [1, 19, 22, 61], "case": [1, 2, 22, 24, 25, 62], "consist": [1, 4, 15, 36, 37, 63], "list": [1, 4, 6, 26, 28, 29, 30, 32, 36, 37, 38, 45, 57, 63], "singl": [1, 2, 12, 14, 15, 16, 17, 21, 24, 29, 30, 36, 37, 39, 43, 61, 63], "default": [1, 4, 7, 10, 13, 16, 24, 26, 39, 61, 62], "power": [1, 4, 10, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 36, 38, 39, 43, 47, 48, 52, 53, 54, 55, 59, 61, 62], "0dbm": 1, "band": [1, 26], "though": [1, 20], "option": [1, 4, 25, 26, 29, 39, 50, 54, 61, 62, 63], "current": [1, 4, 11, 25, 45, 61, 62], "ignor": [1, 61], "reus": 1, "same": [1, 2, 4, 26, 28, 32, 61, 62], "ok": [1, 61], "separ": [1, 59, 63], "them": [1, 4, 19, 36, 37, 61], "At": [1, 63], "point": [1, 21, 26, 61, 62, 63], "all": [1, 4, 24, 26, 28, 31, 32, 36, 37, 38, 61, 62, 63], "do": [1, 26, 61], "now": [1, 4, 15, 61, 63], "togeth": 1, "form": [1, 24], "work": [1, 2, 28, 32, 63], "wdm": [1, 4, 7, 10, 13, 24, 39, 61], "conclud": [1, 61], "specif": [1, 61, 62], "method": [1, 12, 19, 20, 24, 36, 37, 61], "addlink": [1, 4, 19, 20, 36, 37, 61], "port2": [1, 4, 7, 10, 13, 19, 20, 29, 30, 38, 39, 45], "1": [1, 3, 4, 6, 10, 12, 14, 15, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 36, 37, 38, 39, 41, 42, 50, 53, 54, 57, 59, 63], "opticallink": [1, 4, 36, 37, 45], "port1": [1, 4, 7, 10, 13, 19, 20, 29, 30, 38, 39, 45], "2": [1, 4, 14, 15, 19, 20, 21, 26, 29, 36, 37, 42, 47, 49, 63], "target_gain": [1, 26, 42], "17": [1, 26, 61], "db": [1, 4, 18, 26, 46, 57, 61, 63], "25": [1, 4, 29, 30, 61], "km": [1, 4, 24, 29, 30, 36, 37, 50, 52, 57], "isn": 1, "t": [1, 21, 24, 26, 28, 32, 61, 63], "enough": [1, 61], "itself": 1, "handl": [1, 4, 45, 48, 52, 61], "__main__": 1, "__name__": 1, "cleanup": [1, 42], "setloglevel": 1, "info": [1, 7, 45], "up": [1, 24, 27, 33, 34, 35, 42, 43, 45, 60, 61], "ani": [1, 19, 28, 32, 38, 61, 62, 63], "stale": 1, "state": [1, 24, 26, 36, 62], "tell": [1, 45, 61], "log": [1, 45, 61], "system": [1, 2, 14, 24, 26, 61], "show": [1, 12, 61], "inform": [1, 4, 45, 61, 62, 63], "messag": [1, 62], "progress": [1, 61], "next": [1, 26, 61], "net": [1, 4, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 32, 33, 34, 36, 37, 38, 39, 43, 44, 45, 48, 50, 52, 58, 59, 61, 63], "re": [1, 61], "go": [1, 36, 61], "server": [1, 43, 45, 59], "restserv": [1, 45], "well": [1, 15, 61, 63], "For": [1, 4, 19, 20, 26, 61, 62, 63], "print": [1, 4, 11, 36, 43, 61], "out": [1, 2, 4, 18, 21, 26, 36, 61, 62, 63], "docstr": 1, "header": 1, "__doc__": 1, "either": [1, 16, 17, 61], "run": [1, 2, 10, 12, 14, 15, 16, 21, 26, 32, 43, 60, 61], "invok": [1, 38], "otherwis": 1, "argv": 1, "els": 1, "after": [1, 26, 59, 61, 62, 63], "exit": [1, 61, 63], "halt": 1, "shut": [1, 43], "down": [1, 43], "stop": [1, 43, 45, 61], "learn": [1, 61, 63], "about": [1, 61], "design": [1, 2, 19, 26, 61, 63], "process": [1, 2, 26], "onc": [1, 63], "execut": [1, 61, 63], "abl": [1, 61, 63], "commun": [1, 61], "tutori": [1, 7, 11, 13, 60], "line": [1, 4, 12, 21, 36, 37, 43, 49, 62], "curl": [1, 14, 15, 61, 63], "util": [1, 63], "transfer": 1, "url": [1, 61], "syntax": 1, "address": [1, 7, 14, 21, 36, 37], "local": [1, 4, 21, 36, 37, 38], "machin": [1, 2, 61], "identifi": [1, 26, 61], "built": [1, 59, 63], "localhost": [1, 14, 15, 38, 63], "8080": [1, 14, 15, 38, 63], "t3": [1, 16, 36, 37, 61], "r1": [1, 12, 16, 27, 35, 36, 37, 48, 50, 52, 61], "essecti": 1, "channel": [1, 4, 6, 12, 14, 15, 19, 20, 21, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 42, 43, 59, 61, 63], "oper": [1, 11, 19, 20, 21, 26, 42, 47, 48, 52, 53, 54, 55, 61], "port": [1, 4, 6, 19, 21, 25, 26, 28, 29, 30, 32, 38, 39, 41, 43, 45, 58, 59, 61, 62, 63], "per": [1, 26, 29, 32, 46, 61], "rout": [1, 4, 19, 20, 26, 28, 29, 30, 32, 61], "ethport": [1, 4, 14, 15, 19, 20, 38, 63], "wdmport": [1, 4, 14, 15, 38, 63], "where": [1, 61], "x": [1, 61, 63], "sign": 1, "step": 1, "turn": [1, 2, 4, 28, 31, 61], "turn_on": [1, 4, 14, 15, 26, 38, 45, 63], "Not": 1, "reset": [1, 2, 4, 24, 26, 36, 38, 45, 63], "ensur": 1, "previou": [1, 26], "rule": [1, 4, 6, 26, 27, 29, 30, 31, 38, 45, 61, 63], "remov": [1, 4, 24, 26, 29, 30, 45], "add": [1, 2, 4, 7, 10, 11, 12, 13, 18, 19, 20, 21, 25, 26, 36, 37, 39, 43, 50, 52], "monitor": [1, 4, 15, 18, 22, 26, 28, 29, 30, 31, 32, 36, 45, 61, 62, 63], "aid": 1, "howev": [1, 63], "thei": [1, 61], "analysi": [1, 24], "debug": [1, 4, 8, 26, 43, 62], "allow": [1, 2], "hope": 1, "pleas": [1, 61], "check": [1, 7, 25, 26, 29, 30, 36, 61, 63], "modul": [1, 2, 60], "mininet": [2, 4, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 28, 29, 30, 32, 33, 34, 35, 36, 37, 39, 43, 45, 61, 62], "optic": [2, 4, 7, 14, 15, 16, 17, 19, 20, 21, 24, 26, 28, 32, 36, 37, 43, 45, 61, 62], "seek": 2, "expand": 2, "capabl": [2, 43], "cabl": [2, 19], "reconfigur": [2, 26], "drop": [2, 4, 21, 26, 28, 32, 36, 37, 39, 61, 63], "multiplex": [2, 24, 26, 39], "erbium": 2, "dope": 2, "amplifi": [2, 4, 12, 15, 18, 25, 26, 36, 37, 45, 49, 50, 52, 59, 61, 62, 63], "realist": [2, 61], "virtual": [2, 61], "real": [2, 19, 38, 62], "kernel": 2, "applic": 2, "code": [2, 24, 63], "vm": [2, 61], "cloud": 2, "nativ": [2, 63], "veri": [2, 14, 61, 63], "easi": [2, 38], "interact": 2, "api": [2, 4, 7, 14, 15, 38, 41, 42, 60, 62, 63], "custom": [2, 26], "share": 2, "other": [2, 4, 6, 45, 60, 61, 63], "deploi": 2, "hardwar": [2, 4, 7, 13, 39, 41, 61, 62], "teach": 2, "research": 2, "conveni": [2, 4, 19, 20, 36, 37, 61], "experi": 2, "p4": 2, "figur": [2, 26, 61, 62], "equival": 2, "illustr": 2, "goal": [2, 28, 32], "testb": [2, 4, 39, 62], "u": 2, "digit": 2, "twin": 2, "carri": 2, "environ": 2, "faster": 2, "time": [2, 29, 30, 61, 62], "fail": 2, "safe": 2, "origin": [2, 26, 36], "condit": 2, "repeat": 2, "error": [2, 26, 61], "abstract": [2, 4], "layer": [2, 26], "over": [2, 4, 24], "linux": [2, 61, 63], "o": 2, "python": [2, 38, 60, 61, 62, 63], "librari": 2, "variou": [2, 24], "devic": [2, 4, 61, 63], "propag": [2, 24, 26, 36], "user": [2, 61], "modifi": [2, 42, 61, 62], "insid": 2, "via": [2, 6, 38, 61], "algorithm": [2, 24, 28, 32, 61], "lightweight": 2, "cgroup": 2, "namespac": 2, "featur": [2, 19], "open": [2, 14, 28, 32, 59, 61, 63], "vswitch": [2, 28, 32], "veth": [2, 4], "pair": [2, 4, 16, 19, 20, 28, 32, 61], "northbound": 2, "overal": 2, "below": [2, 28, 32, 62], "page": [3, 60], "auto": 3, "mnoptic": [3, 60], "config_lroadmr": [3, 9, 23], "cosmostutori": [3, 9, 23], "dbgtest": [3, 9, 23], "lroadmr": [3, 9, 23], "nc_add_connect": [3, 9, 23], "roadm_with_amp": [3, 9, 23], "sigcommtutori": [3, 9, 23], "singlelink": [3, 9, 23, 63], "singleroadm": [3, 9, 17, 23], "sixnodestopo": [3, 9, 23, 62], "unilinear1": [3, 9, 20, 23], "unilinear2": [3, 9, 23], "unir": [3, 9, 23], "uniroadmchain": [3, 9, 23], "control_test_lum": [3, 23, 40], "control_test_mininet_rest": [3, 23, 40], "demo_control": [3, 23, 40], "demo_control_2": [3, 23, 40], "simulation_api": [3, 23, 40], "apsp": [3, 23, 28, 40, 61], "demo_2021": [3, 23, 40], "demo_hwtopo": [3, 23, 40], "demolib": [3, 19, 20, 21, 23, 37, 40, 61], "demolib_2021": [3, 23, 40], "fakecontrol": [3, 23, 40, 61], "hwtopo": [3, 23, 40], "lroadm": [3, 10, 11, 23, 35, 39, 40], "lumentum_netconf_api": [3, 6, 23, 40], "netconfserv": [3, 23, 40], "simpledemo": [3, 23, 40, 61], "cian_small_linear": [3, 23, 51], "cost239": [3, 23, 51], "deutsche_telekom": [3, 23, 51], "helper_func": [3, 23, 51], "linear_multiloc": [3, 23, 51], "linear_param": [3, 23, 51], "ofc_demo": [3, 23, 51], "ring_topologi": [3, 23, 51], "autoapi": 3, "repurpos": 4, "ov": [4, 38], "tclink": 4, "delai": 4, "simplic": 4, "assum": 4, "full": [4, 6, 19, 20, 21, 61, 62], "duplex": 4, "transpond": 4, "thes": 4, "am": [4, 45], "tx": [4, 26, 61], "rx": [4, 26, 61], "A": [4, 19, 20, 24, 26, 36, 37, 39, 41, 61], "downlink": [4, 19, 20, 21, 36, 37, 61], "colorless": 4, "directionless": 4, "simpleroadm": 4, "degre": [4, 19, 20, 21, 41], "two": [4, 14, 15, 19, 22, 24, 36, 49, 61, 63], "bidirect": [4, 10, 21, 36, 37, 52], "m": [4, 10, 24, 27, 29, 30, 50, 52], "001": [4, 27, 29, 30, 50, 52, 57], "opticalnet": 4, "__iter__": 4, "return": [4, 6, 10, 24, 25, 26, 28, 29, 30, 32, 36, 37, 38, 39, 42, 43, 45, 47, 48, 50, 52, 53, 54, 55, 57, 59, 61], "iter": [4, 36], "addmonitor": 4, "addlinkcompon": 4, "arg": [4, 10, 11, 19, 20, 24, 36, 37, 41, 43, 45], "kwarg": [4, 10, 19, 20, 24, 36, 37, 39, 41, 42, 43, 45], "restsetripplehandl": 4, "queri": [4, 45], "setgain": [4, 36, 45], "call": [4, 26, 38, 45, 59, 61, 63], "set_rippl": [4, 45], "amp_nam": 4, "rippl": [4, 45], "restsetgainhandl": 4, "setgaincmd": 4, "ampnam": [4, 36, 37], "hack": 4, "phymonitor": 4, "stand": 4, "wait": 4, "fals": [4, 16, 18, 19, 20, 24, 26, 29, 30, 36, 37, 38, 39, 43, 50, 52, 53, 54], "exec": 4, "true": [4, 24, 26, 29, 45, 50, 61], "intf": [4, 61], "intflist": 4, "intfnam": 4, "pexec": 4, "restmonitor": [4, 62], "osnr": [4, 26, 31, 36, 38, 61, 62, 63], "__str__": [4, 41], "str": 4, "physpan": 4, "length": [4, 24, 28, 29, 30, 32, 36, 37, 48, 50, 52], "amp": [4, 26, 29, 30, 36, 37, 49, 50, 52], "none": [4, 12, 16, 18, 24, 25, 26, 29, 30, 38, 41, 42, 43, 50, 52, 54, 58, 61, 63], "usabl": [4, 61], "amplif": [4, 26], "switchbas": 4, "dpid": 4, "listenport": [4, 38], "innamespac": 4, "isswitch": 4, "batch": 4, "phyparam": 4, "ovsswitch": 4, "modelclass": 4, "dpidbas": 4, "4096": 4, "cmd": [4, 38], "defaultdpid": 4, "static": [4, 10, 24, 25, 26, 28, 32, 36, 37, 39, 42, 47, 48, 49, 52, 53, 54, 56], "restportsdict": 4, "construct": [4, 36, 37], "dict": [4, 26, 28, 29, 30, 32, 42, 43, 45], "restresethandl": 4, "handler": [4, 45], "overrid": 4, "bank": 4, "some": [4, 15, 19, 27, 29, 30, 36, 37, 42, 43, 61, 63], "blockcooki": 4, "195952365": 4, "maketransceiv": 4, "txid": 4, "helper": [4, 48, 52, 61], "start": [4, 26, 33, 34, 36, 43, 45, 60, 61, 63], "_control": 4, "without": [4, 6, 19, 22, 61], "clear": [4, 45], "configtx": 4, "txnum": 4, "index": [4, 24, 26, 59, 60, 61], "number": [4, 21, 26, 47, 52, 53, 54, 55, 61], "restturnonhandl": 4, "restconnecthandl": 4, "wdminport": 4, "receivercallback": 4, "inport": [4, 6, 11, 31, 43], "signalinfodict": 4, "callback": [4, 26], "phy": 4, "when": [4, 61], "block": [4, 11, 26, 42, 61], "unblock": 4, "vlan": 4, "field": 4, "lambda": 4, "ruletupl": 4, "outport": [4, 6, 11, 31, 43], "hashabl": 4, "tupl": [4, 24, 26], "phyreset": 4, "phyinstal": 4, "phyremov": 4, "restruleshandl": 4, "request": [4, 29, 38, 45], "restcleanmehandl": 4, "dpreset": 4, "initi": [4, 29], "dpflow": 4, "action": [4, 38], "flow": [4, 45], "dpinstal": 4, "dpremov": 4, "simplifi": [4, 24, 61], "direct": [4, 16, 18, 19, 25, 26, 61], "bidirection": [4, 27, 35], "ad": [4, 15, 24, 25, 26, 61, 63], "while": [4, 61], "east": 4, "transit": 4, "west": 4, "3": [4, 19, 20, 21, 22, 28, 29, 32, 36, 37, 44, 52, 53, 54, 61, 63], "southeast": 4, "4": [4, 6, 10, 20, 26, 27, 29, 30, 36, 37, 39, 53, 61, 63], "southwest": 4, "updat": [4, 7, 24, 26, 29, 30, 43, 62, 63], "localchannel": 4, "passchannel": 4, "tabl": 4, "opticalintf": 4, "tcintf": 4, "isinput": 4, "input": [4, 25, 26, 43, 59, 61, 62], "isoutput": 4, "output": [4, 25, 26, 43, 59, 61, 62], "opticalin": 4, "unidirect": [4, 7, 10, 13, 19, 20, 21, 22, 39, 61], "opticalout": 4, "src": [4, 6, 7, 10, 13, 19, 20, 21, 28, 29, 30, 32, 36, 37, 39], "dst": [4, 6, 7, 10, 13, 19, 20, 21, 28, 29, 30, 36, 37, 39], "boost1": 4, "boost2": 4, "natur": 4, "By": [4, 62], "revers": 4, "each": [4, 6, 17, 19, 20, 24, 26, 28, 32, 36, 37, 61, 62], "term": 4, "amplfier": 4, "phylink1": 4, "phylink2": 4, "_parsearg": 4, "pars": [4, 42, 43], "_parsespan": 4, "n": [4, 6, 10, 21, 28, 32, 36, 37, 55], "canon": [4, 32], "wdmn": 4, "unidirectionalopticallink": 4, "unilink": 4, "amplifierpair": 4, "phyamplifi": 4, "phyamp1": 4, "phyamp2": 4, "combsourc": 4, "comb": [4, 39], "sourc": [4, 24, 25, 26, 29, 30, 39, 43, 63], "compon": [4, 26, 59, 61, 63], "mux": [4, 39], "half": [4, 41], "onli": [4, 25, 26, 45, 61], "opaqu": 4, "background": 4, "traffic": [4, 29, 30, 62], "4100": 4, "lineout": [4, 19, 20, 43], "4201": [4, 43], "addtermin": [4, 19, 20], "linetermin": [4, 26, 61], "cleanoptlink": 4, "disableipv6": 4, "disabl": 4, "ipv6": 4, "avoid": [4, 19, 20, 26, 61], "annoi": 4, "router": [4, 21, 28, 32, 36, 37, 45, 61], "solicit": 4, "dumpnet": 4, "dump": [4, 6, 61, 63], "formatsign": 4, "signalpow": 4, "dumplinkpow": 4, "twotransceivertopo": 4, "wai": [4, 19, 61], "amp1": [4, 15, 16, 61, 63], "50": [4, 36, 37, 42, 53], "amp2": [4, 15, 16, 61, 63], "twotransceivertest": 4, "ripple_funct": 5, "fibre_spectral_attenu": 5, "config_lroadrm": 6, "lumentumr": [6, 10], "allocchannel": 6, "map": [6, 35], "ch": [6, 7, 13, 26, 36, 43], "mesh": [6, 19, 20, 21, 36, 37, 61], "genconnect": 6, "loss": [6, 11, 26, 42], "netconf": [6, 11, 35, 38, 39, 41, 43], "string": [6, 12, 18, 19, 20, 24, 26, 36, 42, 43, 50, 52], "chmap": 6, "dedic": 6, "collis": 6, "configroadm": 6, "configtermin": 6, "configswitch": 6, "inbound": 6, "outbound": 6, "config": [6, 10, 11, 12, 14, 15, 16, 19, 20, 21, 43, 45, 61, 62, 63], "dumpchmap": 6, "mini": [7, 13], "http": [7, 13, 38, 59, 63], "wiki": [7, 13], "lab": [7, 13], "mininetopticaltutorial1": 7, "usernam": [7, 10, 13, 39, 41, 42, 43], "password": [7, 10, 13, 39, 41, 42, 43], "sslkeyfil": [7, 10, 13, 43], "testcert": [7, 10, 13], "fakeserv": [7, 10, 13, 43], "kei": [7, 10, 13, 24, 28, 32, 43], "34": [7, 61], "ch2": [7, 61], "60": 7, "tutorialtopo": [7, 13], "roadm4": 7, "roadm1": 7, "roadm2": 7, "22km": 7, "roadm3": 7, "tor1": 7, "tor2": 7, "tor3": 7, "server1": 7, "server2": 7, "server3": 7, "wdmlink": [7, 10, 13, 19, 20, 36, 37, 39], "config0": 7, "saniti": 7, "intern": [7, 10, 26], "arp": [7, 36, 61], "ip": [7, 14, 21, 35, 36, 37, 38, 61], "send": [7, 36, 61], "gratuit": [7, 36], "ring": [10, 17, 21, 36, 37, 61, 62], "admin": [10, 41], "lumentumbas": 10, "lumentum": [10, 29, 39, 41, 42, 43], "hn": 10, "sn": 10, "tn": 10, "rn": 10, "ethbas": 10, "hostport": 10, "200": [10, 29, 30], "txbase": 10, "100": [10, 29, 30, 36, 63], "rxbase": 10, "listenportbas": [10, 36, 37, 38], "6653": [10, 36, 37, 38], "nodenam": [10, 36], "addnetworknod": 10, "addnodelink": 10, "unidrect": 10, "txcount": [10, 13, 21, 36, 37, 39], "16": [10, 26, 29, 61], "hard": 11, "wire": 11, "ipport": 11, "connection_id": [11, 42], "startfreq": 11, "endfreq": 11, "rpc": [11, 43], "result": [11, 42, 61, 63], "new": [11, 26, 43], "64": 12, "67": 12, "preamp": [12, 18, 26, 42, 43, 50, 52], "72": 12, "74": 12, "s1": [12, 15, 16, 36, 37, 61, 63], "s2": [12, 15, 16, 36, 37, 61, 63], "add_amp": [12, 18, 50, 52], "node_nam": [12, 18, 50, 52], "type": [12, 18, 24, 25, 50, 52, 61, 62], "gain_db": [12, 18, 26, 50, 52], "int": [12, 18, 26, 42, 50, 52], "float": [12, 18, 26, 29, 30, 50, 52, 57], "singleroadmtopo": [12, 16], "sigcomm22": 13, "tbd": 13, "netconfportbas": [13, 35, 39, 41, 43], "1830": [13, 35, 39, 41, 43], "95": 13, "61": 13, "comb_src_rang": 13, "comb1_pow": 13, "comb2_pow": 13, "comb1": 13, "rdm1co1": 13, "10km": 13, "rdm1lg1": 13, "rdm2lg1": 13, "32km": 13, "rdm2co1": 13, "comb2": 13, "swda_co1": 13, "swda_lg1": 13, "srv1_co1": 13, "srv1_lg1": 13, "srv2_lg1": 13, "workshop": 13, "sigcomm2022": 13, "mininetopt": 13, "close": 14, "simplest": [14, 63], "fulli": [14, 63], "To": [14, 15, 62, 63], "anoth": [14, 61, 62, 63], "window": [14, 61, 62, 63], "bash": 14, "prompt": [14, 36, 61], "replac": 14, "mn": [14, 15, 63], "slightli": [15, 42, 63], "more": [15, 19, 36, 61, 63], "complic": [15, 19, 21, 63], "complex": [15, 19, 63], "segment": [15, 29, 30, 50, 52, 63], "compens": [15, 29, 30, 36, 37, 50, 52, 63], "rather": [15, 22, 38, 61, 62, 63], "than": [15, 19, 20, 22, 38, 61, 63], "directli": [15, 63], "singlelinktopo": [15, 63], "three": [16, 17, 36, 37], "y": [16, 17, 61], "talk": [16, 17, 61], "h3": [16, 17, 36, 37, 61], "s3": [16, 36, 37, 61], "r2": [16, 36, 37, 48, 50, 52], "50km": [16, 36, 37, 48, 52, 61], "plotnet": [16, 17, 18, 61], "outfil": [16, 17, 18], "png": [16, 17, 18, 36, 61], "layout": [16, 18], "circo": [16, 18], "colormap": [16, 18], "linksperpair": 16, "5": [16, 26, 27, 29, 35, 36, 47, 61], "plot": [16, 17, 18, 36, 60, 61], "graph": [16, 17, 18, 28, 29, 30, 62], "max": [16, 29], "limit": [16, 24], "sixroadmtopo": 17, "six": [17, 36, 62], "6": [17, 24, 26, 29, 36, 37, 55, 61], "img": 18, "monitor_mod": [18, 26, 58], "multiroadmtopo": 18, "operational_pow": [18, 26], "get_monitor_pow": 18, "confignet": [18, 22], "split": [19, 20], "uplink": [19, 20, 21, 36, 37, 61], "what": [19, 61], "want": [19, 26, 61, 62, 63], "interconnect": 19, "order": [19, 61, 63], "loop": [19, 26, 61], "bug": [19, 61], "doe": [19, 25, 26, 61, 62], "nice": 19, "minim": [19, 61], "expens": 19, "altern": [19, 39, 61], "simpler": [19, 20, 44], "vertic": 19, "bi": 19, "opticaltopo": [19, 20, 36, 37], "node1": [19, 20, 29, 30, 45, 61], "node2": [19, 20, 29, 30, 45, 61], "ethlink": [19, 20, 36, 37], "clarifi": [19, 20, 36, 37], "alia": [19, 20, 36, 37], "addroadm": [19, 20], "unilineartopo": 19, "opposit": [19, 61], "linein": [19, 20, 43], "addport": [19, 20, 39, 41], "dropport": [19, 20, 39, 41], "nodecount": [19, 20, 21, 39], "specifi": [19, 20, 21, 26, 29, 30, 36, 37, 45, 60, 61, 62], "count": [19, 20, 32], "root": [19, 20, 61], "star": [19, 20], "strategi": [19, 20], "assign": [19, 20, 29, 30, 61], "conflict": [19, 20, 26], "everyth": [19, 20, 61], "eastbound": [19, 20], "westbound": [19, 20], "opticalcli": [19, 20, 21, 36, 63], "do_config": [19, 20, 21], "_line": [19, 20, 21, 36], "somewhat": [20, 21, 41], "becaus": [20, 21, 61], "middl": [20, 61, 63], "endpoint": [20, 32, 61], "still": [20, 63], "degr": 20, "unilineartopo2": 20, "eastin": 20, "eastout": 20, "westin": 20, "westout": 20, "j": [20, 59], "uniringtopo": 21, "parametr": 21, "r": 21, "fwd": 21, "configopticalnet": 21, "configpacketnet": 21, "linuxrout": [21, 61], "attach": 21, "subnet": [21, 36, 37, 61], "basic": [21, 61, 63], "32": [21, 61], "e": [21, 24, 26, 61, 62], "chain": 22, "intermedi": 22, "mainli": 22, "someth": [22, 61], "although": [22, 61], "re1": 22, "ren": 22, "rwn": 22, "rw1": 22, "roadmcount": 22, "spantupl": 24, "srs_effect_model": 24, "comput": [24, 26], "taken": 24, "zirngibl": 24, "analyt": 24, "raman": 24, "effect": [24, 26], "massiv": 24, "divis": 24, "1998": 24, "equat": [24, 26], "10": [24, 26, 29, 36, 37, 39, 54, 63], "most": 24, "accur": 24, "uniform": 24, "load": 24, "zirngibl_general_model": 24, "sr": [24, 46], "propos": 24, "7": [24, 61], "non": [24, 47, 52, 53, 54], "sylvestre_srs_model": 24, "induc": 24, "tilt": [24, 42], "arbitrarili": 24, "larg": 24, "sylvestr": 24, "et": 24, "al": [24, 42], "2005": 24, "bigo_srs_model": 24, "paper": 24, "experiment": [24, 28, 32], "investig": 24, "stimul": 24, "scatter": 24, "infrastructur": 24, "bigo": 24, "1999": 24, "src_node": [24, 25, 26], "dst_node": [24, 25, 26], "src_out_port": [24, 25], "dst_in_port": [24, 25], "boost_amp": [24, 25], "debugg": [24, 26, 50, 53, 54], "refer": [24, 26, 60, 61], "futur": 24, "must": 24, "srs_model": [24, 25, 50, 54], "describ": [24, 25, 26, 61, 62], "__repr__": [24, 26, 38], "represent": [24, 26], "remove_optical_sign": [24, 26], "optical_sign": [24, 26], "include_optical_signal_in": [24, 26], "ase_nois": [24, 26], "nli_nois": [24, 26], "tup_kei": 24, "opticalsign": [24, 26], "level": [24, 26, 31, 61, 62], "ase": [24, 26, 61, 62], "nois": [24, 26], "nli": [24, 26, 61, 62], "compos": 24, "include_optical_signal_out": [24, 26], "optical_signals_out": 24, "is_last_port": [24, 26], "safe_switch": [24, 26], "across": 24, "boolean": [24, 26, 52], "fibre_typ": 24, "smf": 24, "20": [24, 26, 29, 42, 61], "id": [24, 26, 31, 61], "anonym": 24, "get_fibre_spectral_attenu": 24, "retriev": [24, 26, 62], "wdl": 24, "fibr": 24, "attenu": [24, 26, 42], "signal_index": [24, 26, 59], "beta2": 24, "ref_wavelength": 24, "55e": 24, "06": [24, 57], "dispers": 24, "enter": 24, "p": [24, 36, 37, 57], "nm": [24, 57], "translat": 24, "gnpy": 24, "numpi": 24, "arrai": [24, 26], "1550nm": 24, "in_port": [24, 26], "set_input_port": [24, 26], "set_output_port": [24, 26], "output_nonlinear_nois": 24, "structur": [24, 26], "gn_model": 24, "nonlinear": 24, "interfer": 24, "carrier": [24, 26], "eq": [24, 26], "120": 24, "arxiv": 24, "1209": 24, "0394": 24, "carrier_nli": 24, "amount": 24, "w": [24, 57], "psi_factor": 24, "interfering_carri": 24, "asymptotic_length": 24, "calcul": [24, 26, 32], "123": 24, "add_lt": 25, "lt": [25, 26], "autom": 25, "add_roadm": 25, "add_amplifi": 25, "amplifier_typ": [25, 26], "add_link": 25, "uni": 25, "destin": [25, 28, 29, 30, 32], "boost_amplif": 25, "keyword": [25, 50, 54], "eg": [25, 50, 54], "wd_loss": [25, 50, 54], "etc": [25, 36, 37, 50, 54], "find_link_and_out_port_from_nod": 25, "consid": [25, 26], "multipl": [25, 26, 61], "find_link_and_in_port_from_nod": 25, "find_link_from_nod": 25, "find_out_port_from_link": 25, "input_port_bas": 26, "output_port_bas": 26, "output_port": [26, 42], "input_port": [26, 42], "uid": 26, "out_port": 26, "remove_signal_from_out_port": 26, "port_out": 26, "reset_compon": 26, "dynam": 26, "human": 26, "readabl": 26, "monitor_queri": 26, "get_optical_sign": 26, "get": [26, 28, 32, 38, 43, 61, 63], "reset_transceiv": 26, "disassoci": 26, "add_transceiv": 26, "t_name": 26, "spectrum": [26, 62], "existing_transceiv": 26, "set_modulation_format": 26, "modulation_format": 26, "format": [26, 32, 36, 61], "16_qam": 26, "tx_config": 26, "operational_power_dbm": 26, "assoc_tx_to_channel": 26, "associ": 26, "previous": 26, "creation": [26, 49], "assoc_channel": 26, "disassoc_tx_to_channel": 26, "transmitt": 26, "assoc_rx_to_channel": 26, "channel_id": 26, "disassoc_rx_to_channel": 26, "turn_off": 26, "ports_out": 26, "gosnr": [26, 28, 31, 32, 46, 61, 62, 63], "baud_rat": 26, "Will": 26, "verifi": [26, 61], "receiver_callback": 26, "signaldictinfo": 26, "tr_id": 26, "operation_pow": 26, "channel_spacing_nm": 26, "1e": [26, 57], "09": [26, 42, 57], "channel_spacing_h": 26, "50000000000": 26, "bandwidth": 26, "99792458": 26, "1000000000": 26, "16qam": 26, "bits_per_symbol": 26, "symbol_r": 26, "32000000000": 26, "rx_threshold_db": 26, "assoc_optical_sign": 26, "bit": [26, 29, 46], "symbol": [26, 46], "rate": [26, 46], "threshold": [26, 28, 31, 32, 46], "label": [26, 61], "spectrum_band_init_nm": 26, "1567": 26, "132556194459": 26, "spectrum_band_init_h": 26, "191300000000000": 26, "repr": [26, 38], "assoc_loc_in": 26, "loc": 26, "locat": [26, 61], "perform": 26, "mw": [26, 57], "launch": [26, 31, 61, 62, 63], "assoc_loc_out": 26, "preserv": 26, "switchrul": 26, "insertion_loss_db": 26, "reference_power_dbm": 26, "common": [26, 61], "That": 26, "wsss": 26, "exist": [26, 61], "remove_switch_rul": 26, "rule_in_port": 26, "rule_signal_index": 26, "rule_out_port": 26, "switch_tabl": 26, "check_switch_rul": 26, "signal_indic": 26, "equal": 26, "frequenc": [26, 42, 62], "so": [26, 28, 32, 61], "delet": [26, 27, 29, 30, 31], "alloc": [26, 32], "indic": [26, 61], "install_switch_rul": 26, "access": [26, 59, 60], "incom": 26, "update_switch_rul": 26, "new_port_out": 26, "unecessari": 26, "checkup": 26, "can_switch": 26, "delete_switch_rul": 26, "Then": [26, 61, 62], "power_diverg": 26, "differ": [26, 48, 52, 61, 62, 63], "get_in_port": 26, "possibl": [26, 61, 63], "trigger": 26, "whether": [26, 61], "feasibl": 26, "can_switch_from_lt": 26, "come": 26, "prepar": 26, "relai": 26, "unless": 26, "task": 26, "prepropag": 26, "port_out_to_port_in_sign": 26, "hash": 26, "compute_carrier_attenu": 26, "total": [26, 61], "within": 26, "process_att": 26, "one": [26, 36, 61], "given": [26, 31, 36, 37, 61, 62, 63], "continu": [26, 28, 32], "set_boost_gain": 26, "fast_switch": 26, "set_preamp_gain": 26, "set_reference_pow": 26, "ref_power_dbm": 26, "ch_index": 26, "act": 26, "upon": [26, 59], "similar": [26, 61], "voa": [26, 31], "noise_figur": 26, "91": 26, "noise_figure_funct": 26, "wdg_id": [26, 50, 54], "reset_gain": 26, "power_excursions_flags_off": 26, "load_wavelength_dependent_gain": 26, "file": [26, 30, 59, 60], "top": [26, 63], "set_ripple_funct": 26, "wavelength_dependent_gain": 26, "get_wavelength_dependent_gain": 26, "wdg": 26, "get_noise_figur": 26, "constant": 26, "establish": [26, 61], "nf": 26, "90": [26, 29, 30], "output_amplified_pow": 26, "nli_compens": 26, "appli": 26, "date": 26, "stage_amplified_spontaneous_emission_nois": 26, "gumast": 26, "antoni": 26, "dwdm": 26, "engin": 26, "solut": 26, "cisco": 26, "press": 26, "2003": 26, "compute_power_excurs": 26, "balanc": 26, "respect": [26, 61], "mean": [26, 61], "excurs": 26, "set_gain": 26, "mock_amp_gain_adjust": 26, "new_gain": 26, "could": [26, 61], "fixm": 26, "modify_mod": 26, "chang": [26, 62, 63], "get_list_osnr": 26, "opm": 26, "get_dict_osnr": 26, "dictionari": [26, 62], "get_list_gosnr": 26, "get_dict_gosnr": 26, "get_ber": 26, "ber_method": 26, "biterrorr": 26, "f": [26, 61], "forghieri": 26, "doi": 26, "1109": 26, "jlt": 26, "1012": 26, "2189198": 26, "get_dict_pow": 26, "get_pow": 26, "get_dict_ase_nois": 26, "ASE": 26, "get_ase_nois": 26, "get_dict_nli_nois": 26, "get_nli_nois": 26, "get_osnr": 26, "get_gosnr": 26, "signaltrac": 26, "routin": 26, "trace": [26, 36], "pathentri": 26, "get_port": 26, "in_out": 26, "signal_path": 26, "path": [26, 27, 28, 29, 30, 32, 36, 38, 42, 61], "miss": 26, "channel_path": 26, "match": [26, 61], "path_stat": 26, "along": [26, 27, 29, 30], "nodeaudit": 26, "wip": 26, "audit": 26, "check_roadm_propag": 26, "report": [26, 43, 61], "check_link_propag": 26, "num_wav": [27, 29, 30], "40": [27, 29, 63], "num_nod": [27, 29, 30], "thruport": 27, "add_drop": 27, "lumentum_netconf_ag": 27, "alllumnam": 27, "l1": [27, 39], "l2": [27, 39, 61], "l3": [27, 39], "l4": [27, 39], "l5": [27, 39], "l6": [27, 39], "nodelink_to_lumentumlink": 27, "lumentumname_to_ip": 27, "lumentum_control_netconf": 27, "installpath": [27, 28, 32], "lightpathid": 27, "lightpath": [27, 28, 29, 30, 32, 35, 61], "uninstallpath": [27, 28], "cleanallroadm": 27, "channel_monitor": 27, "control_test": [27, 35], "r4": [27, 35], "shortest": [28, 32], "demonstr": [28, 32, 44, 62], "elabor": [28, 32], "rebalanc": [28, 32], "extrem": [28, 32, 38, 61], "everi": [28, 32, 36, 61, 62], "uniqu": [28, 32], "don": [28, 32, 61], "even": [28, 32, 61], "dijkstra": [28, 32], "bf": [28, 32], "fine": [28, 32], "mininet_control_rest": 28, "getosnr": 28, "fetchosnr": [28, 38], "monitorkeyandlightpath": 28, "monitorkei": [28, 32], "sort": [28, 32], "getmonitorkei": 28, "src_id": 28, "dst_id": 28, "spanid": 28, "monitorosnrbykei": 28, "monitorosnr": [28, 32], "gosnrthreshold": [28, 32], "buildgraph": 28, "adjac": [28, 29, 30, 32], "neighbor": [28, 29, 30, 32], "configuretermin": [28, 32], "ethn": [28, 32], "wdmm": [28, 32], "turnontermin": 28, "configurepacketswitch": [28, 32], "single_link_test": [29, 30], "version": [29, 30, 42, 43, 63], "explicit": [29, 30], "controller_lum": [29, 30], "controller_mininet": [29, 30], "init_control": 29, "mininet_en": [29, 30], "link_cap": [29, 30], "down_link_cap": [29, 30], "cpri_cap": [29, 30], "netlink": [29, 30], "netlink_info": [29, 30], "traffic_info": [29, 30], "lightpath_info": [29, 30], "src_dst_to_lightpath": [29, 30], "path_ch_to_lightpath": [29, 30], "traffic_id": [29, 30], "lightpath_id": [29, 30], "name_roadm": [29, 30], "up_traf_time_list": [29, 30], "up_traf_id_set": [29, 30], "up_lightpath_time_list": [29, 30], "up_lightpath_id_set": [29, 30], "all_channel": [29, 30], "ru_roadm": [29, 30], "du_roadm": [29, 30], "roadm_traf": [29, 30], "name_termin": [29, 30], "roadm_to_termin": [29, 30], "terminal_to_roadm": [29, 30], "roadm_to_id": [29, 30], "terminal_to_id": [29, 30], "roadmphynetwork": [29, 30], "mininet_installpath": [29, 30], "intal": [29, 30], "mininet_uninstallpath": [29, 30], "mininet_setuplightpath": [29, 30], "mininet_teardownlightpath": [29, 30], "mininet_monitorlightpath": [29, 30], "lumentum_installpath": [29, 30], "lumentum_uninstallpath": [29, 30], "lumentum_setuplightpath": [29, 30], "lumentum_teardownlightpath": [29, 30], "lumentum_monitorlightpath": [29, 30], "linkspec": [29, 30, 45], "getlink": [29, 30], "netgraph": [29, 30], "findrout": [29, 30], "k": [29, 30], "waveavail": [29, 30], "waveselect": [29, 30], "install_lightpath": [29, 30], "up_tim": [29, 30], "down_tim": [29, 30], "inf": [29, 30], "databas": [29, 30], "check_lightpath_for_traf": [29, 30], "provis": [29, 30], "lighpath": [29, 30], "cpri": [29, 30], "traf": [29, 30], "update_lightpath_down_tim": [29, 30], "teardown": [29, 30], "traf_to_lightpah_assign": [29, 30], "traf_id": [29, 30], "install_traf": [29, 30], "cur_tim": [29, 30], "rrh": [29, 30], "bbu": [29, 30], "uninstall_lightpath": [29, 30], "traf_to_lightpath_releas": [29, 30], "trafficpattern": 29, "pattern": [29, 36], "24": [29, 36, 37, 61], "hour": 29, "normal": 29, "resid": 29, "area": 29, "entertain": 29, "offic": 29, "22": [29, 61, 63], "transport": 29, "37": 29, "29": [29, 61], "39": 29, "23": [29, 61], "11": [29, 42, 61], "28": [29, 61], "33": [29, 61], "gbp": 29, "9600": 29, "tower": 29, "maximum": 29, "wireless": 29, "8": [29, 61], "byte": 29, "min": 29, "12": [29, 57], "6800": 29, "g": [29, 61, 62], "183": 29, "second": [29, 62], "traffictest": 29, "testmininet": [29, 30], "mininet_monitordiffer": 30, "mininet_optical_simu_api": 31, "roadm_installswitchrul": 31, "ruleid": 31, "channelid": 31, "roadm_deleteswitchrul": 31, "roadm_voapowerlevel": 31, "terminal_configchannelpow": 31, "congifur": 31, "terminal_configchannel": 31, "terminal_turnonchannel": 31, "terminal_turnoffchannel": 31, "off": 31, "terminal_reset_threshold": 31, "roadm_monitor_all_pow": 31, "roadm_monitor_all_osnr": 31, "roadm_monitor_all_gosnr": 31, "roadm_monitor_channel_data": 31, "adjacencydict": 32, "allocatechannel": 32, "entriestorerout": 32, "badlink": 32, "entri": [32, 36, 43], "rerout": 32, "failur": 32, "channelport": 32, "installrout": 32, "countsign": 32, "channelpair": 32, "averag": 32, "lroadmtest": 35, "fixipmap": 35, "nametoip": 35, "fix": [35, 48, 52], "cross": [36, 37], "pop": [36, 37, 61], "do_sign": 36, "formatsigst": 36, "printsign": 36, "printnodesign": 36, "do_linksign": 36, "linksign": 36, "_fmtsigstat": 36, "_fmtpathentri": 36, "do_sigtrac": 36, "sigtrac": 36, "_printpathst": 36, "do_sigpath": 36, "sigpath": 36, "do_monitor": 36, "printosnr": 36, "do_osnr": 36, "minlength": 36, "do_span": 36, "do_plot": 36, "save": [36, 61], "do_propag": 36, "obsolet": 36, "manual": 36, "do_amppow": 36, "do_arp": 36, "do_checkroadm": 36, "checkroadm": 36, "do_checklink": 36, "checklink": 36, "do_reset": 36, "do_setgain": 36, "usag": [36, 37, 62], "spanspec": [36, 37], "ampspec": [36, 37], "ampparam": [36, 37], "linearroadmtopo": [36, 37, 61], "r3": [36, 37, 62], "eth0": [36, 37, 61, 63], "eth1": [36, 37, 61, 63], "eth2": [36, 37, 61, 63], "wdm3": [36, 37, 61], "wdm4": [36, 37, 61], "wdm1": [36, 37, 61], "wdm2": [36, 37, 61, 63], "intfnum": [36, 37], "d": [36, 37, 61], "buildpop": [36, 37], "spanlength": [36, 37], "spancount": [36, 37], "prefix": [36, 37], "ampn": [36, 37], "configurelinearnet": [36, 37, 61], "packetonli": [36, 37], "linearroadmtest": [36, 37], "demotopo": [36, 37, 61], "pop2": [36, 37], "pop4": [36, 37], "pop1": [36, 37], "pop6": 36, "pop3": [36, 37], "pop5": 36, "addpoplink": [36, 37], "four": [36, 37], "intend": [38, 39], "exercis": [38, 61], "gnmi": 38, "ofswitchproxi": 38, "127": [38, 59, 63], "ofctl": 38, "dpctl": 38, "verbos": 38, "remot": [38, 61], "restproxi": 38, "baseurl": 38, "nodeproxi": 38, "fetch": 38, "switchproxi": 38, "terminalproxi": 38, "roadmproxi": 38, "fetchnod": 38, "fetchlink": 38, "fetchrul": 38, "fetchport": 38, "2021": 39, "lumentumlinear": 39, "mimic": 39, "mirror": 39, "hostnam": 39, "adjust": [39, 45, 63], "configcomb": 39, "chbase": 39, "compat": 41, "correspond": [41, 61], "netconfport": 41, "author": 42, "jiakai": 42, "yu": 42, "jiakaiyu": 42, "email": 42, "arizona": 42, "edu": 42, "2019": 42, "03": 42, "last": [42, 63], "2020": 42, "08": 42, "bl": 42, "2022": 42, "xmltodict": 42, "xml": 42, "superus": 42, "sup": 42, "9user": 42, "ip_addr": 42, "wssconnect": 42, "start_freq": 42, "end_freq": 42, "wssconnectionstatu": 42, "input_pow": 42, "output_pow": 42, "ne": 42, "chassi": 42, "card": 42, "classmethod": 42, "from_connection_detail": 42, "connection_detail": 42, "lookup": 42, "tree": [42, 61, 63], "lookupstr": 42, "edfa_statu": 42, "statu": 42, "als_dis": 42, "edfa_config": 42, "ctrl_mode": 42, "gain_mod": 42, "target_pow": 42, "wss_add_connect": 42, "wss_delete_connect": 42, "module_id": 42, "wss_get_connect": 42, "freqrangeghz": 42, "rang": 42, "startghz": 42, "endghz": 42, "gen_dwdm_connect": 42, "channel_spac": 42, "channel_width": 42, "ghz": 42, "lumentum_netconf": 42, "_configwss": 42, "node_ip": 42, "conn_id": 42, "parseconnect": 42, "wss_info": 42, "_wssmonitor": 42, "todo": 43, "improv": 43, "5101": 43, "edfansmap": 43, "connnsmap": 43, "nsmap": 43, "sslkeyfiledefault": 43, "xmlstring": 43, "atre": 43, "lxml": 43, "confign": 43, "parseconn": 43, "conn": 43, "dn": 43, "netconfag": 43, "nc_append_cap": 43, "cap": 43, "rpc_get": 43, "session": 43, "filter_or_non": 43, "rpc_get_config": 43, "source_elm": 43, "rpc_edit_config": 43, "updateconnect": 43, "rpc_disable_": 43, "rpc_remove_all_connect": 43, "rpc_delete_connect": 43, "delete_connection_dn": 43, "add_config": 43, "add_edfa": 43, "findinputpow": 43, "findoutputpow": 43, "add_connect": 43, "collect": 43, "runtestserv": 43, "interroadmlink": 45, "terminallink": 45, "routerlink": 45, "lookupnod": 45, "nodehandl": 45, "handlernam": 45, "monitorhandl": 45, "disconnect": 45, "cleanm": 45, "quiethandl": 45, "client_address": 45, "wsgiref": 45, "simple_serv": 45, "wsgirequesthandl": 45, "quiet": 45, "log_request": 45, "accept": 45, "send_respons": 45, "sensit": 46, "decibl": 46, "rx_threshold": 46, "bp": 46, "ciansmalllinear": 47, "op": [47, 48, 49, 52, 53, 54, 55], "integ": [47, 52, 53, 54, 55], "build_span": [48, 50, 52], "total_len": 48, "those": [48, 52], "build_link": [48, 50, 52], "cost239topologi": 48, "deutschetelekom": 49, "nomenclatur": 49, "convent": 49, "lt_": 49, "roadm_": 49, "l_": 49, "s_": 49, "boost_": 49, "inlin": 49, "span_no": [50, 53, 54], "span_length": 50, "port_no": 50, "last_ok": 50, "lineartopologi": [52, 53, 54], "power_dbm": [53, 54], "span_length_km": [53, 54], "hop_no": [53, 54], "signal_no": [53, 54], "ringtopologi": 56, "db_to_ab": 57, "db_valu": 57, "convert": 57, "absolut": 57, "abs_to_db": 57, "absolute_valu": 57, "abs_to_dbm": 57, "299792458": 57, "cm": 57, "01": 57, "um": 57, "1000": 57, "thz": [57, 62], "1000000000000": 57, "pi": 57, "h": [57, 62], "plot_power_vs_wavelength": 58, "monitor_nam": 58, "dash": 59, "react": 59, "flask": 59, "pip": [59, 63], "cytoscap": 59, "visualize_topologi": 59, "8050": 59, "browser": 59, "extract_pow": 59, "extract": 59, "thread": 59, "welcom": [60, 63], "overview": [60, 61], "directori": [60, 63], "subcompon": 60, "walkthrough": [60, 62], "congratul": 60, "architectur": 60, "metric": 60, "search": 60, "pure": 61, "explain": 61, "your": [61, 62, 63], "find": [61, 63], "due": 61, "fast": 61, "startup": 61, "eas": 61, "pycharm": 61, "doesn": [61, 63], "privileg": 61, "three_ring_topologi": 61, "stuck": 61, "monitoring_gosnr_vs_pow": 61, "ringtest": 61, "bear": 61, "mind": 61, "neither": 61, "answer": 61, "posit": 61, "indistinct": 61, "begin": 61, "appropri": 61, "lt1": 61, "lt6": 61, "ex": 61, "try": [61, 63], "sequenc": 61, "lt2": 61, "rearrang": 61, "catch": 61, "THE": 61, "destroi": 61, "00": 61, "31": 61, "502684964557986": 61, "176061337796398": 61, "26": 61, "314628272797336": 61, "015839898466922": 61, "13611249709385": 61, "304363233906848": 61, "60659223643803": 61, "00556583390794": 61, "21": 61, "543462282662198": 61, "06605464395392": 61, "635968107119602": 61, "244661874079043": 61, "19": 61, "931195226498627": 61, "596307147424525": 61, "28540409149395": 61, "99527882336643": 61, "758083090421028": 61, "50016560987458": 61, "25671038540936": 61, "026181282510155": 61, "50268137427075": 61, "30": 61, "176059668755695": 61, "31462718556177": 61, "27": 61, "01583909226315": 61, "13611183872073": 61, "304362690284655": 61, "606591773502963": 61, "00556543080363": 61, "543461920246425": 61, "06605431926585": 61, "635967813044893": 61, "244661605342294": 61, "931194976475382": 61, "596306915956195": 61, "285403876016776": 61, "995278621813668": 61, "75808289958113": 61, "500165430038248": 61, "25671021537687": 61, "026181121267854": 61, "35": 61, "502675684055035": 61, "176057023505756": 61, "314625462410078": 61, "01583781451658": 61, "13611079526985": 61, "304361828701694": 61, "60659103980043": 61, "00556479192643": 61, "543461345856198": 61, "06605380467": 61, "635967346967934": 61, "244661179423296": 61, "931194580215273": 61, "596306549103637": 61, "285403534508482": 61, "99527830237409": 61, "758082597120293": 61, "500165145016886": 61, "256709945893554": 61, "026180865716036": 61, "reli": 61, "typic": 61, "sudo": [61, 62, 63], "addit": 61, "should": [61, 62, 63], "pythonpath": [61, 62], "python3": [61, 62, 63], "c0": 61, "cd": [61, 63], "sh": [61, 62, 63], "succeed": 61, "abil": 61, "essenti": 61, "success": [61, 63], "recept": 61, "ch1": [61, 63], "191": [61, 63], "35thz": [61, 63], "70": 61, "58": 61, "pingal": [61, 63], "cannot": 61, "ping": [61, 63], "reachabl": [61, 63], "66": 61, "9": 61, "underli": 61, "usual": 61, "With": 61, "select": [61, 62], "suit": 61, "flexibl": 61, "probabl": 61, "properli": 61, "know": 61, "1m": 61, "lo": [61, 63], "wdm5": 61, "wdm6": 61, "eth3": 61, "eth4": 61, "dismiss": 61, "incomprehens": 61, "garbag": 61, "long": [61, 62], "100m": 61, "0db": 61, "0km": 61, "5db": 61, "15": 61, "disambigu": 61, "pygraphviz": 61, "apt": [61, 63], "revis": 61, "side": 61, "easiest": 61, "understand": [61, 62], "glanc": 61, "lastli": 61, "question": 61, "think": 61, "why": 61, "suffici": 61, "fact": 61, "among": 61, "ovsbridg": [61, 63], "lead": 61, "undesir": 61, "behavior": 61, "forev": 61, "render": 61, "unus": 61, "slow": 61, "problem": 61, "exacerb": 61, "flood": 61, "broadcast": 61, "dhcp": 61, "frequent": 61, "seen": 61, "who": 61, "often": 61, "incorrectli": 61, "140362746465920": 61, "40thz": 61, "140362746465728": 61, "140362746797456": 61, "140362746797360": 61, "140362746797312": 61, "140362746794720": 61, "reason": 61, "seem": 61, "moment": 61, "my": 61, "05": 61, "99": 61, "freq": 61, "191350000000000": 61, "04688966097812": 61, "985167480783709": 61, "63": 61, "095734448019336": 61, "02484912117567492": 61, "00759355581639": 61, "11343356995615": 61, "11227284182009": 61, "9999493444109917": 61, "00038782396576497437": 61, "653865120449501e": 61, "07": 61, "hopefulli": 61, "determin": 61, "thank": 61, "forward": [61, 63], "feedback": 61, "pai": 61, "attent": 61, "tricki": 61, "maddeningli": 61, "mani": 61, "exact": [61, 62], "thing": 61, "draw": 61, "write": 61, "help": [61, 62], "particular": 61, "possibli": 61, "linksbetween": 61, "intf1": 61, "intf2": 61, "easili": 61, "shell": 61, "enclos": 61, "quot": 61, "mi": 61, "interpret": 61, "special": 61, "charact": 61, "variabl": 61, "doubl": 61, "dereferenc": 61, "mistak": 61, "care": 61, "fortun": 61, "few": 61, "neg": 61, "consequ": 61, "laser": 61, "potenti": 61, "disastr": 61, "damag": 61, "least": 61, "ideal": 61, "failsaf": 61, "mechan": 61, "guarante": 61, "caus": 61, "fire": 61, "almost": 61, "certainli": 61, "here": [61, 63], "excess": 61, "enthusiast": 61, "lot": 61, "functool": 61, "partial": 61, "stp": 61, "discov": 61, "eventu": 61, "bridg": 61, "presenc": 61, "As": [61, 62], "replic": 61, "compar": 61, "framework": 61, "3x3": 61, "grid": 61, "Of": 61, "manhattan": 61, "protocol": 61, "abov": [61, 63], "unlik": 61, "advanc": 61, "plan": 61, "text": 61, "descript": 61, "dot": 61, "anyth": [61, 63], "b": [61, 63], "choos": [61, 62], "decid": 61, "advantag": 61, "disadvantag": 61, "behav": 62, "sever": [62, 63], "cover": 62, "obtain": 62, "aim": 62, "repres": [62, 63], "give": [62, 63], "6node": 62, "mininet_opt": 62, "befor": [62, 63], "wrote": 62, "empti": 62, "appear": 62, "mention": 62, "displai": [62, 63], "111": 62, "shown": [62, 63], "222": 62, "apostroph": 62, "against": 62, "finish": 63, "acquaint": 63, "successfulli": 63, "proceed": 63, "procedur": 63, "ubuntu": 63, "debian": 63, "distribut": 63, "git": 63, "clone": 63, "repositori": 63, "github": 63, "com": 63, "latest": 63, "greatest": 63, "recommend": 63, "tag": 63, "releas": 63, "explicitli": 63, "checkout": 63, "nv": 63, "ovsbr": 63, "issu": 63, "encount": 63, "dure": 63, "suggest": 63, "consult": 63, "2x25km": 63, "pid": 63, "3422": 63, "3424": 63, "3429": 63, "3432": 63, "3438": 63, "3442": 63, "0x7efe3c561e20": 63, "0x7efe3c577370": 63, "succe": 63, "found": 63, "activ": 63, "optial": 63, "708129": 63, "45": 63, "402202": 63, "again": 63, "71": 63, "larger": 63}, "objects": {"": [[23, 0, 0, "-", "mnoptical"]], "mnoptical": [[4, 0, 0, "-", "dataplane"], [5, 0, 0, "-", "edfa_params"], [9, 0, 0, "-", "examples"], [24, 0, 0, "-", "link"], [25, 0, 0, "-", "network"], [26, 0, 0, "-", "node"], [40, 0, 0, "-", "ofcdemo"], [45, 0, 0, "-", "rest"], [46, 0, 0, "-", "terminal_params"], [51, 0, 0, "-", "topo"], [57, 0, 0, "-", "units"], [58, 0, 0, "-", "visualization"], [59, 0, 0, "-", "visualize_topo"]], "mnoptical.dataplane": [[4, 1, 1, "", "AmplifierPair"], [4, 1, 1, "", "CombSource"], [4, 4, 1, "", "Mininet"], [4, 1, 1, "", "Monitor"], [4, 1, 1, "", "OpticalIn"], [4, 1, 1, "", "OpticalIntf"], [4, 1, 1, "", "OpticalLink"], [4, 1, 1, "", "OpticalNet"], [4, 1, 1, "", "OpticalOut"], [4, 5, 1, "", "PhySpan"], [4, 1, 1, "", "ROADM"], [4, 1, 1, "", "SimpleROADM"], [4, 1, 1, "", "SwitchBase"], [4, 1, 1, "", "Terminal"], [4, 1, 1, "", "TwoTransceiverTopo"], [4, 4, 1, "", "UniLink"], [4, 5, 1, "", "UnidirectionalOpticalLink"], [4, 5, 1, "", "cleanOptLinks"], [4, 4, 1, "", "dB"], [4, 4, 1, "", "dBm"], [4, 5, 1, "", "disableIPv6"], [4, 5, 1, "", "dumpLinkPower"], [4, 5, 1, "", "dumpNet"], [4, 5, 1, "", "formatSignals"], [4, 4, 1, "", "km"], [4, 4, 1, "", "m"], [4, 5, 1, "", "twoTransceiverTest"]], "mnoptical.dataplane.AmplifierPair": [[4, 2, 1, "", "phyAmp1"], [4, 2, 1, "", "phyAmp2"]], "mnoptical.dataplane.CombSource": [[4, 2, 1, "", "ADD"], [4, 2, 1, "", "LINEOUT"], [4, 3, 1, "", "addTerminal"], [4, 3, 1, "", "restTurnonHandler"], [4, 3, 1, "", "turn_on"]], "mnoptical.dataplane.Monitor": [[4, 3, 1, "", "__str__"], [4, 2, 1, "", "execed"], [4, 3, 1, "", "intfList"], [4, 3, 1, "", "intfNames"], [4, 2, 1, "", "intfs"], [4, 3, 1, "", "pexec"], [4, 3, 1, "", "restMonitor"], [4, 2, 1, "", "waiting"]], "mnoptical.dataplane.OpticalIn": [[4, 3, 1, "", "isInput"], [4, 3, 1, "", "isOutput"]], "mnoptical.dataplane.OpticalIntf": [[4, 3, 1, "", "isInput"], [4, 3, 1, "", "isOutput"]], "mnoptical.dataplane.OpticalLink": [[4, 3, 1, "", "_parseArgs"], [4, 3, 1, "", "_parseSpans"], [4, 3, 1, "", "intfName"], [4, 2, 1, "", "phyLink1"], [4, 2, 1, "", "phyLink2"]], "mnoptical.dataplane.OpticalNet": [[4, 3, 1, "", "__iter__"], [4, 3, 1, "", "addLink"], [4, 3, 1, "", "addLinkComponents"], [4, 3, 1, "", "addMonitor"], [4, 3, 1, "", "addSwitch"], [4, 2, 1, "", "monitors"], [4, 3, 1, "", "restSetgainHandler"], [4, 3, 1, "", "restSetrippleHandler"], [4, 3, 1, "", "set_ripple"], [4, 3, 1, "", "setgainCmd"]], "mnoptical.dataplane.OpticalOut": [[4, 3, 1, "", "isInput"], [4, 3, 1, "", "isOutput"]], "mnoptical.dataplane.ROADM": [[4, 3, 1, "", "connect"], [4, 3, 1, "", "dpFlow"], [4, 3, 1, "", "dpInstall"], [4, 3, 1, "", "dpRemove"], [4, 3, 1, "", "dpReset"], [4, 3, 1, "", "install"], [4, 2, 1, "", "model"], [4, 2, 1, "", "modelClass"], [4, 3, 1, "", "phyInstall"], [4, 3, 1, "", "phyRemove"], [4, 3, 1, "", "phyReset"], [4, 3, 1, "", "remove"], [4, 3, 1, "", "reset"], [4, 3, 1, "", "restCleanmeHandler"], [4, 3, 1, "", "restConnectHandler"], [4, 3, 1, "", "restRulesHandler"], [4, 3, 1, "", "ruleTuple"], [4, 3, 1, "", "start"]], "mnoptical.dataplane.SimpleROADM": [[4, 3, 1, "", "update"]], "mnoptical.dataplane.SwitchBase": [[4, 3, 1, "", "cmd"], [4, 3, 1, "", "defaultDpid"], [4, 2, 1, "", "dpidBase"], [4, 2, 1, "", "modelClass"], [4, 3, 1, "", "reset"], [4, 3, 1, "", "restPortsDict"], [4, 3, 1, "", "restResetHandler"]], "mnoptical.dataplane.Terminal": [[4, 3, 1, "", "block"], [4, 2, 1, "", "blockCookie"], [4, 3, 1, "", "configTx"], [4, 3, 1, "", "connect"], [4, 3, 1, "", "makeTransceiver"], [4, 2, 1, "", "model"], [4, 2, 1, "", "modelClass"], [4, 3, 1, "", "receiverCallback"], [4, 3, 1, "", "reset"], [4, 3, 1, "", "restConnectHandler"], [4, 3, 1, "", "restTurnonHandler"], [4, 3, 1, "", "start"], [4, 3, 1, "", "turn_on"], [4, 3, 1, "", "txnum"], [4, 3, 1, "", "unblock"]], "mnoptical.dataplane.TwoTransceiverTopo": [[4, 3, 1, "", "build"]], "mnoptical.edfa_params": [[5, 4, 1, "", "fibre_spectral_attenuation"], [5, 4, 1, "", "ripple_functions"]], "mnoptical.examples": [[6, 0, 0, "-", "config_lroadmring"], [7, 0, 0, "-", "cosmostutorial"], [8, 0, 0, "-", "dbgtest"], [10, 0, 0, "-", "lroadmring"], [11, 0, 0, "-", "nc_add_connection"], [12, 0, 0, "-", "roadm_with_amps"], [13, 0, 0, "-", "sigcommtutorial"], [14, 0, 0, "-", "simplelink"], [15, 0, 0, "-", "singlelink"], [16, 0, 0, "-", "singleroadm"], [17, 0, 0, "-", "sixnodestopo"], [18, 0, 0, "-", "test-attenuator"], [19, 0, 0, "-", "unilinear1"], [20, 0, 0, "-", "unilinear2"], [21, 0, 0, "-", "uniring"], [22, 0, 0, "-", "uniroadmchain"]], "mnoptical.examples.config_lroadmring": [[6, 4, 1, "", "N"], [6, 5, 1, "", "allocChannels"], [6, 5, 1, "", "config"], [6, 5, 1, "", "configRoadms"], [6, 5, 1, "", "configSwitches"], [6, 5, 1, "", "configTerminals"], [6, 5, 1, "", "dumpChmap"], [6, 5, 1, "", "genConnection"], [6, 5, 1, "", "genConnections"]], "mnoptical.examples.cosmostutorial": [[7, 1, 1, "", "TutorialTopo"], [7, 5, 1, "", "arp"], [7, 4, 1, "", "ch"], [7, 4, 1, "", "ch2"], [7, 5, 1, "", "config0"], [7, 4, 1, "", "password"], [7, 4, 1, "", "sslkeyfile"], [7, 5, 1, "", "test"], [7, 4, 1, "", "topo"], [7, 4, 1, "", "username"]], "mnoptical.examples.cosmostutorial.TutorialTopo": [[7, 3, 1, "", "build"], [7, 3, 1, "", "wdmLink"]], "mnoptical.examples.dbgtest": [[8, 5, 1, "", "dbgtest"], [8, 4, 1, "", "topo"]], "mnoptical.examples.lroadmring": [[10, 1, 1, "", "LumentumBase"], [10, 1, 1, "", "LumentumRing"], [10, 4, 1, "", "password"], [10, 4, 1, "", "sslkeyfile"], [10, 5, 1, "", "test"], [10, 4, 1, "", "topo"], [10, 4, 1, "", "username"]], "mnoptical.examples.lroadmring.LumentumBase": [[10, 3, 1, "", "addNetworkNodes"], [10, 3, 1, "", "addNodeLinks"], [10, 2, 1, "", "ethbase"], [10, 2, 1, "", "hostport"], [10, 2, 1, "", "listenPortBase"], [10, 3, 1, "", "nodeNames"], [10, 2, 1, "", "rxbase"], [10, 2, 1, "", "txbase"], [10, 3, 1, "", "wdmLink"]], "mnoptical.examples.lroadmring.LumentumRing": [[10, 3, 1, "", "build"]], "mnoptical.examples.nc_add_connection": [[11, 4, 1, "", "args"], [11, 5, 1, "", "connect"]], "mnoptical.examples.roadm_with_amps": [[12, 1, 1, "", "SingleROADMTopo"], [12, 5, 1, "", "add_amp"], [12, 5, 1, "", "test"], [12, 4, 1, "", "topo"]], "mnoptical.examples.roadm_with_amps.SingleROADMTopo": [[12, 3, 1, "", "build"]], "mnoptical.examples.sigcommtutorial": [[13, 4, 1, "", "NetconfPortBase"], [13, 1, 1, "", "TutorialTopo"], [13, 4, 1, "", "ch"], [13, 4, 1, "", "comb1_power"], [13, 4, 1, "", "comb2_power"], [13, 4, 1, "", "comb_src_range"], [13, 4, 1, "", "password"], [13, 4, 1, "", "sslkeyfile"], [13, 4, 1, "", "topo"], [13, 4, 1, "", "txcount"], [13, 4, 1, "", "username"]], "mnoptical.examples.sigcommtutorial.TutorialTopo": [[13, 3, 1, "", "build"], [13, 3, 1, "", "wdmLink"]], "mnoptical.examples.simplelink": [[14, 1, 1, "", "SimpleLinkTopo"], [14, 5, 1, "", "test"], [14, 4, 1, "", "topo"]], "mnoptical.examples.simplelink.SimpleLinkTopo": [[14, 3, 1, "", "build"]], "mnoptical.examples.singlelink": [[15, 1, 1, "", "SingleLinkTopo"], [15, 5, 1, "", "test"], [15, 4, 1, "", "topo"]], "mnoptical.examples.singlelink.SingleLinkTopo": [[15, 3, 1, "", "build"]], "mnoptical.examples.singleroadm": [[16, 1, 1, "", "SingleROADMTopo"], [16, 5, 1, "", "plotNet"], [16, 5, 1, "", "test"], [16, 4, 1, "", "topo"]], "mnoptical.examples.singleroadm.SingleROADMTopo": [[16, 3, 1, "", "build"]], "mnoptical.examples.sixnodestopo": [[17, 1, 1, "", "SixROADMTopo"], [17, 5, 1, "", "plotNet"], [17, 4, 1, "", "topo"]], "mnoptical.examples.sixnodestopo.SixROADMTopo": [[17, 3, 1, "", "build"]], "mnoptical.examples.test-attenuator": [[18, 1, 1, "", "MultiROADMTopo"], [18, 5, 1, "", "add_amp"], [18, 5, 1, "", "plotNet"], [18, 5, 1, "", "test"], [18, 4, 1, "", "topo"]], "mnoptical.examples.test-attenuator.MultiROADMTopo": [[18, 3, 1, "", "build"], [18, 3, 1, "", "configNet"], [18, 3, 1, "", "get_monitor_power"]], "mnoptical.examples.unilinear1": [[19, 1, 1, "", "CLI"], [19, 1, 1, "", "OpticalTopo"], [19, 1, 1, "", "UniLinearTopo"], [19, 5, 1, "", "config"], [19, 5, 1, "", "test"], [19, 4, 1, "", "topo"]], "mnoptical.examples.unilinear1.CLI": [[19, 3, 1, "", "do_config"]], "mnoptical.examples.unilinear1.OpticalTopo": [[19, 3, 1, "", "addROADM"], [19, 3, 1, "", "addTerminal"], [19, 3, 1, "", "ethLink"], [19, 3, 1, "", "wdmLink"]], "mnoptical.examples.unilinear1.UniLinearTopo": [[19, 3, 1, "", "addport"], [19, 3, 1, "", "build"], [19, 3, 1, "", "downlink"], [19, 3, 1, "", "dropport"], [19, 3, 1, "", "ethport"], [19, 2, 1, "", "linein"], [19, 2, 1, "", "lineout"], [19, 3, 1, "", "uplink"]], "mnoptical.examples.unilinear2": [[20, 1, 1, "", "CLI"], [20, 1, 1, "", "OpticalTopo"], [20, 1, 1, "", "UniLinearTopo2"], [20, 5, 1, "", "config"], [20, 5, 1, "", "test"], [20, 4, 1, "", "topo"]], "mnoptical.examples.unilinear2.CLI": [[20, 3, 1, "", "do_config"]], "mnoptical.examples.unilinear2.OpticalTopo": [[20, 3, 1, "", "addROADM"], [20, 3, 1, "", "addTerminal"], [20, 3, 1, "", "ethLink"], [20, 3, 1, "", "wdmLink"]], "mnoptical.examples.unilinear2.UniLinearTopo2": [[20, 3, 1, "", "addport"], [20, 3, 1, "", "build"], [20, 3, 1, "", "downlink"], [20, 3, 1, "", "dropport"], [20, 2, 1, "", "eastin"], [20, 2, 1, "", "eastout"], [20, 3, 1, "", "ethport"], [20, 3, 1, "", "linein"], [20, 3, 1, "", "lineout"], [20, 3, 1, "", "uplink"], [20, 2, 1, "", "westin"], [20, 2, 1, "", "westout"]], "mnoptical.examples.uniring": [[21, 1, 1, "", "CLI"], [21, 1, 1, "", "UniRingTopo"], [21, 5, 1, "", "add"], [21, 5, 1, "", "config"], [21, 5, 1, "", "configOpticalNet"], [21, 5, 1, "", "configPacketNet"], [21, 5, 1, "", "drop"], [21, 5, 1, "", "fwd"], [21, 5, 1, "", "test"], [21, 4, 1, "", "topo"]], "mnoptical.examples.uniring.CLI": [[21, 3, 1, "", "do_config"]], "mnoptical.examples.uniring.UniRingTopo": [[21, 3, 1, "", "build"]], "mnoptical.examples.uniroadmchain": [[22, 1, 1, "", "UniRoadmChain"], [22, 4, 1, "", "topo"]], "mnoptical.examples.uniroadmchain.UniRoadmChain": [[22, 3, 1, "", "build"], [22, 3, 1, "", "configNet"]], "mnoptical.link": [[24, 1, 1, "", "Bigo_SRS_Model"], [24, 1, 1, "", "Link"], [24, 1, 1, "", "SRS_Effect_Model"], [24, 1, 1, "", "Span"], [24, 4, 1, "", "SpanTuple"], [24, 1, 1, "", "Sylvestre_SRS_Model"], [24, 1, 1, "", "Zirngibl_General_Model"]], "mnoptical.link.Link": [[24, 3, 1, "", "__repr__"], [24, 3, 1, "", "describe"], [24, 3, 1, "", "include_optical_signal_in"], [24, 3, 1, "", "include_optical_signal_out"], [24, 3, 1, "", "length"], [24, 3, 1, "", "propagate"], [24, 3, 1, "", "remove_optical_signal"], [24, 3, 1, "", "reset"], [24, 2, 1, "", "srs_model"], [24, 2, 1, "", "srs_models"]], "mnoptical.link.Span": [[24, 3, 1, "", "__repr__"], [24, 2, 1, "", "anonymous"], [24, 3, 1, "", "attenuation"], [24, 3, 1, "", "beta2"], [24, 3, 1, "", "describe"], [24, 3, 1, "", "get_fibre_spectral_attenuation"], [24, 3, 1, "", "gn_model"], [24, 2, 1, "", "ids"], [24, 3, 1, "", "include_optical_signal_in"], [24, 3, 1, "", "include_optical_signal_out"], [24, 3, 1, "", "output_nonlinear_noise"], [24, 3, 1, "", "propagate"], [24, 3, 1, "", "psi_factor"], [24, 3, 1, "", "remove_optical_signal"], [24, 3, 1, "", "reset"], [24, 3, 1, "", "set_input_port"], [24, 3, 1, "", "set_output_port"]], "mnoptical.network": [[25, 1, 1, "", "Network"]], "mnoptical.network.Network": [[25, 3, 1, "", "add_amplifier"], [25, 3, 1, "", "add_link"], [25, 3, 1, "", "add_lt"], [25, 3, 1, "", "add_roadm"], [25, 3, 1, "", "describe"], [25, 3, 1, "", "find_link_and_in_port_from_nodes"], [25, 3, 1, "", "find_link_and_out_port_from_nodes"], [25, 3, 1, "", "find_link_from_nodes"], [25, 3, 1, "", "find_out_port_from_link"]], "mnoptical.node": [[26, 1, 1, "", "Amplifier"], [26, 1, 1, "", "Attenuator"], [26, 1, 1, "", "LineTerminal"], [26, 1, 1, "", "Monitor"], [26, 1, 1, "", "Node"], [26, 1, 1, "", "NodeAuditing"], [26, 1, 1, "", "OpticalSignal"], [26, 1, 1, "", "Roadm"], [26, 1, 1, "", "SignalTracing"], [26, 4, 1, "", "SwitchRule"], [26, 1, 1, "", "Transceiver"]], "mnoptical.node.Amplifier": [[26, 3, 1, "", "__repr__"], [26, 3, 1, "", "compute_power_excursions"], [26, 3, 1, "", "get_noise_figure"], [26, 3, 1, "", "get_wavelength_dependent_gain"], [26, 3, 1, "", "load_wavelength_dependent_gain"], [26, 3, 1, "", "mock_amp_gain_adjust"], [26, 3, 1, "", "monitor_query"], [26, 3, 1, "", "nli_compensation"], [26, 3, 1, "", "output_amplified_power"], [26, 3, 1, "", "power_excursions_flags_off"], [26, 3, 1, "", "propagate"], [26, 3, 1, "", "reset"], [26, 3, 1, "", "reset_gain"], [26, 3, 1, "", "set_gain"], [26, 3, 1, "", "set_ripple_function"], [26, 3, 1, "", "stage_amplified_spontaneous_emission_noise"]], "mnoptical.node.Attenuator": [[26, 3, 1, "", "attenuation"], [26, 3, 1, "", "propagate"]], "mnoptical.node.LineTerminal": [[26, 3, 1, "", "add_transceiver"], [26, 3, 1, "", "add_transceivers"], [26, 3, 1, "", "assoc_channel"], [26, 3, 1, "", "assoc_rx_to_channel"], [26, 3, 1, "", "assoc_tx_to_channel"], [26, 3, 1, "", "disassoc_rx_to_channel"], [26, 3, 1, "", "disassoc_tx_to_channel"], [26, 3, 1, "", "existing_transceiver"], [26, 3, 1, "", "get_optical_signals"], [26, 3, 1, "", "gosnr"], [26, 3, 1, "", "monitor_query"], [26, 3, 1, "", "osnr"], [26, 3, 1, "", "receiver"], [26, 3, 1, "", "receiver_callback"], [26, 3, 1, "", "reset"], [26, 3, 1, "", "reset_transceivers"], [26, 3, 1, "", "set_modulation_format"], [26, 3, 1, "", "turn_off"], [26, 3, 1, "", "turn_on"], [26, 3, 1, "", "tx_config"]], "mnoptical.node.Monitor": [[26, 3, 1, "", "__repr__"], [26, 3, 1, "", "get_ase_noise"], [26, 3, 1, "", "get_ber"], [26, 3, 1, "", "get_dict_ase_noise"], [26, 3, 1, "", "get_dict_gosnr"], [26, 3, 1, "", "get_dict_nli_noise"], [26, 3, 1, "", "get_dict_osnr"], [26, 3, 1, "", "get_dict_power"], [26, 3, 1, "", "get_gosnr"], [26, 3, 1, "", "get_list_gosnr"], [26, 3, 1, "", "get_list_osnr"], [26, 3, 1, "", "get_nli_noise"], [26, 3, 1, "", "get_optical_signals"], [26, 3, 1, "", "get_osnr"], [26, 3, 1, "", "get_power"], [26, 3, 1, "", "modify_mode"]], "mnoptical.node.Node": [[26, 3, 1, "", "__repr__"], [26, 2, 1, "", "debugger"], [26, 3, 1, "", "describe"], [26, 3, 1, "", "include_optical_signal_in"], [26, 3, 1, "", "include_optical_signal_out"], [26, 2, 1, "", "input_port_base"], [26, 2, 1, "", "output_port_base"], [26, 3, 1, "", "remove_optical_signal"], [26, 3, 1, "", "remove_signal_from_out_port"], [26, 3, 1, "", "reset_component"], [26, 3, 1, "", "set_input_port"], [26, 3, 1, "", "set_output_port"]], "mnoptical.node.NodeAuditing": [[26, 3, 1, "", "check_link_propagation"], [26, 3, 1, "", "check_roadm_propagation"]], "mnoptical.node.OpticalSignal": [[26, 3, 1, "", "__repr__"], [26, 3, 1, "", "assoc_loc_in"], [26, 3, 1, "", "assoc_loc_out"], [26, 3, 1, "", "describe"], [26, 3, 1, "", "reset"], [26, 3, 1, "", "set_modulation_format"], [26, 2, 1, "", "spectrum_band_init_H"], [26, 2, 1, "", "spectrum_band_init_nm"]], "mnoptical.node.Roadm": [[26, 3, 1, "", "can_switch"], [26, 3, 1, "", "can_switch_from_lt"], [26, 3, 1, "", "check_switch_rule"], [26, 3, 1, "", "compute_carrier_attenuation"], [26, 3, 1, "", "delete_switch_rule"], [26, 3, 1, "", "delete_switch_rules"], [26, 3, 1, "", "fast_switch"], [26, 3, 1, "", "get_in_port"], [26, 3, 1, "", "get_optical_signals"], [26, 3, 1, "", "include_optical_signal_in"], [26, 3, 1, "", "install_switch_rule"], [26, 3, 1, "", "monitor_query"], [26, 3, 1, "", "power_divergence"], [26, 3, 1, "", "prepropagation"], [26, 3, 1, "", "process_att"], [26, 3, 1, "", "propagate"], [26, 3, 1, "", "remove_switch_rule"], [26, 3, 1, "", "reset"], [26, 3, 1, "", "route"], [26, 3, 1, "", "set_boost_gain"], [26, 3, 1, "", "set_preamp_gain"], [26, 3, 1, "", "set_reference_power"], [26, 3, 1, "", "switch"], [26, 3, 1, "", "update_switch_rule"]], "mnoptical.node.SignalTracing": [[26, 3, 1, "", "channel_paths"], [26, 3, 1, "", "get_port"], [26, 2, 1, "", "pathEntry"], [26, 3, 1, "", "path_state"], [26, 3, 1, "", "signal_path"]], "mnoptical.node.Transceiver": [[26, 3, 1, "", "assoc_optical_signal"], [26, 3, 1, "", "describe"], [26, 3, 1, "", "remove_optical_signal"], [26, 3, 1, "", "set_modulation_format"]], "mnoptical.ofcdemo": [[27, 0, 0, "-", "Control_Test_Lum"], [28, 0, 0, "-", "Control_Test_Mininet_REST"], [29, 0, 0, "-", "Demo_Control"], [30, 0, 0, "-", "Demo_Control_2"], [31, 0, 0, "-", "Simulation_API"], [32, 0, 0, "-", "apsp"], [33, 0, 0, "-", "demo"], [34, 0, 0, "-", "demo_2021"], [35, 0, 0, "-", "demo_hwtopo"], [36, 0, 0, "-", "demolib"], [37, 0, 0, "-", "demolib_2021"], [38, 0, 0, "-", "fakecontroller"], [39, 0, 0, "-", "hwtopo"], [41, 0, 0, "-", "lroadm"], [42, 0, 0, "-", "lumentum_NETCONF_API"], [43, 0, 0, "-", "netconfserver"], [44, 0, 0, "-", "simpledemo"]], "mnoptical.ofcdemo.Control_Test_Lum": [[27, 4, 1, "", "ADD_DROP"], [27, 4, 1, "", "AllLumName"], [27, 5, 1, "", "Control_Test"], [27, 4, 1, "", "LumentumName_to_IP"], [27, 1, 1, "", "Lumentum_Control_NETCONF"], [27, 4, 1, "", "Lumentum_NETCONF_Agent"], [27, 4, 1, "", "NUM_NODE"], [27, 4, 1, "", "NUM_WAV"], [27, 4, 1, "", "NodeLink_to_LumentumLink"], [27, 4, 1, "", "THRUPORT"], [27, 4, 1, "", "m"]], "mnoptical.ofcdemo.Control_Test_Lum.Lumentum_Control_NETCONF": [[27, 3, 1, "", "channel_monitor"], [27, 3, 1, "", "cleanAllROADMs"], [27, 3, 1, "", "installPath"], [27, 3, 1, "", "uninstallPath"]], "mnoptical.ofcdemo.Control_Test_Mininet_REST": [[28, 1, 1, "", "Mininet_Control_REST"], [28, 5, 1, "", "Test"]], "mnoptical.ofcdemo.Control_Test_Mininet_REST.Mininet_Control_REST": [[28, 3, 1, "", "buildGraph"], [28, 3, 1, "", "configurePacketSwitch"], [28, 3, 1, "", "configureTerminal"], [28, 3, 1, "", "getMonitorKey"], [28, 3, 1, "", "getOSNR"], [28, 3, 1, "", "installPath"], [28, 3, 1, "", "monitorKey"], [28, 3, 1, "", "monitorKeyAndLightpaths"], [28, 3, 1, "", "monitorOSNR"], [28, 3, 1, "", "monitorOSNRbyKey"], [28, 3, 1, "", "route"], [28, 3, 1, "", "turnonTerminal"], [28, 3, 1, "", "uninstallPath"]], "mnoptical.ofcdemo.Demo_Control": [[29, 4, 1, "", "ALL_CHANNELS"], [29, 4, 1, "", "CPRI_CAP"], [29, 4, 1, "", "Controller_Lum"], [29, 4, 1, "", "Controller_Mininet"], [29, 4, 1, "", "DOWN_LINK_CAP"], [29, 4, 1, "", "DU_ROADMS"], [29, 5, 1, "", "FindRoute"], [29, 4, 1, "", "GRAPH"], [29, 4, 1, "", "LIGHTPATH_ID"], [29, 4, 1, "", "LIGHTPATH_INFO"], [29, 4, 1, "", "LINK_CAP"], [29, 5, 1, "", "Lumentum_MonitorLightpath"], [29, 5, 1, "", "Lumentum_installPath"], [29, 5, 1, "", "Lumentum_setupLightpath"], [29, 5, 1, "", "Lumentum_teardownLightpath"], [29, 5, 1, "", "Lumentum_uninstallPath"], [29, 5, 1, "", "Mininet_installPath"], [29, 5, 1, "", "Mininet_monitorLightpath"], [29, 5, 1, "", "Mininet_setupLightpath"], [29, 5, 1, "", "Mininet_teardownLightpath"], [29, 5, 1, "", "Mininet_uninstallPath"], [29, 4, 1, "", "NAME_ROADM"], [29, 4, 1, "", "NETLINKS"], [29, 4, 1, "", "NETLINK_INFO"], [29, 4, 1, "", "NODES"], [29, 4, 1, "", "NUM_NODE"], [29, 4, 1, "", "NUM_WAV"], [29, 4, 1, "", "PATH_CH_TO_LIGHTPATH"], [29, 4, 1, "", "ROADM_TO_ID"], [29, 4, 1, "", "ROADM_TO_TERMINAL"], [29, 4, 1, "", "ROADM_TRAF"], [29, 4, 1, "", "RU_ROADMS"], [29, 5, 1, "", "RoadmPhyNetwork"], [29, 4, 1, "", "SRC_DST_TO_LIGHTPATH"], [29, 5, 1, "", "Span"], [29, 4, 1, "", "TERMINAL_TO_ID"], [29, 4, 1, "", "TERMINAL_TO_ROADM"], [29, 4, 1, "", "TRAFFIC_ID"], [29, 4, 1, "", "TRAFFIC_INFO"], [29, 5, 1, "", "TrafficTest"], [29, 4, 1, "", "UP_LIGHTPATH_ID_SET"], [29, 4, 1, "", "UP_LIGHTPATH_TIME_LIST"], [29, 4, 1, "", "UP_TRAF_ID_SET"], [29, 4, 1, "", "UP_TRAF_TIME_LIST"], [29, 5, 1, "", "check_lightpath_for_traf"], [29, 5, 1, "", "getLinks"], [29, 5, 1, "", "init_Controller"], [29, 5, 1, "", "install_Lightpath"], [29, 5, 1, "", "install_Traf"], [29, 5, 1, "", "linkspec"], [29, 4, 1, "", "m"], [29, 4, 1, "", "name_roadms"], [29, 4, 1, "", "name_terminals"], [29, 5, 1, "", "netGraph"], [29, 4, 1, "", "node"], [29, 5, 1, "", "testMininet"], [29, 5, 1, "", "traf_to_lightpah_Assignment"], [29, 5, 1, "", "traf_to_lightpath_Release"], [29, 5, 1, "", "trafficPattern"], [29, 5, 1, "", "uninstall_Lightpath"], [29, 5, 1, "", "update_lightpath_down_time"], [29, 5, 1, "", "waveAvailibility"], [29, 5, 1, "", "waveSelection"]], "mnoptical.ofcdemo.Demo_Control_2": [[30, 4, 1, "", "ALL_CHANNELS"], [30, 4, 1, "", "CPRI_CAP"], [30, 4, 1, "", "Controller_Lum"], [30, 4, 1, "", "Controller_Mininet"], [30, 4, 1, "", "DOWN_LINK_CAP"], [30, 4, 1, "", "DU_ROADMS"], [30, 5, 1, "", "FindRoute"], [30, 4, 1, "", "GRAPH"], [30, 4, 1, "", "LIGHTPATH_ID"], [30, 4, 1, "", "LIGHTPATH_INFO"], [30, 4, 1, "", "LINK_CAP"], [30, 5, 1, "", "Lumentum_MonitorLightpath"], [30, 5, 1, "", "Lumentum_installPath"], [30, 5, 1, "", "Lumentum_setupLightpath"], [30, 5, 1, "", "Lumentum_teardownLightpath"], [30, 5, 1, "", "Lumentum_uninstallPath"], [30, 5, 1, "", "Mininet_installPath"], [30, 5, 1, "", "Mininet_monitorDifference"], [30, 5, 1, "", "Mininet_monitorLightpath"], [30, 5, 1, "", "Mininet_setupLightpath"], [30, 5, 1, "", "Mininet_teardownLightpath"], [30, 5, 1, "", "Mininet_uninstallPath"], [30, 4, 1, "", "NAME_ROADM"], [30, 4, 1, "", "NETLINKS"], [30, 4, 1, "", "NETLINK_INFO"], [30, 4, 1, "", "NODES"], [30, 4, 1, "", "NUM_NODE"], [30, 4, 1, "", "NUM_WAV"], [30, 4, 1, "", "PATH_CH_TO_LIGHTPATH"], [30, 4, 1, "", "ROADM_TO_ID"], [30, 4, 1, "", "ROADM_TO_TERMINAL"], [30, 4, 1, "", "ROADM_TRAF"], [30, 4, 1, "", "RU_ROADMS"], [30, 5, 1, "", "RoadmPhyNetwork"], [30, 4, 1, "", "SRC_DST_TO_LIGHTPATH"], [30, 5, 1, "", "Span"], [30, 4, 1, "", "TERMINAL_TO_ID"], [30, 4, 1, "", "TERMINAL_TO_ROADM"], [30, 4, 1, "", "TRAFFIC_ID"], [30, 4, 1, "", "TRAFFIC_INFO"], [30, 4, 1, "", "UP_LIGHTPATH_ID_SET"], [30, 4, 1, "", "UP_LIGHTPATH_TIME_LIST"], [30, 4, 1, "", "UP_TRAF_ID_SET"], [30, 4, 1, "", "UP_TRAF_TIME_LIST"], [30, 5, 1, "", "check_lightpath_for_traf"], [30, 5, 1, "", "getLinks"], [30, 5, 1, "", "install_Lightpath"], [30, 5, 1, "", "install_Traf"], [30, 5, 1, "", "linkspec"], [30, 4, 1, "", "m"], [30, 4, 1, "", "name_roadms"], [30, 4, 1, "", "name_terminals"], [30, 5, 1, "", "netGraph"], [30, 4, 1, "", "node"], [30, 5, 1, "", "testMininet"], [30, 5, 1, "", "traf_to_lightpah_Assignment"], [30, 5, 1, "", "traf_to_lightpath_Release"], [30, 5, 1, "", "uninstall_Lightpath"], [30, 5, 1, "", "update_lightpath_down_time"], [30, 5, 1, "", "waveAvailibility"], [30, 5, 1, "", "waveSelection"]], "mnoptical.ofcdemo.Simulation_API": [[31, 1, 1, "", "Mininet_Optical_Simu_API"]], "mnoptical.ofcdemo.Simulation_API.Mininet_Optical_Simu_API": [[31, 3, 1, "", "ROADM_deleteSwitchRule"], [31, 3, 1, "", "ROADM_installSwitchRule"], [31, 3, 1, "", "ROADM_monitor_all_gosnr"], [31, 3, 1, "", "ROADM_monitor_all_osnr"], [31, 3, 1, "", "ROADM_monitor_all_power"], [31, 3, 1, "", "ROADM_monitor_channel_data"], [31, 3, 1, "", "ROADM_voaPowerLeveling"], [31, 3, 1, "", "Terminal_Reset_Threshold"], [31, 3, 1, "", "Terminal_configChannel"], [31, 3, 1, "", "Terminal_configChannelPower"], [31, 3, 1, "", "Terminal_turnoffChannel"], [31, 3, 1, "", "Terminal_turnonChannel"]], "mnoptical.ofcdemo.apsp": [[32, 5, 1, "", "adjacencyDict"], [32, 5, 1, "", "allocateChannels"], [32, 5, 1, "", "canonical"], [32, 5, 1, "", "channelPorts"], [32, 5, 1, "", "configurePacketSwitches"], [32, 5, 1, "", "configureTerminals"], [32, 5, 1, "", "countSignals"], [32, 5, 1, "", "entriesToReroute"], [32, 5, 1, "", "installPath"], [32, 5, 1, "", "installRoutes"], [32, 5, 1, "", "monitorKey"], [32, 5, 1, "", "monitorOSNR"], [32, 4, 1, "", "net"], [32, 5, 1, "", "reroute"], [32, 5, 1, "", "route"], [32, 5, 1, "", "run"]], "mnoptical.ofcdemo.demo": [[33, 4, 1, "", "net"]], "mnoptical.ofcdemo.demo_2021": [[34, 4, 1, "", "net"]], "mnoptical.ofcdemo.demo_hwtopo": [[35, 5, 1, "", "Control_Test"], [35, 4, 1, "", "NetconfPortBase"], [35, 5, 1, "", "fixIPMap"]], "mnoptical.ofcdemo.demolib": [[36, 4, 1, "", "AmpSpec"], [36, 4, 1, "", "CLI"], [36, 1, 1, "", "DemoTopo"], [36, 1, 1, "", "LinearRoadmTopo"], [36, 4, 1, "", "ListenPortBase"], [36, 1, 1, "", "OpticalCLI"], [36, 1, 1, "", "OpticalTopo"], [36, 4, 1, "", "SpanSpec"], [36, 5, 1, "", "configureLinearNet"], [36, 5, 1, "", "linearRoadmTest"], [36, 4, 1, "", "net"], [36, 5, 1, "", "spanSpec"]], "mnoptical.ofcdemo.demolib.DemoTopo": [[36, 3, 1, "", "addPopLink"], [36, 3, 1, "", "build"]], "mnoptical.ofcdemo.demolib.LinearRoadmTopo": [[36, 3, 1, "", "build"], [36, 3, 1, "", "buildPop"], [36, 3, 1, "", "ip"], [36, 3, 1, "", "spans"]], "mnoptical.ofcdemo.demolib.OpticalCLI": [[36, 3, 1, "", "_fmtPathEntry"], [36, 3, 1, "", "_fmtSigState"], [36, 3, 1, "", "_printPathState"], [36, 3, 1, "", "do_amppowers"], [36, 3, 1, "", "do_arp"], [36, 3, 1, "", "do_checklinks"], [36, 3, 1, "", "do_checkroadms"], [36, 3, 1, "", "do_linksignals"], [36, 3, 1, "", "do_monitors"], [36, 3, 1, "", "do_osnr"], [36, 3, 1, "", "do_plot"], [36, 3, 1, "", "do_propagate"], [36, 3, 1, "", "do_reset"], [36, 3, 1, "", "do_setgain"], [36, 3, 1, "", "do_signals"], [36, 3, 1, "", "do_sigpath"], [36, 3, 1, "", "do_sigtrace"], [36, 3, 1, "", "do_spans"], [36, 3, 1, "", "formatSigState"], [36, 3, 1, "", "opticalLinks"], [36, 3, 1, "", "printNodeSignals"], [36, 3, 1, "", "printOsnr"], [36, 3, 1, "", "printSignals"], [36, 2, 1, "", "prompt"], [36, 3, 1, "", "spans"]], "mnoptical.ofcdemo.demolib.OpticalTopo": [[36, 3, 1, "", "ethLink"], [36, 3, 1, "", "wdmLink"]], "mnoptical.ofcdemo.demolib_2021": [[37, 4, 1, "", "AmpSpec"], [37, 4, 1, "", "CLI"], [37, 1, 1, "", "DemoTopo"], [37, 1, 1, "", "LinearRoadmTopo"], [37, 4, 1, "", "ListenPortBase"], [37, 1, 1, "", "OpticalTopo"], [37, 4, 1, "", "SpanSpec"], [37, 5, 1, "", "configureLinearNet"], [37, 5, 1, "", "linearRoadmTest"], [37, 4, 1, "", "net"], [37, 5, 1, "", "spanSpec"]], "mnoptical.ofcdemo.demolib_2021.DemoTopo": [[37, 3, 1, "", "addPopLink"], [37, 3, 1, "", "build"]], "mnoptical.ofcdemo.demolib_2021.LinearRoadmTopo": [[37, 3, 1, "", "build"], [37, 3, 1, "", "buildPop"], [37, 3, 1, "", "ip"], [37, 3, 1, "", "spans"]], "mnoptical.ofcdemo.demolib_2021.OpticalTopo": [[37, 3, 1, "", "ethLink"], [37, 3, 1, "", "wdmLink"]], "mnoptical.ofcdemo.fakecontroller": [[38, 4, 1, "", "ListenPortBase"], [38, 1, 1, "", "NodeProxy"], [38, 1, 1, "", "OFSwitchProxy"], [38, 1, 1, "", "Proxy"], [38, 1, 1, "", "RESTProxy"], [38, 1, 1, "", "ROADMProxy"], [38, 1, 1, "", "SwitchProxy"], [38, 1, 1, "", "TerminalProxy"], [38, 5, 1, "", "fetchLinks"], [38, 5, 1, "", "fetchNodes"], [38, 5, 1, "", "fetchOSNR"], [38, 5, 1, "", "fetchPorts"], [38, 5, 1, "", "fetchRules"]], "mnoptical.ofcdemo.fakecontroller.NodeProxy": [[38, 3, 1, "", "ports"]], "mnoptical.ofcdemo.fakecontroller.OFSwitchProxy": [[38, 3, 1, "", "dpctl"], [38, 2, 1, "", "listenPort"]], "mnoptical.ofcdemo.fakecontroller.Proxy": [[38, 3, 1, "", "__repr__"]], "mnoptical.ofcdemo.fakecontroller.RESTProxy": [[38, 3, 1, "", "get"]], "mnoptical.ofcdemo.fakecontroller.ROADMProxy": [[38, 3, 1, "", "connect"], [38, 3, 1, "", "reset"]], "mnoptical.ofcdemo.fakecontroller.SwitchProxy": [[38, 3, 1, "", "rules"]], "mnoptical.ofcdemo.fakecontroller.TerminalProxy": [[38, 3, 1, "", "connect"], [38, 3, 1, "", "reset"], [38, 3, 1, "", "turn_on"]], "mnoptical.ofcdemo.hwtopo": [[39, 1, 1, "", "Lumentum"], [39, 1, 1, "", "LumentumLinear"], [39, 1, 1, "", "MUX"], [39, 5, 1, "", "configComb"], [39, 4, 1, "", "netconfPortBase"], [39, 4, 1, "", "topo"]], "mnoptical.ofcdemo.hwtopo.Lumentum": [[39, 2, 1, "", "password"], [39, 2, 1, "", "username"]], "mnoptical.ofcdemo.hwtopo.LumentumLinear": [[39, 3, 1, "", "addport"], [39, 3, 1, "", "build"], [39, 3, 1, "", "dropport"], [39, 3, 1, "", "hostname"], [39, 3, 1, "", "wdmLink"]], "mnoptical.ofcdemo.lroadm": [[41, 1, 1, "", "LROADM"], [41, 4, 1, "", "NetconfPortBase"], [41, 4, 1, "", "password"], [41, 4, 1, "", "username"]], "mnoptical.ofcdemo.lroadm.LROADM": [[41, 3, 1, "", "__str__"], [41, 3, 1, "", "addport"], [41, 3, 1, "", "dropport"], [41, 2, 1, "", "password"], [41, 2, 1, "", "username"]], "mnoptical.ofcdemo.lumentum_NETCONF_API": [[42, 1, 1, "", "Lumentum"], [42, 1, 1, "", "Lumentum_NETCONF"], [42, 4, 1, "", "PASSWORD"], [42, 4, 1, "", "USERNAME"], [42, 1, 1, "", "xmltodict"]], "mnoptical.ofcdemo.lumentum_NETCONF_API.Lumentum": [[42, 3, 1, "", "ALS_disable"], [42, 1, 1, "", "WSSConnection"], [42, 1, 1, "", "WSSConnectionStatus"], [42, 3, 1, "", "cleanup"], [42, 2, 1, "", "connections"], [42, 3, 1, "", "edfa_config"], [42, 3, 1, "", "edfa_status"], [42, 3, 1, "", "freqRangeGHz"], [42, 3, 1, "", "gen_dwdm_connections"], [42, 3, 1, "", "lookup"], [42, 3, 1, "", "lookupstr"], [42, 3, 1, "", "wss_add_connections"], [42, 3, 1, "", "wss_delete_connection"], [42, 3, 1, "", "wss_get_connections"]], "mnoptical.ofcdemo.lumentum_NETCONF_API.Lumentum.WSSConnectionStatus": [[42, 3, 1, "", "from_connection_details"]], "mnoptical.ofcdemo.lumentum_NETCONF_API.Lumentum_NETCONF": [[42, 3, 1, "", "_ConfigWSS"], [42, 3, 1, "", "_WSSMonitor"], [42, 3, 1, "", "parseConnections"]], "mnoptical.ofcdemo.lumentum_NETCONF_API.xmltodict": [[42, 3, 1, "", "parse"]], "mnoptical.ofcdemo.netconfserver": [[43, 4, 1, "", "ConnNsmap"], [43, 4, 1, "", "Debug"], [43, 4, 1, "", "EdfaNsmap"], [43, 1, 1, "", "NetconfAgent"], [43, 4, 1, "", "NetconfPortBase"], [43, 1, 1, "", "NetconfServer"], [43, 4, 1, "", "SSLKeyFileDefault"], [43, 4, 1, "", "configNs"], [43, 5, 1, "", "debug"], [43, 4, 1, "", "linein"], [43, 4, 1, "", "lineout"], [43, 4, 1, "", "nsmap"], [43, 5, 1, "", "parseconn"], [43, 5, 1, "", "runTestServer"], [43, 5, 1, "", "xmlstring"]], "mnoptical.ofcdemo.netconfserver.NetconfAgent": [[43, 3, 1, "", "add_config"], [43, 3, 1, "", "add_connections"], [43, 3, 1, "", "add_edfas"], [43, 3, 1, "", "delete_connection_dn"], [43, 3, 1, "", "findInputPower"], [43, 3, 1, "", "findOutputPower"], [43, 3, 1, "", "nc_append_capabilities"], [43, 3, 1, "", "rpc_delete_connection"], [43, 3, 1, "", "rpc_disable_als"], [43, 3, 1, "", "rpc_edit_config"], [43, 3, 1, "", "rpc_get"], [43, 3, 1, "", "rpc_get_config"], [43, 3, 1, "", "rpc_remove_all_connections"], [43, 3, 1, "", "stop"], [43, 3, 1, "", "updateConnections"]], "mnoptical.ofcdemo.netconfserver.NetconfServer": [[43, 3, 1, "", "start"], [43, 3, 1, "", "stop"]], "mnoptical.ofcdemo.simpledemo": [[44, 4, 1, "", "net"]], "mnoptical.rest": [[45, 1, 1, "", "QuietHandler"], [45, 1, 1, "", "RestServer"], [45, 5, 1, "", "cleanme"], [45, 5, 1, "", "config"], [45, 5, 1, "", "connect"], [45, 5, 1, "", "disconnect"], [45, 5, 1, "", "info"], [45, 5, 1, "", "interRoadmLinks"], [45, 5, 1, "", "links"], [45, 5, 1, "", "linkspec"], [45, 5, 1, "", "lookUpNode"], [45, 5, 1, "", "monitor"], [45, 5, 1, "", "monitorHandler"], [45, 5, 1, "", "monitors"], [45, 5, 1, "", "net"], [45, 5, 1, "", "nodeHandler"], [45, 5, 1, "", "nodes"], [45, 5, 1, "", "opticalLinks"], [45, 5, 1, "", "ports"], [45, 5, 1, "", "reset"], [45, 5, 1, "", "routerLinks"], [45, 5, 1, "", "rules"], [45, 5, 1, "", "set_ripple"], [45, 5, 1, "", "setgain"], [45, 5, 1, "", "terminalLinks"], [45, 5, 1, "", "turn_on"]], "mnoptical.rest.QuietHandler": [[45, 3, 1, "", "log_request"], [45, 2, 1, "", "quiet"]], "mnoptical.rest.RestServer": [[45, 2, 1, "", "net"], [45, 3, 1, "", "start"], [45, 3, 1, "", "stop"]], "mnoptical.terminal_params": [[46, 4, 1, "", "bps"], [46, 4, 1, "", "rx_thresholds"], [46, 4, 1, "", "sr"]], "mnoptical.topo": [[47, 0, 0, "-", "cian_small_linear"], [48, 0, 0, "-", "cost239"], [49, 0, 0, "-", "deutsche_telekom"], [50, 0, 0, "-", "helper_funcs"], [52, 0, 0, "-", "linear"], [53, 0, 0, "-", "linear_multiloc"], [54, 0, 0, "-", "linear_params"], [55, 0, 0, "-", "ofc_demo"], [56, 0, 0, "-", "ring_topology"]], "mnoptical.topo.cian_small_linear": [[47, 1, 1, "", "CIANSmallLinear"]], "mnoptical.topo.cian_small_linear.CIANSmallLinear": [[47, 3, 1, "", "build"]], "mnoptical.topo.cost239": [[48, 1, 1, "", "Cost239Topology"], [48, 5, 1, "", "build_link"], [48, 5, 1, "", "build_links"], [48, 5, 1, "", "build_spans"]], "mnoptical.topo.cost239.Cost239Topology": [[48, 3, 1, "", "build"]], "mnoptical.topo.deutsche_telekom": [[49, 1, 1, "", "DeutscheTelekom"]], "mnoptical.topo.deutsche_telekom.DeutscheTelekom": [[49, 3, 1, "", "build"]], "mnoptical.topo.helper_funcs": [[50, 5, 1, "", "Span"], [50, 5, 1, "", "add_amp"], [50, 5, 1, "", "build_link"], [50, 5, 1, "", "build_spans"], [50, 4, 1, "", "m"]], "mnoptical.topo.linear": [[52, 1, 1, "", "LinearTopology"], [52, 5, 1, "", "Span"], [52, 5, 1, "", "add_amp"], [52, 5, 1, "", "build_link"], [52, 5, 1, "", "build_spans"], [52, 4, 1, "", "m"]], "mnoptical.topo.linear.LinearTopology": [[52, 3, 1, "", "build"]], "mnoptical.topo.linear_multiloc": [[53, 1, 1, "", "LinearTopology"]], "mnoptical.topo.linear_multiloc.LinearTopology": [[53, 3, 1, "", "build"]], "mnoptical.topo.linear_params": [[54, 1, 1, "", "LinearTopology"]], "mnoptical.topo.linear_params.LinearTopology": [[54, 3, 1, "", "build"]], "mnoptical.topo.ofc_demo": [[55, 5, 1, "", "build"]], "mnoptical.topo.ring_topology": [[56, 1, 1, "", "RingTopology"]], "mnoptical.topo.ring_topology.RingTopology": [[56, 3, 1, "", "build"]], "mnoptical.units": [[57, 4, 1, "", "THz"], [57, 4, 1, "", "W"], [57, 5, 1, "", "abs_to_db"], [57, 5, 1, "", "abs_to_dbm"], [57, 4, 1, "", "c"], [57, 4, 1, "", "cm"], [57, 5, 1, "", "db_to_abs"], [57, 4, 1, "", "h"], [57, 4, 1, "", "km"], [57, 4, 1, "", "mW"], [57, 4, 1, "", "nm"], [57, 4, 1, "", "pi"], [57, 4, 1, "", "ps"], [57, 4, 1, "", "um"]], "mnoptical.visualization": [[58, 4, 1, "", "net"], [58, 5, 1, "", "plot_power_vs_wavelength"]], "mnoptical.visualize_topo": [[59, 5, 1, "", "extract_power"], [59, 5, 1, "", "visualize"], [59, 5, 1, "", "visualize_topology"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:data", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "data", "Python data"], "5": ["py", "function", "Python function"]}, "titleterms": {"welcom": 0, "mininet": [0, 1, 60, 63], "optic": [0, 1, 60, 63], "overview": [0, 1, 2], "directori": 0, "python": [0, 1], "modul": [0, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59], "mnoptic": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "subcompon": 0, "other": [0, 62], "file": 0, "acknowledg": [0, 60], "api": [1, 3, 61], "specifi": 1, "topologi": 1, "start": 1, "rest": [1, 45], "sdn": 1, "control": 1, "architectur": 2, "refer": 3, "dataplan": 4, "content": [4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59], "class": [4, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 31, 36, 37, 38, 39, 41, 42, 43, 45, 47, 48, 49, 52, 53, 54, 56], "function": [4, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 27, 28, 29, 30, 32, 35, 36, 37, 38, 39, 43, 45, 48, 50, 52, 55, 57, 58, 59], "attribut": [4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 29, 30, 32, 35, 36, 37, 38, 39, 41, 42, 43, 50, 52, 57, 58], "edfa_param": 5, "exampl": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "config_lroadmr": 6, "cosmostutori": 7, "dbgtest": 8, "submodul": [9, 23, 40, 51], "lroadmr": 10, "nc_add_connect": 11, "roadm_with_amp": 12, "sigcommtutori": 13, "simplelink": 14, "singlelink": 15, "singleroadm": [16, 61], "sixnodestopo": 17, "test": 18, "attenu": 18, "unilinear1": 19, "unilinear2": 20, "unir": 21, "uniroadmchain": 22, "subpackag": 23, "link": [24, 61], "network": 25, "node": 26, "ofcdemo": [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44], "control_test_lum": 27, "control_test_mininet_rest": 28, "demo_control": 29, "demo_control_2": 30, "simulation_api": 31, "apsp": 32, "demo": 33, "demo_2021": 34, "demo_hwtopo": 35, "demolib": 36, "demolib_2021": 37, "fakecontrol": 38, "hwtopo": 39, "lroadm": 41, "lumentum_netconf_api": 42, "netconfserv": 43, "simpledemo": 44, "terminal_param": 46, "topo": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "cian_small_linear": 47, "cost239": 48, "deutsche_telekom": 49, "helper_func": 50, "linear": 52, "linear_multiloc": 53, "linear_param": 54, "ofc_demo": 55, "ring_topologi": 56, "unit": 57, "visual": [58, 62], "visualize_topo": 59, "document": 60, "indic": 60, "tabl": 60, "tutori": 61, "simul": 61, "mode": 61, "emul": 61, "part": 61, "0": 61, "make": 61, "sure": 61, "py": 61, "work": 61, "correctli": 61, "import": 61, "note": 61, "bidirect": 61, "1": 61, "add": 61, "transceiv": 61, "2": 61, "program": 61, "data": 61, "plane": 61, "hint": 61, "advic": 61, "extra": 61, "credit": 61, "insan": 61, "motiv": 61, "how": 62, "run": [62, 63], "tool": 62, "access": 62, "plot": 62, "metric": 62, "instal": 63, "walkthrough": 63, "set": 63, "up": 63, "prerequisit": 63, "simpl": 63, "script": 63, "command": 63, "rout": 63, "congratul": 63}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Welcome to Mininet-Optical": [[0, "welcome-to-mininet-optical"]], "Overview": [[0, "overview"]], "Directories": [[0, "directories"]], "Python modules in mnoptical/": [[0, "python-modules-in-mnoptical"]], "Subcomponents of mnoptical/": [[0, "subcomponents-of-mnoptical"]], "Other files": [[0, "other-files"]], "Acknowledgments": [[0, "acknowledgments"], [60, "acknowledgments"]], "API Overview": [[1, "api-overview"]], "Python API": [[1, "python-api"]], "Specifying a Topology": [[1, "specifying-a-topology"]], "Starting Mininet-Optical": [[1, "starting-mininet-optical"]], "REST SDN Control API": [[1, "rest-sdn-control-api"]], "Architecture Overview": [[2, "architecture-overview"]], "Architecture": [[2, "architecture"]], "API Reference": [[3, "api-reference"]], "mnoptical.dataplane": [[4, "module-mnoptical.dataplane"]], "Module Contents": [[4, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [8, "module-contents"], [10, "module-contents"], [11, "module-contents"], [12, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [20, "module-contents"], [21, "module-contents"], [22, "module-contents"], [24, "module-contents"], [25, "module-contents"], [26, "module-contents"], [27, "module-contents"], [28, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [32, "module-contents"], [33, "module-contents"], [34, "module-contents"], [35, "module-contents"], [36, "module-contents"], [37, "module-contents"], [38, "module-contents"], [39, "module-contents"], [41, "module-contents"], [42, "module-contents"], [43, "module-contents"], [44, "module-contents"], [45, "module-contents"], [46, "module-contents"], [47, "module-contents"], [48, "module-contents"], [49, "module-contents"], [50, "module-contents"], [52, "module-contents"], [53, "module-contents"], [54, "module-contents"], [55, "module-contents"], [56, "module-contents"], [57, "module-contents"], [58, "module-contents"], [59, "module-contents"]], "Classes": [[4, "classes"], [7, "classes"], [10, "classes"], [12, "classes"], [13, "classes"], [14, "classes"], [15, "classes"], [16, "classes"], [17, "classes"], [18, "classes"], [19, "classes"], [20, "classes"], [21, "classes"], [22, "classes"], [24, "classes"], [25, "classes"], [26, "classes"], [27, "classes"], [28, "classes"], [31, "classes"], [36, "classes"], [37, "classes"], [38, "classes"], [39, "classes"], [41, "classes"], [42, "classes"], [43, "classes"], [45, "classes"], [47, "classes"], [48, "classes"], [49, "classes"], [52, "classes"], [53, "classes"], [54, "classes"], [56, "classes"]], "Functions": [[4, "functions"], [6, "functions"], [7, "functions"], [8, "functions"], [10, "functions"], [11, "functions"], [12, "functions"], [14, "functions"], [15, "functions"], [16, "functions"], [17, "functions"], [18, "functions"], [19, "functions"], [20, "functions"], [21, "functions"], [27, "functions"], [28, "functions"], [29, "functions"], [30, "functions"], [32, "functions"], [35, "functions"], [36, "functions"], [37, "functions"], [38, "functions"], [39, "functions"], [43, "functions"], [45, "functions"], [48, "functions"], [50, "functions"], [52, "functions"], [55, "functions"], [57, "functions"], [58, "functions"], [59, "functions"]], "Attributes": [[4, "attributes"], [6, "attributes"], [7, "attributes"], [8, "attributes"], [10, "attributes"], [11, "attributes"], [12, "attributes"], [13, "attributes"], [14, "attributes"], [15, "attributes"], [16, "attributes"], [17, "attributes"], [18, "attributes"], [19, "attributes"], [20, "attributes"], [21, "attributes"], [22, "attributes"], [24, "attributes"], [26, "attributes"], [27, "attributes"], [29, "attributes"], [30, "attributes"], [32, "attributes"], [35, "attributes"], [36, "attributes"], [37, "attributes"], [38, "attributes"], [39, "attributes"], [41, "attributes"], [42, "attributes"], [43, "attributes"], [50, "attributes"], [52, "attributes"], [57, "attributes"], [58, "attributes"]], "mnoptical.edfa_params": [[5, "module-mnoptical.edfa_params"]], "mnoptical.examples.config_lroadmring": [[6, "module-mnoptical.examples.config_lroadmring"]], "mnoptical.examples.cosmostutorial": [[7, "module-mnoptical.examples.cosmostutorial"]], "mnoptical.examples.dbgtest": [[8, "module-mnoptical.examples.dbgtest"]], "mnoptical.examples": [[9, "module-mnoptical.examples"]], "Submodules": [[9, "submodules"], [23, "submodules"], [40, "submodules"], [51, "submodules"]], "mnoptical.examples.lroadmring": [[10, "module-mnoptical.examples.lroadmring"]], "mnoptical.examples.nc_add_connection": [[11, "module-mnoptical.examples.nc_add_connection"]], "mnoptical.examples.roadm_with_amps": [[12, "module-mnoptical.examples.roadm_with_amps"]], "mnoptical.examples.sigcommtutorial": [[13, "module-mnoptical.examples.sigcommtutorial"]], "mnoptical.examples.simplelink": [[14, "module-mnoptical.examples.simplelink"]], "mnoptical.examples.singlelink": [[15, "module-mnoptical.examples.singlelink"]], "mnoptical.examples.singleroadm": [[16, "module-mnoptical.examples.singleroadm"]], "mnoptical.examples.sixnodestopo": [[17, "module-mnoptical.examples.sixnodestopo"]], "mnoptical.examples.test-attenuator": [[18, "module-mnoptical.examples.test-attenuator"]], "mnoptical.examples.unilinear1": [[19, "module-mnoptical.examples.unilinear1"]], "mnoptical.examples.unilinear2": [[20, "module-mnoptical.examples.unilinear2"]], "mnoptical.examples.uniring": [[21, "module-mnoptical.examples.uniring"]], "mnoptical.examples.uniroadmchain": [[22, "module-mnoptical.examples.uniroadmchain"]], "mnoptical": [[23, "module-mnoptical"]], "Subpackages": [[23, "subpackages"]], "mnoptical.link": [[24, "module-mnoptical.link"]], "mnoptical.network": [[25, "module-mnoptical.network"]], "mnoptical.node": [[26, "module-mnoptical.node"]], "mnoptical.ofcdemo.Control_Test_Lum": [[27, "module-mnoptical.ofcdemo.Control_Test_Lum"]], "mnoptical.ofcdemo.Control_Test_Mininet_REST": [[28, "module-mnoptical.ofcdemo.Control_Test_Mininet_REST"]], "mnoptical.ofcdemo.Demo_Control": [[29, "module-mnoptical.ofcdemo.Demo_Control"]], "mnoptical.ofcdemo.Demo_Control_2": [[30, "module-mnoptical.ofcdemo.Demo_Control_2"]], "mnoptical.ofcdemo.Simulation_API": [[31, "module-mnoptical.ofcdemo.Simulation_API"]], "mnoptical.ofcdemo.apsp": [[32, "module-mnoptical.ofcdemo.apsp"]], "mnoptical.ofcdemo.demo": [[33, "module-mnoptical.ofcdemo.demo"]], "mnoptical.ofcdemo.demo_2021": [[34, "module-mnoptical.ofcdemo.demo_2021"]], "mnoptical.ofcdemo.demo_hwtopo": [[35, "module-mnoptical.ofcdemo.demo_hwtopo"]], "mnoptical.ofcdemo.demolib": [[36, "module-mnoptical.ofcdemo.demolib"]], "mnoptical.ofcdemo.demolib_2021": [[37, "module-mnoptical.ofcdemo.demolib_2021"]], "mnoptical.ofcdemo.fakecontroller": [[38, "module-mnoptical.ofcdemo.fakecontroller"]], "mnoptical.ofcdemo.hwtopo": [[39, "module-mnoptical.ofcdemo.hwtopo"]], "mnoptical.ofcdemo": [[40, "module-mnoptical.ofcdemo"]], "mnoptical.ofcdemo.lroadm": [[41, "module-mnoptical.ofcdemo.lroadm"]], "mnoptical.ofcdemo.lumentum_NETCONF_API": [[42, "module-mnoptical.ofcdemo.lumentum_NETCONF_API"]], "mnoptical.ofcdemo.netconfserver": [[43, "module-mnoptical.ofcdemo.netconfserver"]], "mnoptical.ofcdemo.simpledemo": [[44, "module-mnoptical.ofcdemo.simpledemo"]], "mnoptical.rest": [[45, "module-mnoptical.rest"]], "mnoptical.terminal_params": [[46, "module-mnoptical.terminal_params"]], "mnoptical.topo.cian_small_linear": [[47, "module-mnoptical.topo.cian_small_linear"]], "mnoptical.topo.cost239": [[48, "module-mnoptical.topo.cost239"]], "mnoptical.topo.deutsche_telekom": [[49, "module-mnoptical.topo.deutsche_telekom"]], "mnoptical.topo.helper_funcs": [[50, "module-mnoptical.topo.helper_funcs"]], "mnoptical.topo": [[51, "module-mnoptical.topo"]], "mnoptical.topo.linear": [[52, "module-mnoptical.topo.linear"]], "mnoptical.topo.linear_multiloc": [[53, "module-mnoptical.topo.linear_multiloc"]], "mnoptical.topo.linear_params": [[54, "module-mnoptical.topo.linear_params"]], "mnoptical.topo.ofc_demo": [[55, "module-mnoptical.topo.ofc_demo"]], "mnoptical.topo.ring_topology": [[56, "module-mnoptical.topo.ring_topology"]], "mnoptical.units": [[57, "module-mnoptical.units"]], "mnoptical.visualization": [[58, "module-mnoptical.visualization"]], "mnoptical.visualize_topo": [[59, "module-mnoptical.visualize_topo"]], "Mininet-Optical Documentation": [[60, "mininet-optical-documentation"]], "Indices and tables": [[60, "indices-and-tables"]], "Tutorial": [[61, "tutorial"]], "Simulation Mode Tutorial": [[61, "simulation-mode-tutorial"]], "Emulation Tutorial": [[61, "emulation-tutorial"]], "Part 0: Make sure singleroadm.py works correctly": [[61, "part-0-make-sure-singleroadm-py-works-correctly"]], "Important Note: Bidirectional Emulator API": [[61, "important-note-bidirectional-emulator-api"]], "Part 1: Add transceivers and links": [[61, "part-1-add-transceivers-and-links"]], "Part 2: Programming the Data Plane": [[61, "part-2-programming-the-data-plane"]], "Hints and Advice": [[61, "hints-and-advice"]], "Extra Credit for the Insanely Motivated": [[61, "extra-credit-for-the-insanely-motivated"]], "Visualization": [[62, "visualization"]], "How to run the visualization tool": [[62, "how-to-run-the-visualization-tool"]], "How to access and plot other metrics": [[62, "how-to-access-and-plot-other-metrics"]], "Installation and Walkthrough": [[63, "installation-and-walkthrough"]], "Setting up Mininet-Optical": [[63, "setting-up-mininet-optical"]], "Prerequisites": [[63, "prerequisites"]], "Installing Mininet": [[63, "installing-mininet"]], "Installing Mininet-Optical": [[63, "installing-mininet-optical"]], "Running a simple Mininet-Optical script": [[63, "running-a-simple-mininet-optical-script"]], "Mininet-Optical commands": [[63, "mininet-optical-commands"]], "Setting up routes": [[63, "setting-up-routes"]], "Congratulations!": [[63, "congratulations"]]}, "indexentries": {"add (mnoptical.dataplane.combsource attribute)": [[4, "mnoptical.dataplane.CombSource.ADD"]], "amplifierpair (class in mnoptical.dataplane)": [[4, "mnoptical.dataplane.AmplifierPair"]], "combsource (class in mnoptical.dataplane)": [[4, "mnoptical.dataplane.CombSource"]], "lineout (mnoptical.dataplane.combsource attribute)": [[4, "mnoptical.dataplane.CombSource.LINEOUT"]], "mininet (in module mnoptical.dataplane)": [[4, "mnoptical.dataplane.Mininet"]], "monitor (class in mnoptical.dataplane)": [[4, "mnoptical.dataplane.Monitor"]], "opticalin (class in mnoptical.dataplane)": [[4, "mnoptical.dataplane.OpticalIn"]], "opticalintf (class in mnoptical.dataplane)": [[4, "mnoptical.dataplane.OpticalIntf"]], "opticallink (class in mnoptical.dataplane)": [[4, "mnoptical.dataplane.OpticalLink"]], "opticalnet (class in mnoptical.dataplane)": [[4, "mnoptical.dataplane.OpticalNet"]], "opticalout (class in mnoptical.dataplane)": [[4, "mnoptical.dataplane.OpticalOut"]], "physpan() (in module mnoptical.dataplane)": [[4, "mnoptical.dataplane.PhySpan"]], "roadm (class in mnoptical.dataplane)": [[4, "mnoptical.dataplane.ROADM"]], "simpleroadm (class in mnoptical.dataplane)": [[4, "mnoptical.dataplane.SimpleROADM"]], "switchbase (class in mnoptical.dataplane)": [[4, "mnoptical.dataplane.SwitchBase"]], "terminal (class in mnoptical.dataplane)": [[4, "mnoptical.dataplane.Terminal"]], "twotransceivertopo (class in mnoptical.dataplane)": [[4, "mnoptical.dataplane.TwoTransceiverTopo"]], "unilink (in module mnoptical.dataplane)": [[4, "mnoptical.dataplane.UniLink"]], "unidirectionalopticallink() (in module mnoptical.dataplane)": [[4, "mnoptical.dataplane.UnidirectionalOpticalLink"]], "__iter__() (mnoptical.dataplane.opticalnet method)": [[4, "mnoptical.dataplane.OpticalNet.__iter__"]], "__str__() (mnoptical.dataplane.monitor method)": [[4, "mnoptical.dataplane.Monitor.__str__"]], "_parseargs() (mnoptical.dataplane.opticallink method)": [[4, "mnoptical.dataplane.OpticalLink._parseArgs"]], "_parsespans() (mnoptical.dataplane.opticallink method)": [[4, "mnoptical.dataplane.OpticalLink._parseSpans"]], "addlink() (mnoptical.dataplane.opticalnet method)": [[4, "mnoptical.dataplane.OpticalNet.addLink"]], "addlinkcomponents() (mnoptical.dataplane.opticalnet method)": [[4, "mnoptical.dataplane.OpticalNet.addLinkComponents"]], "addmonitor() (mnoptical.dataplane.opticalnet method)": [[4, "mnoptical.dataplane.OpticalNet.addMonitor"]], "addswitch() (mnoptical.dataplane.opticalnet method)": [[4, "mnoptical.dataplane.OpticalNet.addSwitch"]], "addterminal() (mnoptical.dataplane.combsource method)": [[4, "mnoptical.dataplane.CombSource.addTerminal"]], "block() (mnoptical.dataplane.terminal method)": [[4, "mnoptical.dataplane.Terminal.block"]], "blockcookie (mnoptical.dataplane.terminal attribute)": [[4, "mnoptical.dataplane.Terminal.blockCookie"]], "build() (mnoptical.dataplane.twotransceivertopo method)": [[4, "mnoptical.dataplane.TwoTransceiverTopo.build"]], "cleanoptlinks() (in module mnoptical.dataplane)": [[4, "mnoptical.dataplane.cleanOptLinks"]], "cmd() (mnoptical.dataplane.switchbase method)": [[4, "mnoptical.dataplane.SwitchBase.cmd"]], "configtx() (mnoptical.dataplane.terminal method)": [[4, "mnoptical.dataplane.Terminal.configTx"]], "connect() (mnoptical.dataplane.roadm method)": [[4, "mnoptical.dataplane.ROADM.connect"]], "connect() (mnoptical.dataplane.terminal method)": [[4, "mnoptical.dataplane.Terminal.connect"]], "db (in module mnoptical.dataplane)": [[4, "mnoptical.dataplane.dB"]], "dbm (in module mnoptical.dataplane)": [[4, "mnoptical.dataplane.dBm"]], "defaultdpid() (mnoptical.dataplane.switchbase method)": [[4, "mnoptical.dataplane.SwitchBase.defaultDpid"]], "disableipv6() (in module mnoptical.dataplane)": [[4, "mnoptical.dataplane.disableIPv6"]], "dpflow() (mnoptical.dataplane.roadm method)": [[4, "mnoptical.dataplane.ROADM.dpFlow"]], "dpinstall() (mnoptical.dataplane.roadm method)": [[4, "mnoptical.dataplane.ROADM.dpInstall"]], "dpremove() (mnoptical.dataplane.roadm method)": [[4, "mnoptical.dataplane.ROADM.dpRemove"]], "dpreset() (mnoptical.dataplane.roadm method)": [[4, "mnoptical.dataplane.ROADM.dpReset"]], "dpidbase (mnoptical.dataplane.switchbase attribute)": [[4, "mnoptical.dataplane.SwitchBase.dpidBase"]], "dumplinkpower() (in module mnoptical.dataplane)": [[4, "mnoptical.dataplane.dumpLinkPower"]], "dumpnet() (in module mnoptical.dataplane)": [[4, "mnoptical.dataplane.dumpNet"]], "execed (mnoptical.dataplane.monitor attribute)": [[4, "mnoptical.dataplane.Monitor.execed"]], "formatsignals() (in module mnoptical.dataplane)": [[4, "mnoptical.dataplane.formatSignals"]], "install() (mnoptical.dataplane.roadm method)": [[4, "mnoptical.dataplane.ROADM.install"]], "intflist() (mnoptical.dataplane.monitor method)": [[4, "mnoptical.dataplane.Monitor.intfList"]], "intfname() (mnoptical.dataplane.opticallink method)": [[4, "mnoptical.dataplane.OpticalLink.intfName"]], "intfnames() (mnoptical.dataplane.monitor method)": [[4, "mnoptical.dataplane.Monitor.intfNames"]], "intfs (mnoptical.dataplane.monitor attribute)": [[4, "mnoptical.dataplane.Monitor.intfs"]], "isinput() (mnoptical.dataplane.opticalin method)": [[4, "mnoptical.dataplane.OpticalIn.isInput"]], "isinput() (mnoptical.dataplane.opticalintf method)": [[4, "mnoptical.dataplane.OpticalIntf.isInput"]], "isinput() (mnoptical.dataplane.opticalout method)": [[4, "mnoptical.dataplane.OpticalOut.isInput"]], "isoutput() (mnoptical.dataplane.opticalin method)": [[4, "mnoptical.dataplane.OpticalIn.isOutput"]], "isoutput() (mnoptical.dataplane.opticalintf method)": [[4, "mnoptical.dataplane.OpticalIntf.isOutput"]], "isoutput() (mnoptical.dataplane.opticalout method)": [[4, "mnoptical.dataplane.OpticalOut.isOutput"]], "km (in module mnoptical.dataplane)": [[4, "mnoptical.dataplane.km"]], "m (in module mnoptical.dataplane)": [[4, "mnoptical.dataplane.m"]], "maketransceiver() (mnoptical.dataplane.terminal static method)": [[4, "mnoptical.dataplane.Terminal.makeTransceiver"]], "mnoptical.dataplane": [[4, "module-mnoptical.dataplane"]], "model (mnoptical.dataplane.roadm attribute)": [[4, "mnoptical.dataplane.ROADM.model"]], "model (mnoptical.dataplane.terminal attribute)": [[4, "mnoptical.dataplane.Terminal.model"]], "modelclass (mnoptical.dataplane.roadm attribute)": [[4, "mnoptical.dataplane.ROADM.modelClass"]], "modelclass (mnoptical.dataplane.switchbase attribute)": [[4, "mnoptical.dataplane.SwitchBase.modelClass"]], "modelclass (mnoptical.dataplane.terminal attribute)": [[4, "mnoptical.dataplane.Terminal.modelClass"]], "module": [[4, "module-mnoptical.dataplane"], [5, "module-mnoptical.edfa_params"], [6, "module-mnoptical.examples.config_lroadmring"], [7, "module-mnoptical.examples.cosmostutorial"], [8, "module-mnoptical.examples.dbgtest"], [9, "module-mnoptical.examples"], [10, "module-mnoptical.examples.lroadmring"], [11, "module-mnoptical.examples.nc_add_connection"], [12, "module-mnoptical.examples.roadm_with_amps"], [13, "module-mnoptical.examples.sigcommtutorial"], [14, "module-mnoptical.examples.simplelink"], [15, "module-mnoptical.examples.singlelink"], [16, "module-mnoptical.examples.singleroadm"], [17, "module-mnoptical.examples.sixnodestopo"], [18, "module-mnoptical.examples.test-attenuator"], [19, "module-mnoptical.examples.unilinear1"], [20, "module-mnoptical.examples.unilinear2"], [21, "module-mnoptical.examples.uniring"], [22, "module-mnoptical.examples.uniroadmchain"], [23, "module-mnoptical"], [24, "module-mnoptical.link"], [25, "module-mnoptical.network"], [26, "module-mnoptical.node"], [27, "module-mnoptical.ofcdemo.Control_Test_Lum"], [28, "module-mnoptical.ofcdemo.Control_Test_Mininet_REST"], [29, "module-mnoptical.ofcdemo.Demo_Control"], [30, "module-mnoptical.ofcdemo.Demo_Control_2"], [31, "module-mnoptical.ofcdemo.Simulation_API"], [32, "module-mnoptical.ofcdemo.apsp"], [33, "module-mnoptical.ofcdemo.demo"], [34, "module-mnoptical.ofcdemo.demo_2021"], [35, "module-mnoptical.ofcdemo.demo_hwtopo"], [36, "module-mnoptical.ofcdemo.demolib"], [37, "module-mnoptical.ofcdemo.demolib_2021"], [38, "module-mnoptical.ofcdemo.fakecontroller"], [39, "module-mnoptical.ofcdemo.hwtopo"], [40, "module-mnoptical.ofcdemo"], [41, "module-mnoptical.ofcdemo.lroadm"], [42, "module-mnoptical.ofcdemo.lumentum_NETCONF_API"], [43, "module-mnoptical.ofcdemo.netconfserver"], [44, "module-mnoptical.ofcdemo.simpledemo"], [45, "module-mnoptical.rest"], [46, "module-mnoptical.terminal_params"], [47, "module-mnoptical.topo.cian_small_linear"], [48, "module-mnoptical.topo.cost239"], [49, "module-mnoptical.topo.deutsche_telekom"], [50, "module-mnoptical.topo.helper_funcs"], [51, "module-mnoptical.topo"], [52, "module-mnoptical.topo.linear"], [53, "module-mnoptical.topo.linear_multiloc"], [54, "module-mnoptical.topo.linear_params"], [55, "module-mnoptical.topo.ofc_demo"], [56, "module-mnoptical.topo.ring_topology"], [57, "module-mnoptical.units"], [58, "module-mnoptical.visualization"], [59, "module-mnoptical.visualize_topo"]], "monitors (mnoptical.dataplane.opticalnet attribute)": [[4, "mnoptical.dataplane.OpticalNet.monitors"]], "pexec() (mnoptical.dataplane.monitor method)": [[4, "mnoptical.dataplane.Monitor.pexec"]], "phyamp1 (mnoptical.dataplane.amplifierpair attribute)": [[4, "mnoptical.dataplane.AmplifierPair.phyAmp1"]], "phyamp2 (mnoptical.dataplane.amplifierpair attribute)": [[4, "mnoptical.dataplane.AmplifierPair.phyAmp2"]], "phyinstall() (mnoptical.dataplane.roadm method)": [[4, "mnoptical.dataplane.ROADM.phyInstall"]], "phylink1 (mnoptical.dataplane.opticallink attribute)": [[4, "mnoptical.dataplane.OpticalLink.phyLink1"]], "phylink2 (mnoptical.dataplane.opticallink attribute)": [[4, "mnoptical.dataplane.OpticalLink.phyLink2"]], "phyremove() (mnoptical.dataplane.roadm method)": [[4, "mnoptical.dataplane.ROADM.phyRemove"]], "phyreset() (mnoptical.dataplane.roadm method)": [[4, "mnoptical.dataplane.ROADM.phyReset"]], "receivercallback() (mnoptical.dataplane.terminal method)": [[4, "mnoptical.dataplane.Terminal.receiverCallback"]], "remove() (mnoptical.dataplane.roadm method)": [[4, "mnoptical.dataplane.ROADM.remove"]], "reset() (mnoptical.dataplane.roadm method)": [[4, "mnoptical.dataplane.ROADM.reset"]], "reset() (mnoptical.dataplane.switchbase method)": [[4, "mnoptical.dataplane.SwitchBase.reset"]], "reset() (mnoptical.dataplane.terminal method)": [[4, "mnoptical.dataplane.Terminal.reset"]], "restcleanmehandler() (mnoptical.dataplane.roadm method)": [[4, "mnoptical.dataplane.ROADM.restCleanmeHandler"]], "restconnecthandler() (mnoptical.dataplane.roadm method)": [[4, "mnoptical.dataplane.ROADM.restConnectHandler"]], "restconnecthandler() (mnoptical.dataplane.terminal method)": [[4, "mnoptical.dataplane.Terminal.restConnectHandler"]], "restmonitor() (mnoptical.dataplane.monitor method)": [[4, "mnoptical.dataplane.Monitor.restMonitor"]], "restportsdict() (mnoptical.dataplane.switchbase static method)": [[4, "mnoptical.dataplane.SwitchBase.restPortsDict"]], "restresethandler() (mnoptical.dataplane.switchbase method)": [[4, "mnoptical.dataplane.SwitchBase.restResetHandler"]], "restruleshandler() (mnoptical.dataplane.roadm method)": [[4, "mnoptical.dataplane.ROADM.restRulesHandler"]], "restsetgainhandler() (mnoptical.dataplane.opticalnet method)": [[4, "mnoptical.dataplane.OpticalNet.restSetgainHandler"]], "restsetripplehandler() (mnoptical.dataplane.opticalnet method)": [[4, "mnoptical.dataplane.OpticalNet.restSetrippleHandler"]], "restturnonhandler() (mnoptical.dataplane.combsource method)": [[4, "mnoptical.dataplane.CombSource.restTurnonHandler"]], "restturnonhandler() (mnoptical.dataplane.terminal method)": [[4, "mnoptical.dataplane.Terminal.restTurnonHandler"]], "ruletuple() (mnoptical.dataplane.roadm static method)": [[4, "mnoptical.dataplane.ROADM.ruleTuple"]], "set_ripple() (mnoptical.dataplane.opticalnet method)": [[4, "mnoptical.dataplane.OpticalNet.set_ripple"]], "setgaincmd() (mnoptical.dataplane.opticalnet method)": [[4, "mnoptical.dataplane.OpticalNet.setgainCmd"]], "start() (mnoptical.dataplane.roadm method)": [[4, "mnoptical.dataplane.ROADM.start"]], "start() (mnoptical.dataplane.terminal method)": [[4, "mnoptical.dataplane.Terminal.start"]], "turn_on() (mnoptical.dataplane.combsource method)": [[4, "mnoptical.dataplane.CombSource.turn_on"]], "turn_on() (mnoptical.dataplane.terminal method)": [[4, "mnoptical.dataplane.Terminal.turn_on"]], "twotransceivertest() (in module mnoptical.dataplane)": [[4, "mnoptical.dataplane.twoTransceiverTest"]], "txnum() (mnoptical.dataplane.terminal method)": [[4, "mnoptical.dataplane.Terminal.txnum"]], "unblock() (mnoptical.dataplane.terminal method)": [[4, "mnoptical.dataplane.Terminal.unblock"]], "update() (mnoptical.dataplane.simpleroadm method)": [[4, "mnoptical.dataplane.SimpleROADM.update"]], "waiting (mnoptical.dataplane.monitor attribute)": [[4, "mnoptical.dataplane.Monitor.waiting"]], "fibre_spectral_attenuation (in module mnoptical.edfa_params)": [[5, "mnoptical.edfa_params.fibre_spectral_attenuation"]], "mnoptical.edfa_params": [[5, "module-mnoptical.edfa_params"]], "ripple_functions (in module mnoptical.edfa_params)": [[5, "mnoptical.edfa_params.ripple_functions"]], "n (in module mnoptical.examples.config_lroadmring)": [[6, "mnoptical.examples.config_lroadmring.N"]], "allocchannels() (in module mnoptical.examples.config_lroadmring)": [[6, "mnoptical.examples.config_lroadmring.allocChannels"]], "config() (in module mnoptical.examples.config_lroadmring)": [[6, "mnoptical.examples.config_lroadmring.config"]], "configroadms() (in module mnoptical.examples.config_lroadmring)": [[6, "mnoptical.examples.config_lroadmring.configRoadms"]], "configswitches() (in module mnoptical.examples.config_lroadmring)": [[6, "mnoptical.examples.config_lroadmring.configSwitches"]], "configterminals() (in module mnoptical.examples.config_lroadmring)": [[6, "mnoptical.examples.config_lroadmring.configTerminals"]], "dumpchmap() (in module mnoptical.examples.config_lroadmring)": [[6, "mnoptical.examples.config_lroadmring.dumpChmap"]], "genconnection() (in module mnoptical.examples.config_lroadmring)": [[6, "mnoptical.examples.config_lroadmring.genConnection"]], "genconnections() (in module mnoptical.examples.config_lroadmring)": [[6, "mnoptical.examples.config_lroadmring.genConnections"]], "mnoptical.examples.config_lroadmring": [[6, "module-mnoptical.examples.config_lroadmring"]], "tutorialtopo (class in mnoptical.examples.cosmostutorial)": [[7, "mnoptical.examples.cosmostutorial.TutorialTopo"]], "arp() (in module mnoptical.examples.cosmostutorial)": [[7, "mnoptical.examples.cosmostutorial.arp"]], "build() (mnoptical.examples.cosmostutorial.tutorialtopo method)": [[7, "mnoptical.examples.cosmostutorial.TutorialTopo.build"]], "ch (in module mnoptical.examples.cosmostutorial)": [[7, "mnoptical.examples.cosmostutorial.ch"]], "ch2 (in module mnoptical.examples.cosmostutorial)": [[7, "mnoptical.examples.cosmostutorial.ch2"]], "config0() (in module mnoptical.examples.cosmostutorial)": [[7, "mnoptical.examples.cosmostutorial.config0"]], "mnoptical.examples.cosmostutorial": [[7, "module-mnoptical.examples.cosmostutorial"]], "password (in module mnoptical.examples.cosmostutorial)": [[7, "mnoptical.examples.cosmostutorial.password"]], "sslkeyfile (in module mnoptical.examples.cosmostutorial)": [[7, "mnoptical.examples.cosmostutorial.sslkeyfile"]], "test() (in module mnoptical.examples.cosmostutorial)": [[7, "mnoptical.examples.cosmostutorial.test"]], "topo (in module mnoptical.examples.cosmostutorial)": [[7, "mnoptical.examples.cosmostutorial.topo"]], "username (in module mnoptical.examples.cosmostutorial)": [[7, "mnoptical.examples.cosmostutorial.username"]], "wdmlink() (mnoptical.examples.cosmostutorial.tutorialtopo method)": [[7, "mnoptical.examples.cosmostutorial.TutorialTopo.wdmLink"]], "dbgtest() (in module mnoptical.examples.dbgtest)": [[8, "mnoptical.examples.dbgtest.dbgtest"]], "mnoptical.examples.dbgtest": [[8, "module-mnoptical.examples.dbgtest"]], "topo (in module mnoptical.examples.dbgtest)": [[8, "mnoptical.examples.dbgtest.topo"]], "mnoptical.examples": [[9, "module-mnoptical.examples"]], "lumentumbase (class in mnoptical.examples.lroadmring)": [[10, "mnoptical.examples.lroadmring.LumentumBase"]], "lumentumring (class in mnoptical.examples.lroadmring)": [[10, "mnoptical.examples.lroadmring.LumentumRing"]], "addnetworknodes() (mnoptical.examples.lroadmring.lumentumbase method)": [[10, "mnoptical.examples.lroadmring.LumentumBase.addNetworkNodes"]], "addnodelinks() (mnoptical.examples.lroadmring.lumentumbase method)": [[10, "mnoptical.examples.lroadmring.LumentumBase.addNodeLinks"]], "build() (mnoptical.examples.lroadmring.lumentumring method)": [[10, "mnoptical.examples.lroadmring.LumentumRing.build"]], "ethbase (mnoptical.examples.lroadmring.lumentumbase attribute)": [[10, "mnoptical.examples.lroadmring.LumentumBase.ethbase"]], "hostport (mnoptical.examples.lroadmring.lumentumbase attribute)": [[10, "mnoptical.examples.lroadmring.LumentumBase.hostport"]], "listenportbase (mnoptical.examples.lroadmring.lumentumbase attribute)": [[10, "mnoptical.examples.lroadmring.LumentumBase.listenPortBase"]], "mnoptical.examples.lroadmring": [[10, "module-mnoptical.examples.lroadmring"]], "nodenames() (mnoptical.examples.lroadmring.lumentumbase static method)": [[10, "mnoptical.examples.lroadmring.LumentumBase.nodeNames"]], "password (in module mnoptical.examples.lroadmring)": [[10, "mnoptical.examples.lroadmring.password"]], "rxbase (mnoptical.examples.lroadmring.lumentumbase attribute)": [[10, "mnoptical.examples.lroadmring.LumentumBase.rxbase"]], "sslkeyfile (in module mnoptical.examples.lroadmring)": [[10, "mnoptical.examples.lroadmring.sslkeyfile"]], "test() (in module mnoptical.examples.lroadmring)": [[10, "mnoptical.examples.lroadmring.test"]], "topo (in module mnoptical.examples.lroadmring)": [[10, "mnoptical.examples.lroadmring.topo"]], "txbase (mnoptical.examples.lroadmring.lumentumbase attribute)": [[10, "mnoptical.examples.lroadmring.LumentumBase.txbase"]], "username (in module mnoptical.examples.lroadmring)": [[10, "mnoptical.examples.lroadmring.username"]], "wdmlink() (mnoptical.examples.lroadmring.lumentumbase method)": [[10, "mnoptical.examples.lroadmring.LumentumBase.wdmLink"]], "args (in module mnoptical.examples.nc_add_connection)": [[11, "mnoptical.examples.nc_add_connection.args"]], "connect() (in module mnoptical.examples.nc_add_connection)": [[11, "mnoptical.examples.nc_add_connection.connect"]], "mnoptical.examples.nc_add_connection": [[11, "module-mnoptical.examples.nc_add_connection"]], "singleroadmtopo (class in mnoptical.examples.roadm_with_amps)": [[12, "mnoptical.examples.roadm_with_amps.SingleROADMTopo"]], "add_amp() (in module mnoptical.examples.roadm_with_amps)": [[12, "mnoptical.examples.roadm_with_amps.add_amp"]], "build() (mnoptical.examples.roadm_with_amps.singleroadmtopo method)": [[12, "mnoptical.examples.roadm_with_amps.SingleROADMTopo.build"]], "mnoptical.examples.roadm_with_amps": [[12, "module-mnoptical.examples.roadm_with_amps"]], "test() (in module mnoptical.examples.roadm_with_amps)": [[12, "mnoptical.examples.roadm_with_amps.test"]], "topo (in module mnoptical.examples.roadm_with_amps)": [[12, "mnoptical.examples.roadm_with_amps.topo"]], "netconfportbase (in module mnoptical.examples.sigcommtutorial)": [[13, "mnoptical.examples.sigcommtutorial.NetconfPortBase"]], "tutorialtopo (class in mnoptical.examples.sigcommtutorial)": [[13, "mnoptical.examples.sigcommtutorial.TutorialTopo"]], "build() (mnoptical.examples.sigcommtutorial.tutorialtopo method)": [[13, "mnoptical.examples.sigcommtutorial.TutorialTopo.build"]], "ch (in module mnoptical.examples.sigcommtutorial)": [[13, "mnoptical.examples.sigcommtutorial.ch"]], "comb1_power (in module mnoptical.examples.sigcommtutorial)": [[13, "mnoptical.examples.sigcommtutorial.comb1_power"]], "comb2_power (in module mnoptical.examples.sigcommtutorial)": [[13, "mnoptical.examples.sigcommtutorial.comb2_power"]], "comb_src_range (in module mnoptical.examples.sigcommtutorial)": [[13, "mnoptical.examples.sigcommtutorial.comb_src_range"]], "mnoptical.examples.sigcommtutorial": [[13, "module-mnoptical.examples.sigcommtutorial"]], "password (in module mnoptical.examples.sigcommtutorial)": [[13, "mnoptical.examples.sigcommtutorial.password"]], "sslkeyfile (in module mnoptical.examples.sigcommtutorial)": [[13, "mnoptical.examples.sigcommtutorial.sslkeyfile"]], "topo (in module mnoptical.examples.sigcommtutorial)": [[13, "mnoptical.examples.sigcommtutorial.topo"]], "txcount (in module mnoptical.examples.sigcommtutorial)": [[13, "mnoptical.examples.sigcommtutorial.txcount"]], "username (in module mnoptical.examples.sigcommtutorial)": [[13, "mnoptical.examples.sigcommtutorial.username"]], "wdmlink() (mnoptical.examples.sigcommtutorial.tutorialtopo method)": [[13, "mnoptical.examples.sigcommtutorial.TutorialTopo.wdmLink"]], "simplelinktopo (class in mnoptical.examples.simplelink)": [[14, "mnoptical.examples.simplelink.SimpleLinkTopo"]], "build() (mnoptical.examples.simplelink.simplelinktopo method)": [[14, "mnoptical.examples.simplelink.SimpleLinkTopo.build"]], "mnoptical.examples.simplelink": [[14, "module-mnoptical.examples.simplelink"]], "test() (in module mnoptical.examples.simplelink)": [[14, "mnoptical.examples.simplelink.test"]], "topo (in module mnoptical.examples.simplelink)": [[14, "mnoptical.examples.simplelink.topo"]], "singlelinktopo (class in mnoptical.examples.singlelink)": [[15, "mnoptical.examples.singlelink.SingleLinkTopo"]], "build() (mnoptical.examples.singlelink.singlelinktopo method)": [[15, "mnoptical.examples.singlelink.SingleLinkTopo.build"]], "mnoptical.examples.singlelink": [[15, "module-mnoptical.examples.singlelink"]], "test() (in module mnoptical.examples.singlelink)": [[15, "mnoptical.examples.singlelink.test"]], "topo (in module mnoptical.examples.singlelink)": [[15, "mnoptical.examples.singlelink.topo"]], "singleroadmtopo (class in mnoptical.examples.singleroadm)": [[16, "mnoptical.examples.singleroadm.SingleROADMTopo"]], "build() (mnoptical.examples.singleroadm.singleroadmtopo method)": [[16, "mnoptical.examples.singleroadm.SingleROADMTopo.build"]], "mnoptical.examples.singleroadm": [[16, "module-mnoptical.examples.singleroadm"]], "plotnet() (in module mnoptical.examples.singleroadm)": [[16, "mnoptical.examples.singleroadm.plotNet"]], "test() (in module mnoptical.examples.singleroadm)": [[16, "mnoptical.examples.singleroadm.test"]], "topo (in module mnoptical.examples.singleroadm)": [[16, "mnoptical.examples.singleroadm.topo"]], "sixroadmtopo (class in mnoptical.examples.sixnodestopo)": [[17, "mnoptical.examples.sixnodestopo.SixROADMTopo"]], "build() (mnoptical.examples.sixnodestopo.sixroadmtopo method)": [[17, "mnoptical.examples.sixnodestopo.SixROADMTopo.build"]], "mnoptical.examples.sixnodestopo": [[17, "module-mnoptical.examples.sixnodestopo"]], "plotnet() (in module mnoptical.examples.sixnodestopo)": [[17, "mnoptical.examples.sixnodestopo.plotNet"]], "topo (in module mnoptical.examples.sixnodestopo)": [[17, "mnoptical.examples.sixnodestopo.topo"]], "multiroadmtopo (class in mnoptical.examples.test-attenuator)": [[18, "mnoptical.examples.test-attenuator.MultiROADMTopo"]], "add_amp() (in module mnoptical.examples.test-attenuator)": [[18, "mnoptical.examples.test-attenuator.add_amp"]], "build() (mnoptical.examples.test-attenuator.multiroadmtopo method)": [[18, "mnoptical.examples.test-attenuator.MultiROADMTopo.build"]], "confignet() (mnoptical.examples.test-attenuator.multiroadmtopo method)": [[18, "mnoptical.examples.test-attenuator.MultiROADMTopo.configNet"]], "get_monitor_power() (mnoptical.examples.test-attenuator.multiroadmtopo method)": [[18, "mnoptical.examples.test-attenuator.MultiROADMTopo.get_monitor_power"]], "mnoptical.examples.test-attenuator": [[18, "module-mnoptical.examples.test-attenuator"]], "plotnet() (in module mnoptical.examples.test-attenuator)": [[18, "mnoptical.examples.test-attenuator.plotNet"]], "test() (in module mnoptical.examples.test-attenuator)": [[18, "mnoptical.examples.test-attenuator.test"]], "topo (in module mnoptical.examples.test-attenuator)": [[18, "mnoptical.examples.test-attenuator.topo"]], "cli (class in mnoptical.examples.unilinear1)": [[19, "mnoptical.examples.unilinear1.CLI"]], "opticaltopo (class in mnoptical.examples.unilinear1)": [[19, "mnoptical.examples.unilinear1.OpticalTopo"]], "unilineartopo (class in mnoptical.examples.unilinear1)": [[19, "mnoptical.examples.unilinear1.UniLinearTopo"]], "addroadm() (mnoptical.examples.unilinear1.opticaltopo method)": [[19, "mnoptical.examples.unilinear1.OpticalTopo.addROADM"]], "addterminal() (mnoptical.examples.unilinear1.opticaltopo method)": [[19, "mnoptical.examples.unilinear1.OpticalTopo.addTerminal"]], "addport() (mnoptical.examples.unilinear1.unilineartopo method)": [[19, "mnoptical.examples.unilinear1.UniLinearTopo.addport"]], "build() (mnoptical.examples.unilinear1.unilineartopo method)": [[19, "mnoptical.examples.unilinear1.UniLinearTopo.build"]], "config() (in module mnoptical.examples.unilinear1)": [[19, "mnoptical.examples.unilinear1.config"]], "do_config() (mnoptical.examples.unilinear1.cli method)": [[19, "mnoptical.examples.unilinear1.CLI.do_config"]], "downlink() (mnoptical.examples.unilinear1.unilineartopo method)": [[19, "mnoptical.examples.unilinear1.UniLinearTopo.downlink"]], "dropport() (mnoptical.examples.unilinear1.unilineartopo method)": [[19, "mnoptical.examples.unilinear1.UniLinearTopo.dropport"]], "ethlink() (mnoptical.examples.unilinear1.opticaltopo method)": [[19, "mnoptical.examples.unilinear1.OpticalTopo.ethLink"]], "ethport() (mnoptical.examples.unilinear1.unilineartopo method)": [[19, "mnoptical.examples.unilinear1.UniLinearTopo.ethport"]], "linein (mnoptical.examples.unilinear1.unilineartopo attribute)": [[19, "mnoptical.examples.unilinear1.UniLinearTopo.linein"]], "lineout (mnoptical.examples.unilinear1.unilineartopo attribute)": [[19, "mnoptical.examples.unilinear1.UniLinearTopo.lineout"]], "mnoptical.examples.unilinear1": [[19, "module-mnoptical.examples.unilinear1"]], "test() (in module mnoptical.examples.unilinear1)": [[19, "mnoptical.examples.unilinear1.test"]], "topo (in module mnoptical.examples.unilinear1)": [[19, "mnoptical.examples.unilinear1.topo"]], "uplink() (mnoptical.examples.unilinear1.unilineartopo method)": [[19, "mnoptical.examples.unilinear1.UniLinearTopo.uplink"]], "wdmlink() (mnoptical.examples.unilinear1.opticaltopo method)": [[19, "mnoptical.examples.unilinear1.OpticalTopo.wdmLink"]], "cli (class in mnoptical.examples.unilinear2)": [[20, "mnoptical.examples.unilinear2.CLI"]], "opticaltopo (class in mnoptical.examples.unilinear2)": [[20, "mnoptical.examples.unilinear2.OpticalTopo"]], "unilineartopo2 (class in mnoptical.examples.unilinear2)": [[20, "mnoptical.examples.unilinear2.UniLinearTopo2"]], "addroadm() (mnoptical.examples.unilinear2.opticaltopo method)": [[20, "mnoptical.examples.unilinear2.OpticalTopo.addROADM"]], "addterminal() (mnoptical.examples.unilinear2.opticaltopo method)": [[20, "mnoptical.examples.unilinear2.OpticalTopo.addTerminal"]], "addport() (mnoptical.examples.unilinear2.unilineartopo2 method)": [[20, "mnoptical.examples.unilinear2.UniLinearTopo2.addport"]], "build() (mnoptical.examples.unilinear2.unilineartopo2 method)": [[20, "mnoptical.examples.unilinear2.UniLinearTopo2.build"]], "config() (in module mnoptical.examples.unilinear2)": [[20, "mnoptical.examples.unilinear2.config"]], "do_config() (mnoptical.examples.unilinear2.cli method)": [[20, "mnoptical.examples.unilinear2.CLI.do_config"]], "downlink() (mnoptical.examples.unilinear2.unilineartopo2 method)": [[20, "mnoptical.examples.unilinear2.UniLinearTopo2.downlink"]], "dropport() (mnoptical.examples.unilinear2.unilineartopo2 method)": [[20, "mnoptical.examples.unilinear2.UniLinearTopo2.dropport"]], "eastin (mnoptical.examples.unilinear2.unilineartopo2 attribute)": [[20, "mnoptical.examples.unilinear2.UniLinearTopo2.eastin"]], "eastout (mnoptical.examples.unilinear2.unilineartopo2 attribute)": [[20, "mnoptical.examples.unilinear2.UniLinearTopo2.eastout"]], "ethlink() (mnoptical.examples.unilinear2.opticaltopo method)": [[20, "mnoptical.examples.unilinear2.OpticalTopo.ethLink"]], "ethport() (mnoptical.examples.unilinear2.unilineartopo2 method)": [[20, "mnoptical.examples.unilinear2.UniLinearTopo2.ethport"]], "linein() (mnoptical.examples.unilinear2.unilineartopo2 method)": [[20, "mnoptical.examples.unilinear2.UniLinearTopo2.linein"]], "lineout() (mnoptical.examples.unilinear2.unilineartopo2 method)": [[20, "mnoptical.examples.unilinear2.UniLinearTopo2.lineout"]], "mnoptical.examples.unilinear2": [[20, "module-mnoptical.examples.unilinear2"]], "test() (in module mnoptical.examples.unilinear2)": [[20, "mnoptical.examples.unilinear2.test"]], "topo (in module mnoptical.examples.unilinear2)": [[20, "mnoptical.examples.unilinear2.topo"]], "uplink() (mnoptical.examples.unilinear2.unilineartopo2 method)": [[20, "mnoptical.examples.unilinear2.UniLinearTopo2.uplink"]], "wdmlink() (mnoptical.examples.unilinear2.opticaltopo method)": [[20, "mnoptical.examples.unilinear2.OpticalTopo.wdmLink"]], "westin (mnoptical.examples.unilinear2.unilineartopo2 attribute)": [[20, "mnoptical.examples.unilinear2.UniLinearTopo2.westin"]], "westout (mnoptical.examples.unilinear2.unilineartopo2 attribute)": [[20, "mnoptical.examples.unilinear2.UniLinearTopo2.westout"]], "cli (class in mnoptical.examples.uniring)": [[21, "mnoptical.examples.uniring.CLI"]], "uniringtopo (class in mnoptical.examples.uniring)": [[21, "mnoptical.examples.uniring.UniRingTopo"]], "add() (in module mnoptical.examples.uniring)": [[21, "mnoptical.examples.uniring.add"]], "build() (mnoptical.examples.uniring.uniringtopo method)": [[21, "mnoptical.examples.uniring.UniRingTopo.build"]], "config() (in module mnoptical.examples.uniring)": [[21, "mnoptical.examples.uniring.config"]], "configopticalnet() (in module mnoptical.examples.uniring)": [[21, "mnoptical.examples.uniring.configOpticalNet"]], "configpacketnet() (in module mnoptical.examples.uniring)": [[21, "mnoptical.examples.uniring.configPacketNet"]], "do_config() (mnoptical.examples.uniring.cli method)": [[21, "mnoptical.examples.uniring.CLI.do_config"]], "drop() (in module mnoptical.examples.uniring)": [[21, "mnoptical.examples.uniring.drop"]], "fwd() (in module mnoptical.examples.uniring)": [[21, "mnoptical.examples.uniring.fwd"]], "mnoptical.examples.uniring": [[21, "module-mnoptical.examples.uniring"]], "test() (in module mnoptical.examples.uniring)": [[21, "mnoptical.examples.uniring.test"]], "topo (in module mnoptical.examples.uniring)": [[21, "mnoptical.examples.uniring.topo"]], "uniroadmchain (class in mnoptical.examples.uniroadmchain)": [[22, "mnoptical.examples.uniroadmchain.UniRoadmChain"]], "build() (mnoptical.examples.uniroadmchain.uniroadmchain method)": [[22, "mnoptical.examples.uniroadmchain.UniRoadmChain.build"]], "confignet() (mnoptical.examples.uniroadmchain.uniroadmchain method)": [[22, "mnoptical.examples.uniroadmchain.UniRoadmChain.configNet"]], "mnoptical.examples.uniroadmchain": [[22, "module-mnoptical.examples.uniroadmchain"]], "topo (in module mnoptical.examples.uniroadmchain)": [[22, "mnoptical.examples.uniroadmchain.topo"]], "mnoptical": [[23, "module-mnoptical"]], "bigo_srs_model (class in mnoptical.link)": [[24, "mnoptical.link.Bigo_SRS_Model"]], "link (class in mnoptical.link)": [[24, "mnoptical.link.Link"]], "srs_effect_model (class in mnoptical.link)": [[24, "mnoptical.link.SRS_Effect_Model"]], "span (class in mnoptical.link)": [[24, "mnoptical.link.Span"]], "spantuple (in module mnoptical.link)": [[24, "mnoptical.link.SpanTuple"]], "sylvestre_srs_model (class in mnoptical.link)": [[24, "mnoptical.link.Sylvestre_SRS_Model"]], "zirngibl_general_model (class in mnoptical.link)": [[24, "mnoptical.link.Zirngibl_General_Model"]], "__repr__() (mnoptical.link.link method)": [[24, "mnoptical.link.Link.__repr__"]], "__repr__() (mnoptical.link.span method)": [[24, "mnoptical.link.Span.__repr__"]], "anonymous (mnoptical.link.span attribute)": [[24, "mnoptical.link.Span.anonymous"]], "attenuation() (mnoptical.link.span method)": [[24, "mnoptical.link.Span.attenuation"]], "beta2() (mnoptical.link.span method)": [[24, "mnoptical.link.Span.beta2"]], "describe() (mnoptical.link.link method)": [[24, "mnoptical.link.Link.describe"]], "describe() (mnoptical.link.span method)": [[24, "mnoptical.link.Span.describe"]], "get_fibre_spectral_attenuation() (mnoptical.link.span method)": [[24, "mnoptical.link.Span.get_fibre_spectral_attenuation"]], "gn_model() (mnoptical.link.span method)": [[24, "mnoptical.link.Span.gn_model"]], "ids (mnoptical.link.span attribute)": [[24, "mnoptical.link.Span.ids"]], "include_optical_signal_in() (mnoptical.link.link method)": [[24, "mnoptical.link.Link.include_optical_signal_in"]], "include_optical_signal_in() (mnoptical.link.span method)": [[24, "mnoptical.link.Span.include_optical_signal_in"]], "include_optical_signal_out() (mnoptical.link.link method)": [[24, "mnoptical.link.Link.include_optical_signal_out"]], "include_optical_signal_out() (mnoptical.link.span method)": [[24, "mnoptical.link.Span.include_optical_signal_out"]], "length() (mnoptical.link.link method)": [[24, "mnoptical.link.Link.length"]], "mnoptical.link": [[24, "module-mnoptical.link"]], "output_nonlinear_noise() (mnoptical.link.span method)": [[24, "mnoptical.link.Span.output_nonlinear_noise"]], "propagate() (mnoptical.link.link method)": [[24, "mnoptical.link.Link.propagate"]], "propagate() (mnoptical.link.span method)": [[24, "mnoptical.link.Span.propagate"]], "psi_factor() (mnoptical.link.span static method)": [[24, "mnoptical.link.Span.psi_factor"]], "remove_optical_signal() (mnoptical.link.link method)": [[24, "mnoptical.link.Link.remove_optical_signal"]], "remove_optical_signal() (mnoptical.link.span method)": [[24, "mnoptical.link.Span.remove_optical_signal"]], "reset() (mnoptical.link.link method)": [[24, "mnoptical.link.Link.reset"]], "reset() (mnoptical.link.span method)": [[24, "mnoptical.link.Span.reset"]], "set_input_port() (mnoptical.link.span method)": [[24, "mnoptical.link.Span.set_input_port"]], "set_output_port() (mnoptical.link.span method)": [[24, "mnoptical.link.Span.set_output_port"]], "srs_model (mnoptical.link.link attribute)": [[24, "mnoptical.link.Link.srs_model"]], "srs_models (mnoptical.link.link attribute)": [[24, "mnoptical.link.Link.srs_models"]], "network (class in mnoptical.network)": [[25, "mnoptical.network.Network"]], "add_amplifier() (mnoptical.network.network method)": [[25, "mnoptical.network.Network.add_amplifier"]], "add_link() (mnoptical.network.network method)": [[25, "mnoptical.network.Network.add_link"]], "add_lt() (mnoptical.network.network method)": [[25, "mnoptical.network.Network.add_lt"]], "add_roadm() (mnoptical.network.network method)": [[25, "mnoptical.network.Network.add_roadm"]], "describe() (mnoptical.network.network method)": [[25, "mnoptical.network.Network.describe"]], "find_link_and_in_port_from_nodes() (mnoptical.network.network method)": [[25, "mnoptical.network.Network.find_link_and_in_port_from_nodes"]], "find_link_and_out_port_from_nodes() (mnoptical.network.network method)": [[25, "mnoptical.network.Network.find_link_and_out_port_from_nodes"]], "find_link_from_nodes() (mnoptical.network.network method)": [[25, "mnoptical.network.Network.find_link_from_nodes"]], "find_out_port_from_link() (mnoptical.network.network static method)": [[25, "mnoptical.network.Network.find_out_port_from_link"]], "mnoptical.network": [[25, "module-mnoptical.network"]], "amplifier (class in mnoptical.node)": [[26, "mnoptical.node.Amplifier"]], "attenuator (class in mnoptical.node)": [[26, "mnoptical.node.Attenuator"]], "lineterminal (class in mnoptical.node)": [[26, "mnoptical.node.LineTerminal"]], "monitor (class in mnoptical.node)": [[26, "mnoptical.node.Monitor"]], "node (class in mnoptical.node)": [[26, "mnoptical.node.Node"]], "nodeauditing (class in mnoptical.node)": [[26, "mnoptical.node.NodeAuditing"]], "opticalsignal (class in mnoptical.node)": [[26, "mnoptical.node.OpticalSignal"]], "roadm (class in mnoptical.node)": [[26, "mnoptical.node.Roadm"]], "signaltracing (class in mnoptical.node)": [[26, "mnoptical.node.SignalTracing"]], "switchrule (in module mnoptical.node)": [[26, "mnoptical.node.SwitchRule"]], "transceiver (class in mnoptical.node)": [[26, "mnoptical.node.Transceiver"]], "__repr__() (mnoptical.node.amplifier method)": [[26, "mnoptical.node.Amplifier.__repr__"]], "__repr__() (mnoptical.node.monitor method)": [[26, "mnoptical.node.Monitor.__repr__"]], "__repr__() (mnoptical.node.node method)": [[26, "mnoptical.node.Node.__repr__"]], "__repr__() (mnoptical.node.opticalsignal method)": [[26, "mnoptical.node.OpticalSignal.__repr__"]], "add_transceiver() (mnoptical.node.lineterminal method)": [[26, "mnoptical.node.LineTerminal.add_transceiver"]], "add_transceivers() (mnoptical.node.lineterminal method)": [[26, "mnoptical.node.LineTerminal.add_transceivers"]], "assoc_channel() (mnoptical.node.lineterminal method)": [[26, "mnoptical.node.LineTerminal.assoc_channel"]], "assoc_loc_in() (mnoptical.node.opticalsignal method)": [[26, "mnoptical.node.OpticalSignal.assoc_loc_in"]], "assoc_loc_out() (mnoptical.node.opticalsignal method)": [[26, "mnoptical.node.OpticalSignal.assoc_loc_out"]], "assoc_optical_signal() (mnoptical.node.transceiver method)": [[26, "mnoptical.node.Transceiver.assoc_optical_signal"]], "assoc_rx_to_channel() (mnoptical.node.lineterminal method)": [[26, "mnoptical.node.LineTerminal.assoc_rx_to_channel"]], "assoc_tx_to_channel() (mnoptical.node.lineterminal method)": [[26, "mnoptical.node.LineTerminal.assoc_tx_to_channel"]], "attenuation() (mnoptical.node.attenuator method)": [[26, "mnoptical.node.Attenuator.attenuation"]], "can_switch() (mnoptical.node.roadm method)": [[26, "mnoptical.node.Roadm.can_switch"]], "can_switch_from_lt() (mnoptical.node.roadm method)": [[26, "mnoptical.node.Roadm.can_switch_from_lt"]], "channel_paths() (mnoptical.node.signaltracing static method)": [[26, "mnoptical.node.SignalTracing.channel_paths"]], "check_link_propagation() (mnoptical.node.nodeauditing static method)": [[26, "mnoptical.node.NodeAuditing.check_link_propagation"]], "check_roadm_propagation() (mnoptical.node.nodeauditing static method)": [[26, "mnoptical.node.NodeAuditing.check_roadm_propagation"]], "check_switch_rule() (mnoptical.node.roadm method)": [[26, "mnoptical.node.Roadm.check_switch_rule"]], "compute_carrier_attenuation() (mnoptical.node.roadm method)": [[26, "mnoptical.node.Roadm.compute_carrier_attenuation"]], "compute_power_excursions() (mnoptical.node.amplifier method)": [[26, "mnoptical.node.Amplifier.compute_power_excursions"]], "debugger (mnoptical.node.node attribute)": [[26, "mnoptical.node.Node.debugger"]], "delete_switch_rule() (mnoptical.node.roadm method)": [[26, "mnoptical.node.Roadm.delete_switch_rule"]], "delete_switch_rules() (mnoptical.node.roadm method)": [[26, "mnoptical.node.Roadm.delete_switch_rules"]], "describe() (mnoptical.node.node method)": [[26, "mnoptical.node.Node.describe"]], "describe() (mnoptical.node.opticalsignal method)": [[26, "mnoptical.node.OpticalSignal.describe"]], "describe() (mnoptical.node.transceiver method)": [[26, "mnoptical.node.Transceiver.describe"]], "disassoc_rx_to_channel() (mnoptical.node.lineterminal method)": [[26, "mnoptical.node.LineTerminal.disassoc_rx_to_channel"]], "disassoc_tx_to_channel() (mnoptical.node.lineterminal method)": [[26, "mnoptical.node.LineTerminal.disassoc_tx_to_channel"]], "existing_transceiver() (mnoptical.node.lineterminal method)": [[26, "mnoptical.node.LineTerminal.existing_transceiver"]], "fast_switch() (mnoptical.node.roadm method)": [[26, "mnoptical.node.Roadm.fast_switch"]], "get_ase_noise() (mnoptical.node.monitor method)": [[26, "mnoptical.node.Monitor.get_ase_noise"]], "get_ber() (mnoptical.node.monitor method)": [[26, "mnoptical.node.Monitor.get_ber"]], "get_dict_ase_noise() (mnoptical.node.monitor method)": [[26, "mnoptical.node.Monitor.get_dict_ase_noise"]], "get_dict_gosnr() (mnoptical.node.monitor method)": [[26, "mnoptical.node.Monitor.get_dict_gosnr"]], "get_dict_nli_noise() (mnoptical.node.monitor method)": [[26, "mnoptical.node.Monitor.get_dict_nli_noise"]], "get_dict_osnr() (mnoptical.node.monitor method)": [[26, "mnoptical.node.Monitor.get_dict_osnr"]], "get_dict_power() (mnoptical.node.monitor method)": [[26, "mnoptical.node.Monitor.get_dict_power"]], "get_gosnr() (mnoptical.node.monitor method)": [[26, "mnoptical.node.Monitor.get_gosnr"]], "get_in_port() (mnoptical.node.roadm method)": [[26, "mnoptical.node.Roadm.get_in_port"]], "get_list_gosnr() (mnoptical.node.monitor method)": [[26, "mnoptical.node.Monitor.get_list_gosnr"]], "get_list_osnr() (mnoptical.node.monitor method)": [[26, "mnoptical.node.Monitor.get_list_osnr"]], "get_nli_noise() (mnoptical.node.monitor method)": [[26, "mnoptical.node.Monitor.get_nli_noise"]], "get_noise_figure() (mnoptical.node.amplifier static method)": [[26, "mnoptical.node.Amplifier.get_noise_figure"]], "get_optical_signals() (mnoptical.node.lineterminal method)": [[26, "mnoptical.node.LineTerminal.get_optical_signals"]], "get_optical_signals() (mnoptical.node.monitor method)": [[26, "mnoptical.node.Monitor.get_optical_signals"]], "get_optical_signals() (mnoptical.node.roadm method)": [[26, "mnoptical.node.Roadm.get_optical_signals"]], "get_osnr() (mnoptical.node.monitor method)": [[26, "mnoptical.node.Monitor.get_osnr"]], "get_port() (mnoptical.node.signaltracing static method)": [[26, "mnoptical.node.SignalTracing.get_port"]], "get_power() (mnoptical.node.monitor method)": [[26, "mnoptical.node.Monitor.get_power"]], "get_wavelength_dependent_gain() (mnoptical.node.amplifier method)": [[26, "mnoptical.node.Amplifier.get_wavelength_dependent_gain"]], "gosnr() (mnoptical.node.lineterminal static method)": [[26, "mnoptical.node.LineTerminal.gosnr"]], "include_optical_signal_in() (mnoptical.node.node method)": [[26, "mnoptical.node.Node.include_optical_signal_in"]], "include_optical_signal_in() (mnoptical.node.roadm method)": [[26, "mnoptical.node.Roadm.include_optical_signal_in"]], "include_optical_signal_out() (mnoptical.node.node method)": [[26, "mnoptical.node.Node.include_optical_signal_out"]], "input_port_base (mnoptical.node.node attribute)": [[26, "mnoptical.node.Node.input_port_base"]], "install_switch_rule() (mnoptical.node.roadm method)": [[26, "mnoptical.node.Roadm.install_switch_rule"]], "load_wavelength_dependent_gain() (mnoptical.node.amplifier method)": [[26, "mnoptical.node.Amplifier.load_wavelength_dependent_gain"]], "mnoptical.node": [[26, "module-mnoptical.node"]], "mock_amp_gain_adjust() (mnoptical.node.amplifier method)": [[26, "mnoptical.node.Amplifier.mock_amp_gain_adjust"]], "modify_mode() (mnoptical.node.monitor method)": [[26, "mnoptical.node.Monitor.modify_mode"]], "monitor_query() (mnoptical.node.amplifier method)": [[26, "mnoptical.node.Amplifier.monitor_query"]], "monitor_query() (mnoptical.node.lineterminal method)": [[26, "mnoptical.node.LineTerminal.monitor_query"]], "monitor_query() (mnoptical.node.roadm method)": [[26, "mnoptical.node.Roadm.monitor_query"]], "nli_compensation() (mnoptical.node.amplifier method)": [[26, "mnoptical.node.Amplifier.nli_compensation"]], "osnr() (mnoptical.node.lineterminal static method)": [[26, "mnoptical.node.LineTerminal.osnr"]], "output_amplified_power() (mnoptical.node.amplifier method)": [[26, "mnoptical.node.Amplifier.output_amplified_power"]], "output_port_base (mnoptical.node.node attribute)": [[26, "mnoptical.node.Node.output_port_base"]], "pathentry (mnoptical.node.signaltracing attribute)": [[26, "mnoptical.node.SignalTracing.pathEntry"]], "path_state() (mnoptical.node.signaltracing static method)": [[26, "mnoptical.node.SignalTracing.path_state"]], "power_divergence() (mnoptical.node.roadm method)": [[26, "mnoptical.node.Roadm.power_divergence"]], "power_excursions_flags_off() (mnoptical.node.amplifier method)": [[26, "mnoptical.node.Amplifier.power_excursions_flags_off"]], "prepropagation() (mnoptical.node.roadm method)": [[26, "mnoptical.node.Roadm.prepropagation"]], "process_att() (mnoptical.node.roadm method)": [[26, "mnoptical.node.Roadm.process_att"]], "propagate() (mnoptical.node.amplifier method)": [[26, "mnoptical.node.Amplifier.propagate"]], "propagate() (mnoptical.node.attenuator method)": [[26, "mnoptical.node.Attenuator.propagate"]], "propagate() (mnoptical.node.roadm method)": [[26, "mnoptical.node.Roadm.propagate"]], "receiver() (mnoptical.node.lineterminal method)": [[26, "mnoptical.node.LineTerminal.receiver"]], "receiver_callback() (mnoptical.node.lineterminal method)": [[26, "mnoptical.node.LineTerminal.receiver_callback"]], "remove_optical_signal() (mnoptical.node.node method)": [[26, "mnoptical.node.Node.remove_optical_signal"]], "remove_optical_signal() (mnoptical.node.transceiver method)": [[26, "mnoptical.node.Transceiver.remove_optical_signal"]], "remove_signal_from_out_port() (mnoptical.node.node method)": [[26, "mnoptical.node.Node.remove_signal_from_out_port"]], "remove_switch_rule() (mnoptical.node.roadm method)": [[26, "mnoptical.node.Roadm.remove_switch_rule"]], "reset() (mnoptical.node.amplifier method)": [[26, "mnoptical.node.Amplifier.reset"]], "reset() (mnoptical.node.lineterminal method)": [[26, "mnoptical.node.LineTerminal.reset"]], "reset() (mnoptical.node.opticalsignal method)": [[26, "mnoptical.node.OpticalSignal.reset"]], "reset() (mnoptical.node.roadm method)": [[26, "mnoptical.node.Roadm.reset"]], "reset_component() (mnoptical.node.node method)": [[26, "mnoptical.node.Node.reset_component"]], "reset_gain() (mnoptical.node.amplifier method)": [[26, "mnoptical.node.Amplifier.reset_gain"]], "reset_transceivers() (mnoptical.node.lineterminal method)": [[26, "mnoptical.node.LineTerminal.reset_transceivers"]], "route() (mnoptical.node.roadm method)": [[26, "mnoptical.node.Roadm.route"]], "set_boost_gain() (mnoptical.node.roadm method)": [[26, "mnoptical.node.Roadm.set_boost_gain"]], "set_gain() (mnoptical.node.amplifier method)": [[26, "mnoptical.node.Amplifier.set_gain"]], "set_input_port() (mnoptical.node.node method)": [[26, "mnoptical.node.Node.set_input_port"]], "set_modulation_format() (mnoptical.node.lineterminal method)": [[26, "mnoptical.node.LineTerminal.set_modulation_format"]], "set_modulation_format() (mnoptical.node.opticalsignal method)": [[26, "mnoptical.node.OpticalSignal.set_modulation_format"]], "set_modulation_format() (mnoptical.node.transceiver method)": [[26, "mnoptical.node.Transceiver.set_modulation_format"]], "set_output_port() (mnoptical.node.node method)": [[26, "mnoptical.node.Node.set_output_port"]], "set_preamp_gain() (mnoptical.node.roadm method)": [[26, "mnoptical.node.Roadm.set_preamp_gain"]], "set_reference_power() (mnoptical.node.roadm method)": [[26, "mnoptical.node.Roadm.set_reference_power"]], "set_ripple_function() (mnoptical.node.amplifier method)": [[26, "mnoptical.node.Amplifier.set_ripple_function"]], "signal_path() (mnoptical.node.signaltracing static method)": [[26, "mnoptical.node.SignalTracing.signal_path"]], "spectrum_band_init_h (mnoptical.node.opticalsignal attribute)": [[26, "mnoptical.node.OpticalSignal.spectrum_band_init_H"]], "spectrum_band_init_nm (mnoptical.node.opticalsignal attribute)": [[26, "mnoptical.node.OpticalSignal.spectrum_band_init_nm"]], "stage_amplified_spontaneous_emission_noise() (mnoptical.node.amplifier method)": [[26, "mnoptical.node.Amplifier.stage_amplified_spontaneous_emission_noise"]], "switch() (mnoptical.node.roadm method)": [[26, "mnoptical.node.Roadm.switch"]], "turn_off() (mnoptical.node.lineterminal method)": [[26, "mnoptical.node.LineTerminal.turn_off"]], "turn_on() (mnoptical.node.lineterminal method)": [[26, "mnoptical.node.LineTerminal.turn_on"]], "tx_config() (mnoptical.node.lineterminal method)": [[26, "mnoptical.node.LineTerminal.tx_config"]], "update_switch_rule() (mnoptical.node.roadm method)": [[26, "mnoptical.node.Roadm.update_switch_rule"]], "add_drop (in module mnoptical.ofcdemo.control_test_lum)": [[27, "mnoptical.ofcdemo.Control_Test_Lum.ADD_DROP"]], "alllumname (in module mnoptical.ofcdemo.control_test_lum)": [[27, "mnoptical.ofcdemo.Control_Test_Lum.AllLumName"]], "control_test() (in module mnoptical.ofcdemo.control_test_lum)": [[27, "mnoptical.ofcdemo.Control_Test_Lum.Control_Test"]], "lumentumname_to_ip (in module mnoptical.ofcdemo.control_test_lum)": [[27, "mnoptical.ofcdemo.Control_Test_Lum.LumentumName_to_IP"]], "lumentum_control_netconf (class in mnoptical.ofcdemo.control_test_lum)": [[27, "mnoptical.ofcdemo.Control_Test_Lum.Lumentum_Control_NETCONF"]], "lumentum_netconf_agent (in module mnoptical.ofcdemo.control_test_lum)": [[27, "mnoptical.ofcdemo.Control_Test_Lum.Lumentum_NETCONF_Agent"]], "num_node (in module mnoptical.ofcdemo.control_test_lum)": [[27, "mnoptical.ofcdemo.Control_Test_Lum.NUM_NODE"]], "num_wav (in module mnoptical.ofcdemo.control_test_lum)": [[27, "mnoptical.ofcdemo.Control_Test_Lum.NUM_WAV"]], "nodelink_to_lumentumlink (in module mnoptical.ofcdemo.control_test_lum)": [[27, "mnoptical.ofcdemo.Control_Test_Lum.NodeLink_to_LumentumLink"]], "thruport (in module mnoptical.ofcdemo.control_test_lum)": [[27, "mnoptical.ofcdemo.Control_Test_Lum.THRUPORT"]], "channel_monitor() (mnoptical.ofcdemo.control_test_lum.lumentum_control_netconf method)": [[27, "mnoptical.ofcdemo.Control_Test_Lum.Lumentum_Control_NETCONF.channel_monitor"]], "cleanallroadms() (mnoptical.ofcdemo.control_test_lum.lumentum_control_netconf method)": [[27, "mnoptical.ofcdemo.Control_Test_Lum.Lumentum_Control_NETCONF.cleanAllROADMs"]], "installpath() (mnoptical.ofcdemo.control_test_lum.lumentum_control_netconf method)": [[27, "mnoptical.ofcdemo.Control_Test_Lum.Lumentum_Control_NETCONF.installPath"]], "m (in module mnoptical.ofcdemo.control_test_lum)": [[27, "mnoptical.ofcdemo.Control_Test_Lum.m"]], "mnoptical.ofcdemo.control_test_lum": [[27, "module-mnoptical.ofcdemo.Control_Test_Lum"]], "uninstallpath() (mnoptical.ofcdemo.control_test_lum.lumentum_control_netconf method)": [[27, "mnoptical.ofcdemo.Control_Test_Lum.Lumentum_Control_NETCONF.uninstallPath"]], "mininet_control_rest (class in mnoptical.ofcdemo.control_test_mininet_rest)": [[28, "mnoptical.ofcdemo.Control_Test_Mininet_REST.Mininet_Control_REST"]], "test() (in module mnoptical.ofcdemo.control_test_mininet_rest)": [[28, "mnoptical.ofcdemo.Control_Test_Mininet_REST.Test"]], "buildgraph() (mnoptical.ofcdemo.control_test_mininet_rest.mininet_control_rest method)": [[28, "mnoptical.ofcdemo.Control_Test_Mininet_REST.Mininet_Control_REST.buildGraph"]], "configurepacketswitch() (mnoptical.ofcdemo.control_test_mininet_rest.mininet_control_rest method)": [[28, "mnoptical.ofcdemo.Control_Test_Mininet_REST.Mininet_Control_REST.configurePacketSwitch"]], "configureterminal() (mnoptical.ofcdemo.control_test_mininet_rest.mininet_control_rest method)": [[28, "mnoptical.ofcdemo.Control_Test_Mininet_REST.Mininet_Control_REST.configureTerminal"]], "getmonitorkey() (mnoptical.ofcdemo.control_test_mininet_rest.mininet_control_rest method)": [[28, "mnoptical.ofcdemo.Control_Test_Mininet_REST.Mininet_Control_REST.getMonitorKey"]], "getosnr() (mnoptical.ofcdemo.control_test_mininet_rest.mininet_control_rest method)": [[28, "mnoptical.ofcdemo.Control_Test_Mininet_REST.Mininet_Control_REST.getOSNR"]], "installpath() (mnoptical.ofcdemo.control_test_mininet_rest.mininet_control_rest method)": [[28, "mnoptical.ofcdemo.Control_Test_Mininet_REST.Mininet_Control_REST.installPath"]], "mnoptical.ofcdemo.control_test_mininet_rest": [[28, "module-mnoptical.ofcdemo.Control_Test_Mininet_REST"]], "monitorkey() (mnoptical.ofcdemo.control_test_mininet_rest.mininet_control_rest method)": [[28, "mnoptical.ofcdemo.Control_Test_Mininet_REST.Mininet_Control_REST.monitorKey"]], "monitorkeyandlightpaths() (mnoptical.ofcdemo.control_test_mininet_rest.mininet_control_rest method)": [[28, "mnoptical.ofcdemo.Control_Test_Mininet_REST.Mininet_Control_REST.monitorKeyAndLightpaths"]], "monitorosnr() (mnoptical.ofcdemo.control_test_mininet_rest.mininet_control_rest method)": [[28, "mnoptical.ofcdemo.Control_Test_Mininet_REST.Mininet_Control_REST.monitorOSNR"]], "monitorosnrbykey() (mnoptical.ofcdemo.control_test_mininet_rest.mininet_control_rest method)": [[28, "mnoptical.ofcdemo.Control_Test_Mininet_REST.Mininet_Control_REST.monitorOSNRbyKey"]], "route() (mnoptical.ofcdemo.control_test_mininet_rest.mininet_control_rest method)": [[28, "mnoptical.ofcdemo.Control_Test_Mininet_REST.Mininet_Control_REST.route"]], "turnonterminal() (mnoptical.ofcdemo.control_test_mininet_rest.mininet_control_rest method)": [[28, "mnoptical.ofcdemo.Control_Test_Mininet_REST.Mininet_Control_REST.turnonTerminal"]], "uninstallpath() (mnoptical.ofcdemo.control_test_mininet_rest.mininet_control_rest method)": [[28, "mnoptical.ofcdemo.Control_Test_Mininet_REST.Mininet_Control_REST.uninstallPath"]], "all_channels (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.ALL_CHANNELS"]], "cpri_cap (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.CPRI_CAP"]], "controller_lum (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.Controller_Lum"]], "controller_mininet (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.Controller_Mininet"]], "down_link_cap (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.DOWN_LINK_CAP"]], "du_roadms (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.DU_ROADMS"]], "findroute() (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.FindRoute"]], "graph (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.GRAPH"]], "lightpath_id (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.LIGHTPATH_ID"]], "lightpath_info (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.LIGHTPATH_INFO"]], "link_cap (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.LINK_CAP"]], "lumentum_monitorlightpath() (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.Lumentum_MonitorLightpath"]], "lumentum_installpath() (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.Lumentum_installPath"]], "lumentum_setuplightpath() (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.Lumentum_setupLightpath"]], "lumentum_teardownlightpath() (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.Lumentum_teardownLightpath"]], "lumentum_uninstallpath() (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.Lumentum_uninstallPath"]], "mininet_installpath() (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.Mininet_installPath"]], "mininet_monitorlightpath() (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.Mininet_monitorLightpath"]], "mininet_setuplightpath() (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.Mininet_setupLightpath"]], "mininet_teardownlightpath() (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.Mininet_teardownLightpath"]], "mininet_uninstallpath() (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.Mininet_uninstallPath"]], "name_roadm (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.NAME_ROADM"]], "netlinks (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.NETLINKS"]], "netlink_info (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.NETLINK_INFO"]], "nodes (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.NODES"]], "num_node (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.NUM_NODE"]], "num_wav (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.NUM_WAV"]], "path_ch_to_lightpath (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.PATH_CH_TO_LIGHTPATH"]], "roadm_to_id (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.ROADM_TO_ID"]], "roadm_to_terminal (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.ROADM_TO_TERMINAL"]], "roadm_traf (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.ROADM_TRAF"]], "ru_roadms (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.RU_ROADMS"]], "roadmphynetwork() (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.RoadmPhyNetwork"]], "src_dst_to_lightpath (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.SRC_DST_TO_LIGHTPATH"]], "span() (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.Span"]], "terminal_to_id (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.TERMINAL_TO_ID"]], "terminal_to_roadm (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.TERMINAL_TO_ROADM"]], "traffic_id (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.TRAFFIC_ID"]], "traffic_info (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.TRAFFIC_INFO"]], "traffictest() (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.TrafficTest"]], "up_lightpath_id_set (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.UP_LIGHTPATH_ID_SET"]], "up_lightpath_time_list (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.UP_LIGHTPATH_TIME_LIST"]], "up_traf_id_set (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.UP_TRAF_ID_SET"]], "up_traf_time_list (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.UP_TRAF_TIME_LIST"]], "check_lightpath_for_traf() (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.check_lightpath_for_traf"]], "getlinks() (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.getLinks"]], "init_controller() (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.init_Controller"]], "install_lightpath() (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.install_Lightpath"]], "install_traf() (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.install_Traf"]], "linkspec() (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.linkspec"]], "m (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.m"]], "mnoptical.ofcdemo.demo_control": [[29, "module-mnoptical.ofcdemo.Demo_Control"]], "name_roadms (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.name_roadms"]], "name_terminals (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.name_terminals"]], "netgraph() (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.netGraph"]], "node (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.node"]], "testmininet() (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.testMininet"]], "traf_to_lightpah_assignment() (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.traf_to_lightpah_Assignment"]], "traf_to_lightpath_release() (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.traf_to_lightpath_Release"]], "trafficpattern() (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.trafficPattern"]], "uninstall_lightpath() (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.uninstall_Lightpath"]], "update_lightpath_down_time() (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.update_lightpath_down_time"]], "waveavailibility() (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.waveAvailibility"]], "waveselection() (in module mnoptical.ofcdemo.demo_control)": [[29, "mnoptical.ofcdemo.Demo_Control.waveSelection"]], "all_channels (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.ALL_CHANNELS"]], "cpri_cap (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.CPRI_CAP"]], "controller_lum (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.Controller_Lum"]], "controller_mininet (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.Controller_Mininet"]], "down_link_cap (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.DOWN_LINK_CAP"]], "du_roadms (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.DU_ROADMS"]], "findroute() (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.FindRoute"]], "graph (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.GRAPH"]], "lightpath_id (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.LIGHTPATH_ID"]], "lightpath_info (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.LIGHTPATH_INFO"]], "link_cap (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.LINK_CAP"]], "lumentum_monitorlightpath() (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.Lumentum_MonitorLightpath"]], "lumentum_installpath() (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.Lumentum_installPath"]], "lumentum_setuplightpath() (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.Lumentum_setupLightpath"]], "lumentum_teardownlightpath() (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.Lumentum_teardownLightpath"]], "lumentum_uninstallpath() (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.Lumentum_uninstallPath"]], "mininet_installpath() (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.Mininet_installPath"]], "mininet_monitordifference() (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.Mininet_monitorDifference"]], "mininet_monitorlightpath() (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.Mininet_monitorLightpath"]], "mininet_setuplightpath() (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.Mininet_setupLightpath"]], "mininet_teardownlightpath() (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.Mininet_teardownLightpath"]], "mininet_uninstallpath() (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.Mininet_uninstallPath"]], "name_roadm (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.NAME_ROADM"]], "netlinks (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.NETLINKS"]], "netlink_info (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.NETLINK_INFO"]], "nodes (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.NODES"]], "num_node (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.NUM_NODE"]], "num_wav (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.NUM_WAV"]], "path_ch_to_lightpath (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.PATH_CH_TO_LIGHTPATH"]], "roadm_to_id (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.ROADM_TO_ID"]], "roadm_to_terminal (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.ROADM_TO_TERMINAL"]], "roadm_traf (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.ROADM_TRAF"]], "ru_roadms (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.RU_ROADMS"]], "roadmphynetwork() (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.RoadmPhyNetwork"]], "src_dst_to_lightpath (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.SRC_DST_TO_LIGHTPATH"]], "span() (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.Span"]], "terminal_to_id (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.TERMINAL_TO_ID"]], "terminal_to_roadm (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.TERMINAL_TO_ROADM"]], "traffic_id (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.TRAFFIC_ID"]], "traffic_info (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.TRAFFIC_INFO"]], "up_lightpath_id_set (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.UP_LIGHTPATH_ID_SET"]], "up_lightpath_time_list (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.UP_LIGHTPATH_TIME_LIST"]], "up_traf_id_set (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.UP_TRAF_ID_SET"]], "up_traf_time_list (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.UP_TRAF_TIME_LIST"]], "check_lightpath_for_traf() (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.check_lightpath_for_traf"]], "getlinks() (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.getLinks"]], "install_lightpath() (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.install_Lightpath"]], "install_traf() (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.install_Traf"]], "linkspec() (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.linkspec"]], "m (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.m"]], "mnoptical.ofcdemo.demo_control_2": [[30, "module-mnoptical.ofcdemo.Demo_Control_2"]], "name_roadms (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.name_roadms"]], "name_terminals (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.name_terminals"]], "netgraph() (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.netGraph"]], "node (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.node"]], "testmininet() (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.testMininet"]], "traf_to_lightpah_assignment() (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.traf_to_lightpah_Assignment"]], "traf_to_lightpath_release() (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.traf_to_lightpath_Release"]], "uninstall_lightpath() (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.uninstall_Lightpath"]], "update_lightpath_down_time() (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.update_lightpath_down_time"]], "waveavailibility() (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.waveAvailibility"]], "waveselection() (in module mnoptical.ofcdemo.demo_control_2)": [[30, "mnoptical.ofcdemo.Demo_Control_2.waveSelection"]], "mininet_optical_simu_api (class in mnoptical.ofcdemo.simulation_api)": [[31, "mnoptical.ofcdemo.Simulation_API.Mininet_Optical_Simu_API"]], "roadm_deleteswitchrule() (mnoptical.ofcdemo.simulation_api.mininet_optical_simu_api method)": [[31, "mnoptical.ofcdemo.Simulation_API.Mininet_Optical_Simu_API.ROADM_deleteSwitchRule"]], "roadm_installswitchrule() (mnoptical.ofcdemo.simulation_api.mininet_optical_simu_api method)": [[31, "mnoptical.ofcdemo.Simulation_API.Mininet_Optical_Simu_API.ROADM_installSwitchRule"]], "roadm_monitor_all_gosnr() (mnoptical.ofcdemo.simulation_api.mininet_optical_simu_api method)": [[31, "mnoptical.ofcdemo.Simulation_API.Mininet_Optical_Simu_API.ROADM_monitor_all_gosnr"]], "roadm_monitor_all_osnr() (mnoptical.ofcdemo.simulation_api.mininet_optical_simu_api method)": [[31, "mnoptical.ofcdemo.Simulation_API.Mininet_Optical_Simu_API.ROADM_monitor_all_osnr"]], "roadm_monitor_all_power() (mnoptical.ofcdemo.simulation_api.mininet_optical_simu_api method)": [[31, "mnoptical.ofcdemo.Simulation_API.Mininet_Optical_Simu_API.ROADM_monitor_all_power"]], "roadm_monitor_channel_data() (mnoptical.ofcdemo.simulation_api.mininet_optical_simu_api method)": [[31, "mnoptical.ofcdemo.Simulation_API.Mininet_Optical_Simu_API.ROADM_monitor_channel_data"]], "roadm_voapowerleveling() (mnoptical.ofcdemo.simulation_api.mininet_optical_simu_api method)": [[31, "mnoptical.ofcdemo.Simulation_API.Mininet_Optical_Simu_API.ROADM_voaPowerLeveling"]], "terminal_reset_threshold() (mnoptical.ofcdemo.simulation_api.mininet_optical_simu_api method)": [[31, "mnoptical.ofcdemo.Simulation_API.Mininet_Optical_Simu_API.Terminal_Reset_Threshold"]], "terminal_configchannel() (mnoptical.ofcdemo.simulation_api.mininet_optical_simu_api method)": [[31, "mnoptical.ofcdemo.Simulation_API.Mininet_Optical_Simu_API.Terminal_configChannel"]], "terminal_configchannelpower() (mnoptical.ofcdemo.simulation_api.mininet_optical_simu_api method)": [[31, "mnoptical.ofcdemo.Simulation_API.Mininet_Optical_Simu_API.Terminal_configChannelPower"]], "terminal_turnoffchannel() (mnoptical.ofcdemo.simulation_api.mininet_optical_simu_api method)": [[31, "mnoptical.ofcdemo.Simulation_API.Mininet_Optical_Simu_API.Terminal_turnoffChannel"]], "terminal_turnonchannel() (mnoptical.ofcdemo.simulation_api.mininet_optical_simu_api method)": [[31, "mnoptical.ofcdemo.Simulation_API.Mininet_Optical_Simu_API.Terminal_turnonChannel"]], "mnoptical.ofcdemo.simulation_api": [[31, "module-mnoptical.ofcdemo.Simulation_API"]], "adjacencydict() (in module mnoptical.ofcdemo.apsp)": [[32, "mnoptical.ofcdemo.apsp.adjacencyDict"]], "allocatechannels() (in module mnoptical.ofcdemo.apsp)": [[32, "mnoptical.ofcdemo.apsp.allocateChannels"]], "canonical() (in module mnoptical.ofcdemo.apsp)": [[32, "mnoptical.ofcdemo.apsp.canonical"]], "channelports() (in module mnoptical.ofcdemo.apsp)": [[32, "mnoptical.ofcdemo.apsp.channelPorts"]], "configurepacketswitches() (in module mnoptical.ofcdemo.apsp)": [[32, "mnoptical.ofcdemo.apsp.configurePacketSwitches"]], "configureterminals() (in module mnoptical.ofcdemo.apsp)": [[32, "mnoptical.ofcdemo.apsp.configureTerminals"]], "countsignals() (in module mnoptical.ofcdemo.apsp)": [[32, "mnoptical.ofcdemo.apsp.countSignals"]], "entriestoreroute() (in module mnoptical.ofcdemo.apsp)": [[32, "mnoptical.ofcdemo.apsp.entriesToReroute"]], "installpath() (in module mnoptical.ofcdemo.apsp)": [[32, "mnoptical.ofcdemo.apsp.installPath"]], "installroutes() (in module mnoptical.ofcdemo.apsp)": [[32, "mnoptical.ofcdemo.apsp.installRoutes"]], "mnoptical.ofcdemo.apsp": [[32, "module-mnoptical.ofcdemo.apsp"]], "monitorkey() (in module mnoptical.ofcdemo.apsp)": [[32, "mnoptical.ofcdemo.apsp.monitorKey"]], "monitorosnr() (in module mnoptical.ofcdemo.apsp)": [[32, "mnoptical.ofcdemo.apsp.monitorOSNR"]], "net (in module mnoptical.ofcdemo.apsp)": [[32, "mnoptical.ofcdemo.apsp.net"]], "reroute() (in module mnoptical.ofcdemo.apsp)": [[32, "mnoptical.ofcdemo.apsp.reroute"]], "route() (in module mnoptical.ofcdemo.apsp)": [[32, "mnoptical.ofcdemo.apsp.route"]], "run() (in module mnoptical.ofcdemo.apsp)": [[32, "mnoptical.ofcdemo.apsp.run"]], "mnoptical.ofcdemo.demo": [[33, "module-mnoptical.ofcdemo.demo"]], "net (in module mnoptical.ofcdemo.demo)": [[33, "mnoptical.ofcdemo.demo.net"]], "mnoptical.ofcdemo.demo_2021": [[34, "module-mnoptical.ofcdemo.demo_2021"]], "net (in module mnoptical.ofcdemo.demo_2021)": [[34, "mnoptical.ofcdemo.demo_2021.net"]], "control_test() (in module mnoptical.ofcdemo.demo_hwtopo)": [[35, "mnoptical.ofcdemo.demo_hwtopo.Control_Test"]], "netconfportbase (in module mnoptical.ofcdemo.demo_hwtopo)": [[35, "mnoptical.ofcdemo.demo_hwtopo.NetconfPortBase"]], "fixipmap() (in module mnoptical.ofcdemo.demo_hwtopo)": [[35, "mnoptical.ofcdemo.demo_hwtopo.fixIPMap"]], "mnoptical.ofcdemo.demo_hwtopo": [[35, "module-mnoptical.ofcdemo.demo_hwtopo"]], "ampspec (in module mnoptical.ofcdemo.demolib)": [[36, "mnoptical.ofcdemo.demolib.AmpSpec"]], "cli (in module mnoptical.ofcdemo.demolib)": [[36, "mnoptical.ofcdemo.demolib.CLI"]], "demotopo (class in mnoptical.ofcdemo.demolib)": [[36, "mnoptical.ofcdemo.demolib.DemoTopo"]], "linearroadmtopo (class in mnoptical.ofcdemo.demolib)": [[36, "mnoptical.ofcdemo.demolib.LinearRoadmTopo"]], "listenportbase (in module mnoptical.ofcdemo.demolib)": [[36, "mnoptical.ofcdemo.demolib.ListenPortBase"]], "opticalcli (class in mnoptical.ofcdemo.demolib)": [[36, "mnoptical.ofcdemo.demolib.OpticalCLI"]], "opticaltopo (class in mnoptical.ofcdemo.demolib)": [[36, "mnoptical.ofcdemo.demolib.OpticalTopo"]], "spanspec (in module mnoptical.ofcdemo.demolib)": [[36, "mnoptical.ofcdemo.demolib.SpanSpec"]], "_fmtpathentry() (mnoptical.ofcdemo.demolib.opticalcli method)": [[36, "mnoptical.ofcdemo.demolib.OpticalCLI._fmtPathEntry"]], "_fmtsigstate() (mnoptical.ofcdemo.demolib.opticalcli method)": [[36, "mnoptical.ofcdemo.demolib.OpticalCLI._fmtSigState"]], "_printpathstate() (mnoptical.ofcdemo.demolib.opticalcli method)": [[36, "mnoptical.ofcdemo.demolib.OpticalCLI._printPathState"]], "addpoplink() (mnoptical.ofcdemo.demolib.demotopo method)": [[36, "mnoptical.ofcdemo.demolib.DemoTopo.addPopLink"]], "build() (mnoptical.ofcdemo.demolib.demotopo method)": [[36, "mnoptical.ofcdemo.demolib.DemoTopo.build"]], "build() (mnoptical.ofcdemo.demolib.linearroadmtopo method)": [[36, "mnoptical.ofcdemo.demolib.LinearRoadmTopo.build"]], "buildpop() (mnoptical.ofcdemo.demolib.linearroadmtopo method)": [[36, "mnoptical.ofcdemo.demolib.LinearRoadmTopo.buildPop"]], "configurelinearnet() (in module mnoptical.ofcdemo.demolib)": [[36, "mnoptical.ofcdemo.demolib.configureLinearNet"]], "do_amppowers() (mnoptical.ofcdemo.demolib.opticalcli method)": [[36, "mnoptical.ofcdemo.demolib.OpticalCLI.do_amppowers"]], "do_arp() (mnoptical.ofcdemo.demolib.opticalcli method)": [[36, "mnoptical.ofcdemo.demolib.OpticalCLI.do_arp"]], "do_checklinks() (mnoptical.ofcdemo.demolib.opticalcli method)": [[36, "mnoptical.ofcdemo.demolib.OpticalCLI.do_checklinks"]], "do_checkroadms() (mnoptical.ofcdemo.demolib.opticalcli method)": [[36, "mnoptical.ofcdemo.demolib.OpticalCLI.do_checkroadms"]], "do_linksignals() (mnoptical.ofcdemo.demolib.opticalcli method)": [[36, "mnoptical.ofcdemo.demolib.OpticalCLI.do_linksignals"]], "do_monitors() (mnoptical.ofcdemo.demolib.opticalcli method)": [[36, "mnoptical.ofcdemo.demolib.OpticalCLI.do_monitors"]], "do_osnr() (mnoptical.ofcdemo.demolib.opticalcli method)": [[36, "mnoptical.ofcdemo.demolib.OpticalCLI.do_osnr"]], "do_plot() (mnoptical.ofcdemo.demolib.opticalcli method)": [[36, "mnoptical.ofcdemo.demolib.OpticalCLI.do_plot"]], "do_propagate() (mnoptical.ofcdemo.demolib.opticalcli method)": [[36, "mnoptical.ofcdemo.demolib.OpticalCLI.do_propagate"]], "do_reset() (mnoptical.ofcdemo.demolib.opticalcli method)": [[36, "mnoptical.ofcdemo.demolib.OpticalCLI.do_reset"]], "do_setgain() (mnoptical.ofcdemo.demolib.opticalcli method)": [[36, "mnoptical.ofcdemo.demolib.OpticalCLI.do_setgain"]], "do_signals() (mnoptical.ofcdemo.demolib.opticalcli method)": [[36, "mnoptical.ofcdemo.demolib.OpticalCLI.do_signals"]], "do_sigpath() (mnoptical.ofcdemo.demolib.opticalcli method)": [[36, "mnoptical.ofcdemo.demolib.OpticalCLI.do_sigpath"]], "do_sigtrace() (mnoptical.ofcdemo.demolib.opticalcli method)": [[36, "mnoptical.ofcdemo.demolib.OpticalCLI.do_sigtrace"]], "do_spans() (mnoptical.ofcdemo.demolib.opticalcli method)": [[36, "mnoptical.ofcdemo.demolib.OpticalCLI.do_spans"]], "ethlink() (mnoptical.ofcdemo.demolib.opticaltopo method)": [[36, "mnoptical.ofcdemo.demolib.OpticalTopo.ethLink"]], "formatsigstate() (mnoptical.ofcdemo.demolib.opticalcli static method)": [[36, "mnoptical.ofcdemo.demolib.OpticalCLI.formatSigState"]], "ip() (mnoptical.ofcdemo.demolib.linearroadmtopo static method)": [[36, "mnoptical.ofcdemo.demolib.LinearRoadmTopo.ip"]], "linearroadmtest() (in module mnoptical.ofcdemo.demolib)": [[36, "mnoptical.ofcdemo.demolib.linearRoadmTest"]], "mnoptical.ofcdemo.demolib": [[36, "module-mnoptical.ofcdemo.demolib"]], "net (in module mnoptical.ofcdemo.demolib)": [[36, "mnoptical.ofcdemo.demolib.net"]], "opticallinks() (mnoptical.ofcdemo.demolib.opticalcli method)": [[36, "mnoptical.ofcdemo.demolib.OpticalCLI.opticalLinks"]], "printnodesignals() (mnoptical.ofcdemo.demolib.opticalcli static method)": [[36, "mnoptical.ofcdemo.demolib.OpticalCLI.printNodeSignals"]], "printosnr() (mnoptical.ofcdemo.demolib.opticalcli static method)": [[36, "mnoptical.ofcdemo.demolib.OpticalCLI.printOsnr"]], "printsignals() (mnoptical.ofcdemo.demolib.opticalcli method)": [[36, "mnoptical.ofcdemo.demolib.OpticalCLI.printSignals"]], "prompt (mnoptical.ofcdemo.demolib.opticalcli attribute)": [[36, "mnoptical.ofcdemo.demolib.OpticalCLI.prompt"]], "spanspec() (in module mnoptical.ofcdemo.demolib)": [[36, "mnoptical.ofcdemo.demolib.spanSpec"]], "spans() (mnoptical.ofcdemo.demolib.linearroadmtopo method)": [[36, "mnoptical.ofcdemo.demolib.LinearRoadmTopo.spans"]], "spans() (mnoptical.ofcdemo.demolib.opticalcli method)": [[36, "mnoptical.ofcdemo.demolib.OpticalCLI.spans"]], "wdmlink() (mnoptical.ofcdemo.demolib.opticaltopo method)": [[36, "mnoptical.ofcdemo.demolib.OpticalTopo.wdmLink"]], "ampspec (in module mnoptical.ofcdemo.demolib_2021)": [[37, "mnoptical.ofcdemo.demolib_2021.AmpSpec"]], "cli (in module mnoptical.ofcdemo.demolib_2021)": [[37, "mnoptical.ofcdemo.demolib_2021.CLI"]], "demotopo (class in mnoptical.ofcdemo.demolib_2021)": [[37, "mnoptical.ofcdemo.demolib_2021.DemoTopo"]], "linearroadmtopo (class in mnoptical.ofcdemo.demolib_2021)": [[37, "mnoptical.ofcdemo.demolib_2021.LinearRoadmTopo"]], "listenportbase (in module mnoptical.ofcdemo.demolib_2021)": [[37, "mnoptical.ofcdemo.demolib_2021.ListenPortBase"]], "opticaltopo (class in mnoptical.ofcdemo.demolib_2021)": [[37, "mnoptical.ofcdemo.demolib_2021.OpticalTopo"]], "spanspec (in module mnoptical.ofcdemo.demolib_2021)": [[37, "mnoptical.ofcdemo.demolib_2021.SpanSpec"]], "addpoplink() (mnoptical.ofcdemo.demolib_2021.demotopo method)": [[37, "mnoptical.ofcdemo.demolib_2021.DemoTopo.addPopLink"]], "build() (mnoptical.ofcdemo.demolib_2021.demotopo method)": [[37, "mnoptical.ofcdemo.demolib_2021.DemoTopo.build"]], "build() (mnoptical.ofcdemo.demolib_2021.linearroadmtopo method)": [[37, "mnoptical.ofcdemo.demolib_2021.LinearRoadmTopo.build"]], "buildpop() (mnoptical.ofcdemo.demolib_2021.linearroadmtopo method)": [[37, "mnoptical.ofcdemo.demolib_2021.LinearRoadmTopo.buildPop"]], "configurelinearnet() (in module mnoptical.ofcdemo.demolib_2021)": [[37, "mnoptical.ofcdemo.demolib_2021.configureLinearNet"]], "ethlink() (mnoptical.ofcdemo.demolib_2021.opticaltopo method)": [[37, "mnoptical.ofcdemo.demolib_2021.OpticalTopo.ethLink"]], "ip() (mnoptical.ofcdemo.demolib_2021.linearroadmtopo static method)": [[37, "mnoptical.ofcdemo.demolib_2021.LinearRoadmTopo.ip"]], "linearroadmtest() (in module mnoptical.ofcdemo.demolib_2021)": [[37, "mnoptical.ofcdemo.demolib_2021.linearRoadmTest"]], "mnoptical.ofcdemo.demolib_2021": [[37, "module-mnoptical.ofcdemo.demolib_2021"]], "net (in module mnoptical.ofcdemo.demolib_2021)": [[37, "mnoptical.ofcdemo.demolib_2021.net"]], "spanspec() (in module mnoptical.ofcdemo.demolib_2021)": [[37, "mnoptical.ofcdemo.demolib_2021.spanSpec"]], "spans() (mnoptical.ofcdemo.demolib_2021.linearroadmtopo method)": [[37, "mnoptical.ofcdemo.demolib_2021.LinearRoadmTopo.spans"]], "wdmlink() (mnoptical.ofcdemo.demolib_2021.opticaltopo method)": [[37, "mnoptical.ofcdemo.demolib_2021.OpticalTopo.wdmLink"]], "listenportbase (in module mnoptical.ofcdemo.fakecontroller)": [[38, "mnoptical.ofcdemo.fakecontroller.ListenPortBase"]], "nodeproxy (class in mnoptical.ofcdemo.fakecontroller)": [[38, "mnoptical.ofcdemo.fakecontroller.NodeProxy"]], "ofswitchproxy (class in mnoptical.ofcdemo.fakecontroller)": [[38, "mnoptical.ofcdemo.fakecontroller.OFSwitchProxy"]], "proxy (class in mnoptical.ofcdemo.fakecontroller)": [[38, "mnoptical.ofcdemo.fakecontroller.Proxy"]], "restproxy (class in mnoptical.ofcdemo.fakecontroller)": [[38, "mnoptical.ofcdemo.fakecontroller.RESTProxy"]], "roadmproxy (class in mnoptical.ofcdemo.fakecontroller)": [[38, "mnoptical.ofcdemo.fakecontroller.ROADMProxy"]], "switchproxy (class in mnoptical.ofcdemo.fakecontroller)": [[38, "mnoptical.ofcdemo.fakecontroller.SwitchProxy"]], "terminalproxy (class in mnoptical.ofcdemo.fakecontroller)": [[38, "mnoptical.ofcdemo.fakecontroller.TerminalProxy"]], "__repr__() (mnoptical.ofcdemo.fakecontroller.proxy method)": [[38, "mnoptical.ofcdemo.fakecontroller.Proxy.__repr__"]], "connect() (mnoptical.ofcdemo.fakecontroller.roadmproxy method)": [[38, "mnoptical.ofcdemo.fakecontroller.ROADMProxy.connect"]], "connect() (mnoptical.ofcdemo.fakecontroller.terminalproxy method)": [[38, "mnoptical.ofcdemo.fakecontroller.TerminalProxy.connect"]], "dpctl() (mnoptical.ofcdemo.fakecontroller.ofswitchproxy method)": [[38, "mnoptical.ofcdemo.fakecontroller.OFSwitchProxy.dpctl"]], "fetchlinks() (in module mnoptical.ofcdemo.fakecontroller)": [[38, "mnoptical.ofcdemo.fakecontroller.fetchLinks"]], "fetchnodes() (in module mnoptical.ofcdemo.fakecontroller)": [[38, "mnoptical.ofcdemo.fakecontroller.fetchNodes"]], "fetchosnr() (in module mnoptical.ofcdemo.fakecontroller)": [[38, "mnoptical.ofcdemo.fakecontroller.fetchOSNR"]], "fetchports() (in module mnoptical.ofcdemo.fakecontroller)": [[38, "mnoptical.ofcdemo.fakecontroller.fetchPorts"]], "fetchrules() (in module mnoptical.ofcdemo.fakecontroller)": [[38, "mnoptical.ofcdemo.fakecontroller.fetchRules"]], "get() (mnoptical.ofcdemo.fakecontroller.restproxy method)": [[38, "mnoptical.ofcdemo.fakecontroller.RESTProxy.get"]], "listenport (mnoptical.ofcdemo.fakecontroller.ofswitchproxy attribute)": [[38, "mnoptical.ofcdemo.fakecontroller.OFSwitchProxy.listenPort"]], "mnoptical.ofcdemo.fakecontroller": [[38, "module-mnoptical.ofcdemo.fakecontroller"]], "ports() (mnoptical.ofcdemo.fakecontroller.nodeproxy method)": [[38, "mnoptical.ofcdemo.fakecontroller.NodeProxy.ports"]], "reset() (mnoptical.ofcdemo.fakecontroller.roadmproxy method)": [[38, "mnoptical.ofcdemo.fakecontroller.ROADMProxy.reset"]], "reset() (mnoptical.ofcdemo.fakecontroller.terminalproxy method)": [[38, "mnoptical.ofcdemo.fakecontroller.TerminalProxy.reset"]], "rules() (mnoptical.ofcdemo.fakecontroller.switchproxy method)": [[38, "mnoptical.ofcdemo.fakecontroller.SwitchProxy.rules"]], "turn_on() (mnoptical.ofcdemo.fakecontroller.terminalproxy method)": [[38, "mnoptical.ofcdemo.fakecontroller.TerminalProxy.turn_on"]], "lumentum (class in mnoptical.ofcdemo.hwtopo)": [[39, "mnoptical.ofcdemo.hwtopo.Lumentum"]], "lumentumlinear (class in mnoptical.ofcdemo.hwtopo)": [[39, "mnoptical.ofcdemo.hwtopo.LumentumLinear"]], "mux (class in mnoptical.ofcdemo.hwtopo)": [[39, "mnoptical.ofcdemo.hwtopo.MUX"]], "addport() (mnoptical.ofcdemo.hwtopo.lumentumlinear method)": [[39, "mnoptical.ofcdemo.hwtopo.LumentumLinear.addport"]], "build() (mnoptical.ofcdemo.hwtopo.lumentumlinear method)": [[39, "mnoptical.ofcdemo.hwtopo.LumentumLinear.build"]], "configcomb() (in module mnoptical.ofcdemo.hwtopo)": [[39, "mnoptical.ofcdemo.hwtopo.configComb"]], "dropport() (mnoptical.ofcdemo.hwtopo.lumentumlinear method)": [[39, "mnoptical.ofcdemo.hwtopo.LumentumLinear.dropport"]], "hostname() (mnoptical.ofcdemo.hwtopo.lumentumlinear method)": [[39, "mnoptical.ofcdemo.hwtopo.LumentumLinear.hostname"]], "mnoptical.ofcdemo.hwtopo": [[39, "module-mnoptical.ofcdemo.hwtopo"]], "netconfportbase (in module mnoptical.ofcdemo.hwtopo)": [[39, "mnoptical.ofcdemo.hwtopo.netconfPortBase"]], "password (mnoptical.ofcdemo.hwtopo.lumentum attribute)": [[39, "mnoptical.ofcdemo.hwtopo.Lumentum.password"]], "topo (in module mnoptical.ofcdemo.hwtopo)": [[39, "mnoptical.ofcdemo.hwtopo.topo"]], "username (mnoptical.ofcdemo.hwtopo.lumentum attribute)": [[39, "mnoptical.ofcdemo.hwtopo.Lumentum.username"]], "wdmlink() (mnoptical.ofcdemo.hwtopo.lumentumlinear method)": [[39, "mnoptical.ofcdemo.hwtopo.LumentumLinear.wdmLink"]], "mnoptical.ofcdemo": [[40, "module-mnoptical.ofcdemo"]], "lroadm (class in mnoptical.ofcdemo.lroadm)": [[41, "mnoptical.ofcdemo.lroadm.LROADM"]], "netconfportbase (in module mnoptical.ofcdemo.lroadm)": [[41, "mnoptical.ofcdemo.lroadm.NetconfPortBase"]], "__str__() (mnoptical.ofcdemo.lroadm.lroadm method)": [[41, "mnoptical.ofcdemo.lroadm.LROADM.__str__"]], "addport() (mnoptical.ofcdemo.lroadm.lroadm method)": [[41, "mnoptical.ofcdemo.lroadm.LROADM.addport"]], "dropport() (mnoptical.ofcdemo.lroadm.lroadm method)": [[41, "mnoptical.ofcdemo.lroadm.LROADM.dropport"]], "mnoptical.ofcdemo.lroadm": [[41, "module-mnoptical.ofcdemo.lroadm"]], "password (in module mnoptical.ofcdemo.lroadm)": [[41, "mnoptical.ofcdemo.lroadm.password"]], "password (mnoptical.ofcdemo.lroadm.lroadm attribute)": [[41, "mnoptical.ofcdemo.lroadm.LROADM.password"]], "username (in module mnoptical.ofcdemo.lroadm)": [[41, "mnoptical.ofcdemo.lroadm.username"]], "username (mnoptical.ofcdemo.lroadm.lroadm attribute)": [[41, "mnoptical.ofcdemo.lroadm.LROADM.username"]], "als_disable() (mnoptical.ofcdemo.lumentum_netconf_api.lumentum method)": [[42, "mnoptical.ofcdemo.lumentum_NETCONF_API.Lumentum.ALS_disable"]], "lumentum (class in mnoptical.ofcdemo.lumentum_netconf_api)": [[42, "mnoptical.ofcdemo.lumentum_NETCONF_API.Lumentum"]], "lumentum.wssconnection (class in mnoptical.ofcdemo.lumentum_netconf_api)": [[42, "mnoptical.ofcdemo.lumentum_NETCONF_API.Lumentum.WSSConnection"]], "lumentum.wssconnectionstatus (class in mnoptical.ofcdemo.lumentum_netconf_api)": [[42, "mnoptical.ofcdemo.lumentum_NETCONF_API.Lumentum.WSSConnectionStatus"]], "lumentum_netconf (class in mnoptical.ofcdemo.lumentum_netconf_api)": [[42, "mnoptical.ofcdemo.lumentum_NETCONF_API.Lumentum_NETCONF"]], "password (in module mnoptical.ofcdemo.lumentum_netconf_api)": [[42, "mnoptical.ofcdemo.lumentum_NETCONF_API.PASSWORD"]], "username (in module mnoptical.ofcdemo.lumentum_netconf_api)": [[42, "mnoptical.ofcdemo.lumentum_NETCONF_API.USERNAME"]], "_configwss() (mnoptical.ofcdemo.lumentum_netconf_api.lumentum_netconf method)": [[42, "mnoptical.ofcdemo.lumentum_NETCONF_API.Lumentum_NETCONF._ConfigWSS"]], "_wssmonitor() (mnoptical.ofcdemo.lumentum_netconf_api.lumentum_netconf method)": [[42, "mnoptical.ofcdemo.lumentum_NETCONF_API.Lumentum_NETCONF._WSSMonitor"]], "cleanup() (mnoptical.ofcdemo.lumentum_netconf_api.lumentum method)": [[42, "mnoptical.ofcdemo.lumentum_NETCONF_API.Lumentum.cleanup"]], "connections (mnoptical.ofcdemo.lumentum_netconf_api.lumentum attribute)": [[42, "mnoptical.ofcdemo.lumentum_NETCONF_API.Lumentum.connections"]], "edfa_config() (mnoptical.ofcdemo.lumentum_netconf_api.lumentum method)": [[42, "mnoptical.ofcdemo.lumentum_NETCONF_API.Lumentum.edfa_config"]], "edfa_status() (mnoptical.ofcdemo.lumentum_netconf_api.lumentum method)": [[42, "mnoptical.ofcdemo.lumentum_NETCONF_API.Lumentum.edfa_status"]], "freqrangeghz() (mnoptical.ofcdemo.lumentum_netconf_api.lumentum static method)": [[42, "mnoptical.ofcdemo.lumentum_NETCONF_API.Lumentum.freqRangeGHz"]], "from_connection_details() (mnoptical.ofcdemo.lumentum_netconf_api.lumentum.wssconnectionstatus class method)": [[42, "mnoptical.ofcdemo.lumentum_NETCONF_API.Lumentum.WSSConnectionStatus.from_connection_details"]], "gen_dwdm_connections() (mnoptical.ofcdemo.lumentum_netconf_api.lumentum static method)": [[42, "mnoptical.ofcdemo.lumentum_NETCONF_API.Lumentum.gen_dwdm_connections"]], "lookup() (mnoptical.ofcdemo.lumentum_netconf_api.lumentum static method)": [[42, "mnoptical.ofcdemo.lumentum_NETCONF_API.Lumentum.lookup"]], "lookupstr() (mnoptical.ofcdemo.lumentum_netconf_api.lumentum static method)": [[42, "mnoptical.ofcdemo.lumentum_NETCONF_API.Lumentum.lookupstr"]], "mnoptical.ofcdemo.lumentum_netconf_api": [[42, "module-mnoptical.ofcdemo.lumentum_NETCONF_API"]], "parse() (mnoptical.ofcdemo.lumentum_netconf_api.xmltodict static method)": [[42, "mnoptical.ofcdemo.lumentum_NETCONF_API.xmltodict.parse"]], "parseconnections() (mnoptical.ofcdemo.lumentum_netconf_api.lumentum_netconf static method)": [[42, "mnoptical.ofcdemo.lumentum_NETCONF_API.Lumentum_NETCONF.parseConnections"]], "wss_add_connections() (mnoptical.ofcdemo.lumentum_netconf_api.lumentum method)": [[42, "mnoptical.ofcdemo.lumentum_NETCONF_API.Lumentum.wss_add_connections"]], "wss_delete_connection() (mnoptical.ofcdemo.lumentum_netconf_api.lumentum method)": [[42, "mnoptical.ofcdemo.lumentum_NETCONF_API.Lumentum.wss_delete_connection"]], "wss_get_connections() (mnoptical.ofcdemo.lumentum_netconf_api.lumentum method)": [[42, "mnoptical.ofcdemo.lumentum_NETCONF_API.Lumentum.wss_get_connections"]], "xmltodict (class in mnoptical.ofcdemo.lumentum_netconf_api)": [[42, "mnoptical.ofcdemo.lumentum_NETCONF_API.xmltodict"]], "connnsmap (in module mnoptical.ofcdemo.netconfserver)": [[43, "mnoptical.ofcdemo.netconfserver.ConnNsmap"]], "debug (in module mnoptical.ofcdemo.netconfserver)": [[43, "mnoptical.ofcdemo.netconfserver.Debug"]], "edfansmap (in module mnoptical.ofcdemo.netconfserver)": [[43, "mnoptical.ofcdemo.netconfserver.EdfaNsmap"]], "netconfagent (class in mnoptical.ofcdemo.netconfserver)": [[43, "mnoptical.ofcdemo.netconfserver.NetconfAgent"]], "netconfportbase (in module mnoptical.ofcdemo.netconfserver)": [[43, "mnoptical.ofcdemo.netconfserver.NetconfPortBase"]], "netconfserver (class in mnoptical.ofcdemo.netconfserver)": [[43, "mnoptical.ofcdemo.netconfserver.NetconfServer"]], "sslkeyfiledefault (in module mnoptical.ofcdemo.netconfserver)": [[43, "mnoptical.ofcdemo.netconfserver.SSLKeyFileDefault"]], "add_config() (mnoptical.ofcdemo.netconfserver.netconfagent method)": [[43, "mnoptical.ofcdemo.netconfserver.NetconfAgent.add_config"]], "add_connections() (mnoptical.ofcdemo.netconfserver.netconfagent method)": [[43, "mnoptical.ofcdemo.netconfserver.NetconfAgent.add_connections"]], "add_edfas() (mnoptical.ofcdemo.netconfserver.netconfagent method)": [[43, "mnoptical.ofcdemo.netconfserver.NetconfAgent.add_edfas"]], "configns (in module mnoptical.ofcdemo.netconfserver)": [[43, "mnoptical.ofcdemo.netconfserver.configNs"]], "debug() (in module mnoptical.ofcdemo.netconfserver)": [[43, "mnoptical.ofcdemo.netconfserver.debug"]], "delete_connection_dn() (mnoptical.ofcdemo.netconfserver.netconfagent method)": [[43, "mnoptical.ofcdemo.netconfserver.NetconfAgent.delete_connection_dn"]], "findinputpower() (mnoptical.ofcdemo.netconfserver.netconfagent method)": [[43, "mnoptical.ofcdemo.netconfserver.NetconfAgent.findInputPower"]], "findoutputpower() (mnoptical.ofcdemo.netconfserver.netconfagent method)": [[43, "mnoptical.ofcdemo.netconfserver.NetconfAgent.findOutputPower"]], "linein (in module mnoptical.ofcdemo.netconfserver)": [[43, "mnoptical.ofcdemo.netconfserver.linein"]], "lineout (in module mnoptical.ofcdemo.netconfserver)": [[43, "mnoptical.ofcdemo.netconfserver.lineout"]], "mnoptical.ofcdemo.netconfserver": [[43, "module-mnoptical.ofcdemo.netconfserver"]], "nc_append_capabilities() (mnoptical.ofcdemo.netconfserver.netconfagent method)": [[43, "mnoptical.ofcdemo.netconfserver.NetconfAgent.nc_append_capabilities"]], "nsmap (in module mnoptical.ofcdemo.netconfserver)": [[43, "mnoptical.ofcdemo.netconfserver.nsmap"]], "parseconn() (in module mnoptical.ofcdemo.netconfserver)": [[43, "mnoptical.ofcdemo.netconfserver.parseconn"]], "rpc_delete_connection() (mnoptical.ofcdemo.netconfserver.netconfagent method)": [[43, "mnoptical.ofcdemo.netconfserver.NetconfAgent.rpc_delete_connection"]], "rpc_disable_als() (mnoptical.ofcdemo.netconfserver.netconfagent method)": [[43, "mnoptical.ofcdemo.netconfserver.NetconfAgent.rpc_disable_als"]], "rpc_edit_config() (mnoptical.ofcdemo.netconfserver.netconfagent method)": [[43, "mnoptical.ofcdemo.netconfserver.NetconfAgent.rpc_edit_config"]], "rpc_get() (mnoptical.ofcdemo.netconfserver.netconfagent method)": [[43, "mnoptical.ofcdemo.netconfserver.NetconfAgent.rpc_get"]], "rpc_get_config() (mnoptical.ofcdemo.netconfserver.netconfagent method)": [[43, "mnoptical.ofcdemo.netconfserver.NetconfAgent.rpc_get_config"]], "rpc_remove_all_connections() (mnoptical.ofcdemo.netconfserver.netconfagent method)": [[43, "mnoptical.ofcdemo.netconfserver.NetconfAgent.rpc_remove_all_connections"]], "runtestserver() (in module mnoptical.ofcdemo.netconfserver)": [[43, "mnoptical.ofcdemo.netconfserver.runTestServer"]], "start() (mnoptical.ofcdemo.netconfserver.netconfserver method)": [[43, "mnoptical.ofcdemo.netconfserver.NetconfServer.start"]], "stop() (mnoptical.ofcdemo.netconfserver.netconfagent method)": [[43, "mnoptical.ofcdemo.netconfserver.NetconfAgent.stop"]], "stop() (mnoptical.ofcdemo.netconfserver.netconfserver method)": [[43, "mnoptical.ofcdemo.netconfserver.NetconfServer.stop"]], "updateconnections() (mnoptical.ofcdemo.netconfserver.netconfagent method)": [[43, "mnoptical.ofcdemo.netconfserver.NetconfAgent.updateConnections"]], "xmlstring() (in module mnoptical.ofcdemo.netconfserver)": [[43, "mnoptical.ofcdemo.netconfserver.xmlstring"]], "mnoptical.ofcdemo.simpledemo": [[44, "module-mnoptical.ofcdemo.simpledemo"]], "net (in module mnoptical.ofcdemo.simpledemo)": [[44, "mnoptical.ofcdemo.simpledemo.net"]], "quiethandler (class in mnoptical.rest)": [[45, "mnoptical.rest.QuietHandler"]], "restserver (class in mnoptical.rest)": [[45, "mnoptical.rest.RestServer"]], "cleanme() (in module mnoptical.rest)": [[45, "mnoptical.rest.cleanme"]], "config() (in module mnoptical.rest)": [[45, "mnoptical.rest.config"]], "connect() (in module mnoptical.rest)": [[45, "mnoptical.rest.connect"]], "disconnect() (in module mnoptical.rest)": [[45, "mnoptical.rest.disconnect"]], "info() (in module mnoptical.rest)": [[45, "mnoptical.rest.info"]], "interroadmlinks() (in module mnoptical.rest)": [[45, "mnoptical.rest.interRoadmLinks"]], "links() (in module mnoptical.rest)": [[45, "mnoptical.rest.links"]], "linkspec() (in module mnoptical.rest)": [[45, "mnoptical.rest.linkspec"]], "log_request() (mnoptical.rest.quiethandler method)": [[45, "mnoptical.rest.QuietHandler.log_request"]], "lookupnode() (in module mnoptical.rest)": [[45, "mnoptical.rest.lookUpNode"]], "mnoptical.rest": [[45, "module-mnoptical.rest"]], "monitor() (in module mnoptical.rest)": [[45, "mnoptical.rest.monitor"]], "monitorhandler() (in module mnoptical.rest)": [[45, "mnoptical.rest.monitorHandler"]], "monitors() (in module mnoptical.rest)": [[45, "mnoptical.rest.monitors"]], "net (mnoptical.rest.restserver attribute)": [[45, "mnoptical.rest.RestServer.net"]], "net() (in module mnoptical.rest)": [[45, "mnoptical.rest.net"]], "nodehandler() (in module mnoptical.rest)": [[45, "mnoptical.rest.nodeHandler"]], "nodes() (in module mnoptical.rest)": [[45, "mnoptical.rest.nodes"]], "opticallinks() (in module mnoptical.rest)": [[45, "mnoptical.rest.opticalLinks"]], "ports() (in module mnoptical.rest)": [[45, "mnoptical.rest.ports"]], "quiet (mnoptical.rest.quiethandler attribute)": [[45, "mnoptical.rest.QuietHandler.quiet"]], "reset() (in module mnoptical.rest)": [[45, "mnoptical.rest.reset"]], "routerlinks() (in module mnoptical.rest)": [[45, "mnoptical.rest.routerLinks"]], "rules() (in module mnoptical.rest)": [[45, "mnoptical.rest.rules"]], "set_ripple() (in module mnoptical.rest)": [[45, "mnoptical.rest.set_ripple"]], "setgain() (in module mnoptical.rest)": [[45, "mnoptical.rest.setgain"]], "start() (mnoptical.rest.restserver method)": [[45, "mnoptical.rest.RestServer.start"]], "stop() (mnoptical.rest.restserver method)": [[45, "mnoptical.rest.RestServer.stop"]], "terminallinks() (in module mnoptical.rest)": [[45, "mnoptical.rest.terminalLinks"]], "turn_on() (in module mnoptical.rest)": [[45, "mnoptical.rest.turn_on"]], "bps (in module mnoptical.terminal_params)": [[46, "mnoptical.terminal_params.bps"]], "mnoptical.terminal_params": [[46, "module-mnoptical.terminal_params"]], "rx_thresholds (in module mnoptical.terminal_params)": [[46, "mnoptical.terminal_params.rx_thresholds"]], "sr (in module mnoptical.terminal_params)": [[46, "mnoptical.terminal_params.sr"]], "ciansmalllinear (class in mnoptical.topo.cian_small_linear)": [[47, "mnoptical.topo.cian_small_linear.CIANSmallLinear"]], "build() (mnoptical.topo.cian_small_linear.ciansmalllinear static method)": [[47, "mnoptical.topo.cian_small_linear.CIANSmallLinear.build"]], "mnoptical.topo.cian_small_linear": [[47, "module-mnoptical.topo.cian_small_linear"]], "cost239topology (class in mnoptical.topo.cost239)": [[48, "mnoptical.topo.cost239.Cost239Topology"]], "build() (mnoptical.topo.cost239.cost239topology static method)": [[48, "mnoptical.topo.cost239.Cost239Topology.build"]], "build_link() (in module mnoptical.topo.cost239)": [[48, "mnoptical.topo.cost239.build_link"]], "build_links() (in module mnoptical.topo.cost239)": [[48, "mnoptical.topo.cost239.build_links"]], "build_spans() (in module mnoptical.topo.cost239)": [[48, "mnoptical.topo.cost239.build_spans"]], "mnoptical.topo.cost239": [[48, "module-mnoptical.topo.cost239"]], "deutschetelekom (class in mnoptical.topo.deutsche_telekom)": [[49, "mnoptical.topo.deutsche_telekom.DeutscheTelekom"]], "build() (mnoptical.topo.deutsche_telekom.deutschetelekom static method)": [[49, "mnoptical.topo.deutsche_telekom.DeutscheTelekom.build"]], "mnoptical.topo.deutsche_telekom": [[49, "module-mnoptical.topo.deutsche_telekom"]], "span() (in module mnoptical.topo.helper_funcs)": [[50, "mnoptical.topo.helper_funcs.Span"]], "add_amp() (in module mnoptical.topo.helper_funcs)": [[50, "mnoptical.topo.helper_funcs.add_amp"]], "build_link() (in module mnoptical.topo.helper_funcs)": [[50, "mnoptical.topo.helper_funcs.build_link"]], "build_spans() (in module mnoptical.topo.helper_funcs)": [[50, "mnoptical.topo.helper_funcs.build_spans"]], "m (in module mnoptical.topo.helper_funcs)": [[50, "mnoptical.topo.helper_funcs.m"]], "mnoptical.topo.helper_funcs": [[50, "module-mnoptical.topo.helper_funcs"]], "mnoptical.topo": [[51, "module-mnoptical.topo"]], "lineartopology (class in mnoptical.topo.linear)": [[52, "mnoptical.topo.linear.LinearTopology"]], "span() (in module mnoptical.topo.linear)": [[52, "mnoptical.topo.linear.Span"]], "add_amp() (in module mnoptical.topo.linear)": [[52, "mnoptical.topo.linear.add_amp"]], "build() (mnoptical.topo.linear.lineartopology static method)": [[52, "mnoptical.topo.linear.LinearTopology.build"]], "build_link() (in module mnoptical.topo.linear)": [[52, "mnoptical.topo.linear.build_link"]], "build_spans() (in module mnoptical.topo.linear)": [[52, "mnoptical.topo.linear.build_spans"]], "m (in module mnoptical.topo.linear)": [[52, "mnoptical.topo.linear.m"]], "mnoptical.topo.linear": [[52, "module-mnoptical.topo.linear"]], "lineartopology (class in mnoptical.topo.linear_multiloc)": [[53, "mnoptical.topo.linear_multiloc.LinearTopology"]], "build() (mnoptical.topo.linear_multiloc.lineartopology static method)": [[53, "mnoptical.topo.linear_multiloc.LinearTopology.build"]], "mnoptical.topo.linear_multiloc": [[53, "module-mnoptical.topo.linear_multiloc"]], "lineartopology (class in mnoptical.topo.linear_params)": [[54, "mnoptical.topo.linear_params.LinearTopology"]], "build() (mnoptical.topo.linear_params.lineartopology static method)": [[54, "mnoptical.topo.linear_params.LinearTopology.build"]], "mnoptical.topo.linear_params": [[54, "module-mnoptical.topo.linear_params"]], "build() (in module mnoptical.topo.ofc_demo)": [[55, "mnoptical.topo.ofc_demo.build"]], "mnoptical.topo.ofc_demo": [[55, "module-mnoptical.topo.ofc_demo"]], "ringtopology (class in mnoptical.topo.ring_topology)": [[56, "mnoptical.topo.ring_topology.RingTopology"]], "build() (mnoptical.topo.ring_topology.ringtopology static method)": [[56, "mnoptical.topo.ring_topology.RingTopology.build"]], "mnoptical.topo.ring_topology": [[56, "module-mnoptical.topo.ring_topology"]], "thz (in module mnoptical.units)": [[57, "mnoptical.units.THz"]], "w (in module mnoptical.units)": [[57, "mnoptical.units.W"]], "abs_to_db() (in module mnoptical.units)": [[57, "mnoptical.units.abs_to_db"]], "abs_to_dbm() (in module mnoptical.units)": [[57, "mnoptical.units.abs_to_dbm"]], "c (in module mnoptical.units)": [[57, "mnoptical.units.c"]], "cm (in module mnoptical.units)": [[57, "mnoptical.units.cm"]], "db_to_abs() (in module mnoptical.units)": [[57, "mnoptical.units.db_to_abs"]], "h (in module mnoptical.units)": [[57, "mnoptical.units.h"]], "km (in module mnoptical.units)": [[57, "mnoptical.units.km"]], "mw (in module mnoptical.units)": [[57, "mnoptical.units.mW"]], "mnoptical.units": [[57, "module-mnoptical.units"]], "nm (in module mnoptical.units)": [[57, "mnoptical.units.nm"]], "pi (in module mnoptical.units)": [[57, "mnoptical.units.pi"]], "ps (in module mnoptical.units)": [[57, "mnoptical.units.ps"]], "um (in module mnoptical.units)": [[57, "mnoptical.units.um"]], "mnoptical.visualization": [[58, "module-mnoptical.visualization"]], "net (in module mnoptical.visualization)": [[58, "mnoptical.visualization.net"]], "plot_power_vs_wavelength() (in module mnoptical.visualization)": [[58, "mnoptical.visualization.plot_power_vs_wavelength"]], "extract_power() (in module mnoptical.visualize_topo)": [[59, "mnoptical.visualize_topo.extract_power"]], "mnoptical.visualize_topo": [[59, "module-mnoptical.visualize_topo"]], "visualize() (in module mnoptical.visualize_topo)": [[59, "mnoptical.visualize_topo.visualize"]], "visualize_topology() (in module mnoptical.visualize_topo)": [[59, "mnoptical.visualize_topo.visualize_topology"]]}})